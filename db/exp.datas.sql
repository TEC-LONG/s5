/*
 Navicat Premium Data Transfer

 Source Server         : local
 Source Server Type    : MySQL
 Source Server Version : 50524
 Source Host           : localhost:3306
 Source Schema         : exp

 Target Server Type    : MySQL
 Target Server Version : 50524
 File Encoding         : 65001

 Date: 25/12/2019 20:24:39
*/

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for cat
-- ----------------------------
DROP TABLE IF EXISTS `cat`;
CREATE TABLE `cat`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `pid` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT 'parent id',
  `name` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '分类名称',
  `level` tinyint(4) NOT NULL DEFAULT 0 COMMENT '分类层级',
  `is_lower` tinyint(4) NOT NULL DEFAULT 0 COMMENT '是否最下层',
  `addtime` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '添加时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = MyISAM AUTO_INCREMENT = 12 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of cat
-- ----------------------------
INSERT INTO `cat` VALUES (1, 0, 'git', 1, 1, 1571863196);
INSERT INTO `cat` VALUES (2, 1, '学习git的使用', 2, 1, 1571863221);
INSERT INTO `cat` VALUES (3, 0, 'vim', 1, 1, 1571868154);
INSERT INTO `cat` VALUES (4, 3, 'vim-linux', 2, 1, 1571868170);
INSERT INTO `cat` VALUES (5, 3, 'gvim', 2, 1, 1571868199);
INSERT INTO `cat` VALUES (6, 0, 'linux', 1, 1, 1571874020);
INSERT INTO `cat` VALUES (7, 1, 'git使用中遇到的问题', 2, 1, 1571874667);
INSERT INTO `cat` VALUES (8, 6, '软件安装', 2, 1, 1571939689);
INSERT INTO `cat` VALUES (9, 6, 'linux快捷键和常用操作', 2, 1, 1572226163);
INSERT INTO `cat` VALUES (10, 0, 'python', 1, 1, 1572369947);
INSERT INTO `cat` VALUES (11, 10, 'python基础', 2, 1, 1572369985);

-- ----------------------------
-- Table structure for chifan
-- ----------------------------
DROP TABLE IF EXISTS `chifan`;
CREATE TABLE `chifan`  (
  `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `post_date` int(10) UNSIGNED NOT NULL DEFAULT 0,
  `cai` varchar(100) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '菜品',
  `type` tinyint(1) UNSIGNED NULL DEFAULT 0 COMMENT '类型',
  `expnew_ids` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '关联文章id集合',
  `expnew_titles` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '关联文章title集合',
  `descr` text CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '描述',
  `food_type` tinyint(1) UNSIGNED NULL DEFAULT 0 COMMENT '食物类型',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = MyISAM AUTO_INCREMENT = 17 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of chifan
-- ----------------------------
INSERT INTO `chifan` VALUES (1, 0, '盐菜（妈妈）', 1, '', '', '', 1);
INSERT INTO `chifan` VALUES (2, 0, '泡饭', 1, '', '', '', 0);
INSERT INTO `chifan` VALUES (3, 0, '白粥', 1, '', '', '', 0);
INSERT INTO `chifan` VALUES (4, 0, '自制油辣子拌面', 1, '', '', '', 0);
INSERT INTO `chifan` VALUES (5, 0, '榨菜', 1, '', '', '', 1);
INSERT INTO `chifan` VALUES (6, 0, '煎蛋', 1, '', '', '', 2);
INSERT INTO `chifan` VALUES (7, 0, '煮鸡蛋', 1, '', '', '', 2);
INSERT INTO `chifan` VALUES (8, 0, '茶叶蛋', 1, '', '', '', 2);
INSERT INTO `chifan` VALUES (9, 0, '自制酱牛肉汤面', 1, '', '', '', 0);
INSERT INTO `chifan` VALUES (10, 0, '饺子', 1, '', '', '', 0);
INSERT INTO `chifan` VALUES (11, 0, '煎牛肉卷饼', 1, '', '', '', 0);
INSERT INTO `chifan` VALUES (12, 0, '纯牛奶', 1, '', '', '', 4);
INSERT INTO `chifan` VALUES (13, 0, '黑豆龙眼豆浆', 1, '', '', '', 4);
INSERT INTO `chifan` VALUES (14, 0, '包子', 1, '', '', '', 0);
INSERT INTO `chifan` VALUES (15, 0, '土豆片炒肉', 0, '', '', '', 3);
INSERT INTO `chifan` VALUES (16, 0, '窝蛋肉饼汤', 2, '', '', '', 5);

-- ----------------------------
-- Table structure for editormd_img
-- ----------------------------
DROP TABLE IF EXISTS `editormd_img`;
CREATE TABLE `editormd_img`  (
  `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `post_date` int(10) UNSIGNED NOT NULL DEFAULT 0,
  `img` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '路径',
  `token` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '令牌',
  `has_use` tinyint(1) UNSIGNED NULL DEFAULT 0 COMMENT '是否已使用',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 103 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Compact;

-- ----------------------------
-- Records of editormd_img
-- ----------------------------
INSERT INTO `editormd_img` VALUES (1, 1574786346, 'public/tools/editormdimg/201911/editormd_5ddd552a5621020191126163906.1.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (2, 1574786455, 'public/tools/editormdimg/201911/editormd_5ddd5597239a820191126164055.2.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (3, 1574789647, 'public/tools/editormdimg/201911/editormd_5ddd620f899c620191126173407.3.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (4, 1574789714, 'public/tools/editormdimg/201911/editormd_5ddd6252f38d320191126173514.4.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (5, 1574790664, 'public/tools/editormdimg/201911/editormd_5ddd6608e74db20191126175104.5.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (6, 1574791412, 'public/tools/editormdimg/201911/editormd_5ddd68f4214ed20191126180332.6.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (7, 1574813360, 'public/tools/editormdimg/201911/editormd_5dddbeb050a7920191127000920.7.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (8, 1574813593, 'public/tools/editormdimg/201911/editormd_5dddbf99aa91520191127001313.8.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (9, 1574865047, 'public/tools/editormdimg/201911/editormd_5dde8897ed75e20191127143047.9.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (10, 1574865107, 'public/tools/editormdimg/201911/editormd_5dde88d34419920191127143147.10.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (11, 1574866080, 'public/tools/editormdimg/201911/editormd_5dde8ca06c4cb20191127144800.11.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (12, 1574866307, 'public/tools/editormdimg/201911/editormd_5dde8d83cd35720191127145147.12.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (13, 1574866385, 'public/tools/editormdimg/201911/editormd_5dde8dd14867e20191127145305.13.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (14, 1574908390, 'public/tools/editormdimg/201911/editormd_5ddf31e6b71f520191128023310.14.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (15, 1574910202, 'public/tools/editormdimg/201911/editormd_5ddf38faded5620191128030322.15.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (16, 1574910844, 'public/tools/editormdimg/201911/editormd_5ddf3b7cd557d20191128031404.16.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (17, 1574911002, 'public/tools/editormdimg/201911/editormd_5ddf3c1a51f2220191128031642.17.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (18, 1574911599, 'public/tools/editormdimg/201911/editormd_5ddf3e6f3aaea20191128032639.18.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (19, 1574947370, 'public/tools/editormdimg/201911/editormd_5ddfca2aa8bf020191128132250.19.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (20, 1574947505, 'public/tools/editormdimg/201911/editormd_5ddfcab1b0d8420191128132505.20.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (21, 1574947806, 'public/tools/editormdimg/201911/editormd_5ddfcbde0ac0020191128133006.21.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (22, 1574947874, 'public/tools/editormdimg/201911/editormd_5ddfcc225be7620191128133114.22.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (23, 1574947983, 'public/tools/editormdimg/201911/editormd_5ddfcc8fdbc8020191128133303.23.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (24, 1574948015, 'public/tools/editormdimg/201911/editormd_5ddfccafda10520191128133335.24.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (25, 1574948036, 'public/tools/editormdimg/201911/editormd_5ddfccc47035f20191128133356.25.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (26, 1574948158, 'public/tools/editormdimg/201911/editormd_5ddfcd3e07a3d20191128133558.26.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (27, 1574948174, 'public/tools/editormdimg/201911/editormd_5ddfcd4e920e220191128133614.27.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (28, 1574948192, 'public/tools/editormdimg/201911/editormd_5ddfcd60109fa20191128133632.28.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (29, 1574948226, 'public/tools/editormdimg/201911/editormd_5ddfcd8214f9420191128133706.29.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (30, 1574948246, 'public/tools/editormdimg/201911/editormd_5ddfcd96e9baf20191128133726.30.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (31, 1574948276, 'public/tools/editormdimg/201911/editormd_5ddfcdb49bfd320191128133756.31.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (32, 1574948299, 'public/tools/editormdimg/201911/editormd_5ddfcdcbe03d220191128133819.32.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (33, 1574948321, 'public/tools/editormdimg/201911/editormd_5ddfcde1b84a920191128133841.33.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (34, 1574948421, 'public/tools/editormdimg/201911/editormd_5ddfce45ab27620191128134021.34.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (35, 1574948446, 'public/tools/editormdimg/201911/editormd_5ddfce5e9167f20191128134046.35.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (36, 1574948488, 'public/tools/editormdimg/201911/editormd_5ddfce883109e20191128134128.36.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (37, 1574948512, 'public/tools/editormdimg/201911/editormd_5ddfcea02ef1720191128134152.37.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (38, 1574948549, 'public/tools/editormdimg/201911/editormd_5ddfcec580a6320191128134229.38.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (39, 1574948579, 'public/tools/editormdimg/201911/editormd_5ddfcee34d11a20191128134259.39.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (40, 1574948606, 'public/tools/editormdimg/201911/editormd_5ddfcefe69d9f20191128134326.40.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (41, 1574949139, 'public/tools/editormdimg/201911/editormd_5ddfd1130255d20191128215219.41.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (42, 1574949192, 'public/tools/editormdimg/201911/editormd_5ddfd1485079620191128215312.42.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (43, 1574949211, 'public/tools/editormdimg/201911/editormd_5ddfd15b17b2020191128215331.43.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (44, 1574949232, 'public/tools/editormdimg/201911/editormd_5ddfd1707e64420191128215352.44.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (45, 1574949246, 'public/tools/editormdimg/201911/editormd_5ddfd17e71a4620191128215406.45.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (46, 1574949260, 'public/tools/editormdimg/201911/editormd_5ddfd18c006c720191128215420.46.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (47, 1574949275, 'public/tools/editormdimg/201911/editormd_5ddfd19b4038d20191128215435.47.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (48, 1574949308, 'public/tools/editormdimg/201911/editormd_5ddfd1bc15ae920191128215508.48.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (49, 1574949324, 'public/tools/editormdimg/201911/editormd_5ddfd1cc9bd9120191128215524.49.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (50, 1574949348, 'public/tools/editormdimg/201911/editormd_5ddfd1e42031920191128215548.50.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (51, 1574949369, 'public/tools/editormdimg/201911/editormd_5ddfd1f95ddfe20191128215609.51.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (52, 1574949381, 'public/tools/editormdimg/201911/editormd_5ddfd205ec19d20191128215621.52.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (53, 1574949411, 'public/tools/editormdimg/201911/editormd_5ddfd2232254520191128215651.53.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (54, 1574949425, 'public/tools/editormdimg/201911/editormd_5ddfd2316dddb20191128215705.54.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (55, 1574949443, 'public/tools/editormdimg/201911/editormd_5ddfd243bb2c120191128215723.55.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (56, 1574949458, 'public/tools/editormdimg/201911/editormd_5ddfd252af22a20191128215738.56.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (57, 1574949481, 'public/tools/editormdimg/201911/editormd_5ddfd269d6d1620191128215801.57.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (58, 1574949496, 'public/tools/editormdimg/201911/editormd_5ddfd2783e56a20191128215816.58.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (59, 1575040261, 'public/tools/editormdimg/201911/editormd_5de135052166120191129231101.59.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (60, 1575040303, 'public/tools/editormdimg/201911/editormd_5de1352fea96d20191129231143.60.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (61, 1575040343, 'public/tools/editormdimg/201911/editormd_5de135577601f20191129231223.61.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (62, 1575040444, 'public/tools/editormdimg/201911/editormd_5de135bce037020191129231404.62.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (63, 1575040678, 'public/tools/editormdimg/201911/editormd_5de136a67263a20191129231758.63.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (64, 1575040702, 'public/tools/editormdimg/201911/editormd_5de136be9f2e820191129231822.64.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (65, 1575040738, 'public/tools/editormdimg/201911/editormd_5de136e242a5020191129231858.65.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (66, 1575040814, 'public/tools/editormdimg/201911/editormd_5de1372ee108220191129232014.66.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (67, 1575040868, 'public/tools/editormdimg/201911/editormd_5de137646e24820191129232108.67.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (68, 1575040903, 'public/tools/editormdimg/201911/editormd_5de137872cf4920191129232143.68.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (69, 1575040946, 'public/tools/editormdimg/201911/editormd_5de137b26928d20191129232226.69.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (70, 1575041037, 'public/tools/editormdimg/201911/editormd_5de1380dabbb720191129232357.70.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (71, 1575041060, 'public/tools/editormdimg/201911/editormd_5de138249d17720191129232420.71.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (72, 1575041081, 'public/tools/editormdimg/201911/editormd_5de13839eed5320191129232441.72.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (73, 1575041103, 'public/tools/editormdimg/201911/editormd_5de1384f100b520191129232503.73.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (74, 1575041128, 'public/tools/editormdimg/201911/editormd_5de138680256f20191129232528.74.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (75, 1575041159, 'public/tools/editormdimg/201911/editormd_5de138877f0d020191129232559.75.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (76, 1575041195, 'public/tools/editormdimg/201911/editormd_5de138ab0d57020191129232635.76.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (77, 1575041219, 'public/tools/editormdimg/201911/editormd_5de138c33a18220191129232659.77.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (78, 1575041244, 'public/tools/editormdimg/201911/editormd_5de138dc783fd20191129232724.78.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (79, 1575041568, 'public/tools/editormdimg/201911/editormd_5de13a20512df20191129233248.79.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (80, 1575273431, 'public/tools/editormdimg/201912/editormd_5de4c3d7e32dc20191202155711.80.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (81, 1575273459, 'public/tools/editormdimg/201912/editormd_5de4c3f36187a20191202155739.81.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (82, 1575273482, 'public/tools/editormdimg/201912/editormd_5de4c40a6fe1a20191202155802.82.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (83, 1575274323, 'public/tools/editormdimg/201912/editormd_5de4c75363e4c20191202161203.83.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (84, 1575274417, 'public/tools/editormdimg/201912/editormd_5de4c7b1a152a20191202161337.84.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (85, 1575274447, 'public/tools/editormdimg/201912/editormd_5de4c7cf159a420191202161407.85.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (86, 1575460992, 'public/tools/editormdimg/201912/editormd_5de7a0803f1a620191204200312.86.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (87, 1575461384, 'public/tools/editormdimg/201912/editormd_5de7a208c4d3d20191204200944.87.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (88, 1575512273, 'public/tools/editormdimg/201912/editormd_5de868d15914b20191205101753.88.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (89, 1575512449, 'public/tools/editormdimg/201912/editormd_5de86981ce0e720191205102049.89.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (90, 1575512617, 'public/tools/editormdimg/201912/editormd_5de86a293073220191205102337.90.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (91, 1575512963, 'public/tools/editormdimg/201912/editormd_5de86b832131a20191205102923.91.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (92, 1575609604, 'public/tools/editormdimg/201912/editormd_5de9e50406baa20191206132004.92.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (93, 1575612879, 'public/tools/editormdimg/201912/editormd_5de9f1cfaa75e20191206141439.93.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (94, 1575626423, 'public/tools/editormdimg/201912/editormd_5dea26b7c67d720191206180023.94.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (95, 1575626459, 'public/tools/editormdimg/201912/editormd_5dea26dbb303a20191206180059.95.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (96, 1576037077, 'public/tools/editormdimg/201912/editormd_5df06ad5259cf20191211120437.96.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (97, 1576810805, 'public/tools/editormdimg/201912/editormd_5dfc3935312a820191220110005.97.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (98, 1577071814, 'public/tools/editormdimg/201912/editormd_5e0034c651b0220191223113014.98.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (99, 1577155391, 'public/tools/editormdimg/201912/editormd_5e017b3f61e6320191224104311.99.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (100, 1577156528, 'public/tools/editormdimg/201912/editormd_5e017fb0cd26020191224110208.100.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (101, 1577156634, 'public/tools/editormdimg/201912/editormd_5e01801a95e3a20191224110354.101.jpg', '', 0);
INSERT INTO `editormd_img` VALUES (102, 1577156786, 'public/tools/editormdimg/201912/editormd_5e0180b2ae38520191224110626.102.jpg', '', 0);

-- ----------------------------
-- Table structure for exp
-- ----------------------------
DROP TABLE IF EXISTS `exp`;
CREATE TABLE `exp`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `cat_id` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '所属分类id',
  `title` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '标题',
  `content` text CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '经验内容',
  `addtime` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '添加时间',
  `tags` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '标签',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = MyISAM AUTO_INCREMENT = 30 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of exp
-- ----------------------------
INSERT INTO `exp` VALUES (1, 2, 'git简介', '# 一、GIT的诞生\r\n很多人都知道，Linus在1991年创建了开源的Linux，从此，Linux系统不断发展，已经成为最大的服务器系统软件了。\r\nLinus虽然创建了Linux，但Linux的壮大是靠全世界热心的志愿者参与的，这么多人在世界各地为Linux编写代码，那Linux的代码是如何管理的呢？\r\n事实是，在2002年以前，世界各地的志愿者把源代码文件通过diff的方式发给Linus，然后由Linus本人通过手工方式合并代码！\r\n你也许会想，为什么Linus不把Linux代码放到版本控制系统里呢？不是有CVS、SVN这些免费的版本控制系统吗？因为Linus坚定地反对CVS和SVN，这些集中式的版本控制系统不但速度慢，而且必须联网才能使用。有一些商用的版本控制系统，虽然比CVS、SVN好用，但那是付费的，和Linux的开源精神不符。\r\n不过，到了2002年，Linux系统已经发展了十年了，代码库之大让Linus很难继续通过手工方式管理了，社区的弟兄们也对这种方式表达了强烈不满，于是Linus选择了一个商业的版本控制系统BitKeeper，BitKeeper的东家BitMover公司出于人道主义精神，授权Linux社区免费使用这个版本控制系统。\r\n安定团结的大好局面在2005年就被打破了，原因是Linux社区牛人聚集，不免沾染了一些梁山好汉的江湖习气。开发Samba的Andrew试图破解BitKeeper的协议（这么干的其实也不只他一个），被BitMover公司发现了（监控工作做得不错！），于是BitMover公司怒了，要收回Linux社区的免费使用权。\r\nLinus可以向BitMover公司道个歉，保证以后严格管教弟兄们，嗯，这是不可能的。实际情况是这样的：\r\nLinus花了两周时间自己用C写了一个分布式版本控制系统，这就是Git！一个月之内，Linux系统的源码已经由Git管理了！牛是怎么定义的呢？大家可以体会一下。\r\nGit迅速成为最流行的分布式版本控制系统，尤其是2008年，GitHub网站上线了，它为开源项目免费提供Git存储，无数开源项目开始迁移至GitHub，包括jQuery，PHP，Ruby等等。\r\n历史就是这么偶然，如果不是当年BitMover公司威胁Linux社区，可能现在我们就没有免费而超级好用的Git了。\r\n# 二、GIT的安装\r\n## 1.windows ENV\r\n    查看所有配置项：git  config  [--global]  -l\r\n![](/templates/uploads/8Jizj32SemW88HB.png)', 1571863518, 'git,git诞生,git简介');
INSERT INTO `exp` VALUES (2, 2, 'git的使用', '# GIT的使用\r\n## 1. 创建版本库\r\n\r\n\r\n    创建版本仓库：git  init\r\n    查看状态：git  status\r\n![](/templates/uploads/vFU2sLrMfIt8PzP.png)\r\n\r\n\r\n    添加文件到暂存区：git  add  [xx/xxx/x.xx]\r\n    提交文件：git  commit  [-m  “comments”]\r\n## 2.版本回退（回到过去）\r\n在Git中，用HEAD表示当前版本，上一个版本就是`HEAD^`，上上一个版本就是`HEAD^^`，当然往上100个版本写100个^比较容易数不过来，所以写成`HEAD~100`。\r\n\r\n\r\n    查看往期版本：git log [--pretty=oneline]\r\n![](/templates/uploads/tAEY89t6KfnsjRL.png)\r\n\r\n\r\n\r\n    回退版本：git  reset  --hard  xxxxxx\r\n![](/templates/uploads/ZiW7mqyBYDYr2R2.png)\r\n\r\n## 3.版本前进（回到未来）\r\n现在，你回退到了某个版本，关掉了电脑，第二天早上就后悔了，想恢复到新版本怎么办？找不到新版本的`commit id`怎么办？\r\n在Git中，总是有后悔药可以吃的。当你用`$ git reset --hard HEAD^`回退到part of day1 and day2all版本时，再想恢复到append GPL，就必须找到append GPL的commit id。Git提供了一个命令`git reflog`用来记录你的每一次命令。\r\n\r\n\r\n    查看以往所操作的全部指令：git  reflog\r\n![](/templates/uploads/PAMLZ5ifzvrIa4u.png)\r\n版本前进操作之前：\r\n![](/templates/uploads/gR3EHiPAh7pvfob.png)\r\n版本前进操作之后：\r\n![](/templates/uploads/KFVRuT71LFCEtlx.png)\r\n\r\n## 4.撤销修改\r\n\r\n\r\n    操作指令：git  checkout  --  xxx.xx\r\n\r\n***注意***：不能撤销添加文件操作。\r\n![](/templates/uploads/QfBFrWNQDUsWnrU.png)\r\n\r\n![](/templates/uploads/1wEFLJCq8XiWLyJ.png)\r\n\r\n![](/templates/uploads/oPMTMtQVopr7Auj.png)\r\n\r\n### 单纯撤销修改（未执行git add）\r\n修改前t1.txt文件的内容：\r\n![](/templates/uploads/lQIpLUdFxpM7WUd.png)\r\n\r\n将t1.txt文件进行修改：\r\n\r\n![](/templates/uploads/joghlG0EstTaQWG.png)\r\n\r\n![](/templates/uploads/GdTpFT59B8QSj5h.png)\r\n\r\n执行撤销修改操作：\r\n\r\n![](/templates/uploads/BNbN0lB9xycXUZP.png)\r\n\r\n查看t1.txt文件，发现该文件之前所作的修改操作全部被撤销了，\r\n\r\n![](/templates/uploads/LSEkOSYHl0rR6Nf.png)\r\n\r\n### 撤销修改（执行了git add）\r\n修改前t1.txt文件的内容：\r\n![](/templates/uploads/K77cONqhLcOV509.png)\r\n\r\n将t1.txt文件进行修改，并且执行git add提交操作：\r\n![](/templates/uploads/AQ584TCIVuQy5e1.png)\r\n\r\n![](/templates/uploads/fgb50iIqrnfvHdg.png)\r\n\r\n此时后悔了，想执行撤销操作：\r\n1）根据提示先执行git reset操作，把暂存区的修改撤销掉（git add操作是将文件提交到暂存区）\r\n\r\n![](/templates/uploads/pG1u97wp7POY7Z6.png)\r\n\r\n但是t1.txt修改后的内容还在，\r\n\r\n![](/templates/uploads/gUrJq2bWXoWLAbB.png)\r\n\r\n2）再执行git checkout操作撤销修改\r\n\r\n![](/templates/uploads/nGJNcabTo4KvU6Z.png)\r\n\r\n再次查看t1.txt，发现修改的内容被撤销了（相当于丢弃了对工作区中t1.txt的修改），\r\n\r\n![](/templates/uploads/PnfFNvJ4mXBem25.png)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n', 1571865168, 'git,使用git,git操作');
INSERT INTO `exp` VALUES (3, 2, 'github远程仓库', '需要向github账户中添加本地SSH Key，以后在本地修改才能推送到github远程仓库中。\r\n\r\n![](/templates/uploads/9PdkQwfvUlZudBi.png)\r\n\r\n# 为github帐号添加ssh key\r\n在本地计算机上生成SSH Key：\r\n\r\n![](/templates/uploads/dkRxg3UZWpyRdVf.png)\r\n\r\n打开c://Users/Administrator/.ssh/id_rsa.pub，复制全部内容\r\n\r\n![](/templates/uploads/szAeJ1vuORE9jqI.png)\r\n\r\n登陆github，按下图顺序进入SSH添加界面\r\n\r\n![](/templates/uploads/4M2Z84i1AxATisy.png)\r\n\r\n![](/templates/uploads/T6T8bRhjYEn03UE.png)\r\n\r\n![](/templates/uploads/8me59jIXRtI3zez.png)\r\n\r\n点击Add SSH key，\r\n\r\n![](/templates/uploads/tqclx3gTpxRd3I7.png)\r\n\r\n如上图所示，添加成功！\r\n\r\n# 添加远程库（将本地仓库关联github仓库）\r\n## 1）创建本地仓库\r\n\r\n![](/templates/uploads/OB88rPz9K00epjl.png)\r\n\r\n添加文件进行各种操作：\r\n\r\n![](/templates/uploads/mB3MKJjEJ0mhbyZ.png)\r\n\r\n操作之后本地仓库中的文件：\r\n\r\n![](/templates/uploads/KcMVcjOFdZbWVGw.png)\r\n\r\n## 2）创建github远程仓库\r\n\r\n![](/templates/uploads/lkFBQOgMOsPet9j.png)\r\n\r\n![](/templates/uploads/XF2SKOLTFp99iZ9.png)\r\n\r\n## 3）关联本地仓库到github远程仓库\r\na. 将本地仓库添加关联远程仓库\r\n\r\n![](/templates/uploads/fMsLjNrFcrcdtuH.png)\r\n\r\n![](/templates/uploads/R1hzbFFsMJNoklO.png)\r\n\r\nb. 将本地库的所有内容推送到github远程仓库\r\n\r\n![](/templates/uploads/oVJ1QkFvilFx8Fn.png)\r\n\r\n![](/templates/uploads/4JXn6wv2QcIK3pn.png)\r\n\r\n推送成功后，我们可以在github页面中看到远程仓库的内容：\r\n\r\n![](/templates/uploads/O0gRZbM8qaLZ3FN.png)\r\n\r\n![](/templates/uploads/ViEJ1tNOKcCaF90.png)\r\n\r\n', 1571866175, 'git,远程仓库');
INSERT INTO `exp` VALUES (4, 2, '分支管理', '![](/templates/uploads/OhgvtF3vqrOMGmY.png)\r\n\r\n![](/templates/uploads/wR3Iq1MIbJvJJ3J.png)\r\n\r\n![](/templates/uploads/wpCSWVjCXdyz550.png)\r\n\r\n![](/templates/uploads/VlD9mKrcjNa4RlU.png)\r\n\r\n![](/templates/uploads/mbYPlyoy1G1NVqJ.png)\r\n\r\n![](/templates/uploads/sDKCinIDsExCLvq.png)\r\n\r\n# 案例1：创建与合并分支\r\n\r\n![](/templates/uploads/U2oQD5DRXOpSfKy.png)\r\n\r\n# 案例2：解决冲突\r\n\r\n![](/templates/uploads/dIvVhVgHoCyDNOd.png)\r\n\r\n# 案例3：分支管理策略\r\n\r\n![](/templates/uploads/1nE1eyEKqXxgi5Q.png)\r\n\r\n# 案例4：BUG分支\r\n软件开发中，bug就像家常便饭一样。有了bug就需要修复，在Git中，每个bug都可以通过一个新的临时分支来修复，修复后，合并分支，然后将临时分支删除。\r\n\r\n假设当前正在dev分支上进行开发，\r\n![](/templates/uploads/zaCiXP0TPM5hjhA.png)\r\n\r\n但是临时接到一个修改`master`分支BUG的任务，所以现在需要根据`master`分支新建一个分支，比如`debug-001`，在这个分支上去修复BUG。\r\n但是，当前我在`dev`分支上开发到一半，尚未开发完，没法提交，预估还需要几天时间开发`dev`，而BUG需要立即去解决，否则影响项目正常运行，怎么办？\r\nGIT中提供了stash功能，可以将当前的工作现场“保存”起来，以后有需要可以恢复现场继续工作。\r\n:tw-1f170: :tw-1f6a9:***注意***：在执行stash之前，必须先将所有工作区中的文件添加到暂存区，否则工作区中的文件将无法保存进stash中。\r\n\r\n![](/templates/uploads/ISLPd2QhZpMGYir.png)\r\n\r\n执行git  stash指令将当前分支工作现场保存起来：\r\n\r\n![](/templates/uploads/x8eRkbdheDVdXz2.png)\r\n\r\n![](/templates/uploads/Z2GX7fbFtb8winC.png)\r\n\r\n保存工作现场后，再切换回master分支修改BUG，\r\n\r\n![](/templates/uploads/6fPBrloJE3UrTYT.png)\r\n\r\n在debug-001分支上解决BUG：\r\n\r\n![](/templates/uploads/tSA4wsjmBRqg1nA.png)\r\n\r\n解决完BUG后，切换回master分支，并且在master分支上合并debug-001分支：\r\n\r\n![](/templates/uploads/UDQUVRM2L8SPzZb.png)\r\n\r\n再删除debug-001分支：\r\n\r\n![](/templates/uploads/sUAwm4985BN7d6z.png)\r\n\r\n到此，BUG已经解决了。此时我需要继续dev分支上的工作，所以需要将之前保存起来的stash现场进行恢复，\r\n\r\n![](/templates/uploads/HWFpLxx1DbtMWD6.png)\r\n\r\n因为我们之前只有一个stash，而这个stash@{0}在恢复后就被删除了，所以此时stash列表为空，\r\n\r\n![](/templates/uploads/jHJd58YkctGpbkI.png)\r\n\r\n', 1571867006, 'git,分支');
INSERT INTO `exp` VALUES (5, 2, '多人协同开发', '当你从远程仓库克隆时，实际上Git自动把本地的`master`分支和远程的`master`分支对应起来了，并且，远程仓库的默认名称是`origin`。\r\n要查看远程库的信息，用`git remote`：\r\n\r\n    $ git remote\r\n    origin\r\n\r\n或者，用`git remote -v`显示更详细的信息：\r\n\r\n    $ git remote -v\r\n    origin  git@github.com:michaelliao/learngit.git (fetch)\r\n    origin  git@github.com:michaelliao/learngit.git (push)\r\n\r\n上面显示了可以抓取和推送的`origin`的地址。如果没有推送权限，就看不到push的地址。\r\n\r\n# 推送分支\r\n推送分支，就是把该分支上的所有本地提交推送到远程库。推送时，要指定本地分支，这样，Git就会把该分支推送到远程库对应的远程分支上：\r\n\r\n    $ git push origin master\r\n\r\n如果要推送其他分支，比如`dev`，就改成：\r\n\r\n    $ git push origin dev\r\n\r\n但是，并不是一定要把本地分支往远程推送，那么，哪些分支需要推送，哪些不需要呢？\r\n- `master`分支是主分支，因此要时刻与远程同步；\r\n- `dev`分支是开发分支，团队所有成员都需要在上面工作，所以也需要与远程同步；\r\n- `bug`分支只用于在本地修复bug，就没必要推到远程了，除非老板要看看你每周到底修复了几个bug；\r\n- `feature`分支是否推到远程，取决于你是否和你的小伙伴合作在上面开发。\r\n总之，就是在Git中，分支完全可以在本地自己藏着玩，是否推送，视你的心情而定！\r\n\r\n# 抓取分支\r\n多人协作时，大家都会往`master`和`dev`分支上推送各自的修改。\r\n现在，模拟一个你的小伙伴，可以在另一台电脑（注意要把SSH Key添加到GitHub）或者同一台电脑的另一个目录下克隆：\r\n\r\n    $ git clone git@github.com:michaelliao/learngit.git\r\n    Cloning into \'learngit\'...\r\n    remote: Counting objects: 46, done.\r\n    remote: Compressing objects: 100% (26/26), done.\r\n    remote: Total 46 (delta 16), reused 45 (delta 15)\r\n    Receiving objects: 100% (46/46), 15.69 KiB | 6 KiB/s, done.\r\n    Resolving deltas: 100% (16/16), done.\r\n\r\n当你的小伙伴从远程库clone时，默认情况下，你的小伙伴只能看到本地的`master`分支。不信可以用`git branch`命令看看：\r\n\r\n    $ git branch\r\n    * master\r\n\r\n现在，你的小伙伴要在`dev`分支上开发，就必须创建远程`origin`的`dev`分支到本地，于是他用这个命令创建本地`dev`分支：\r\n\r\n    $ git checkout -b dev origin/dev\r\n\r\n现在，他就可以在dev上继续修改，然后，时不时地把dev分支push到远程：\r\n\r\n    $ git commit -m &quot;add /usr/bin/env&quot;\r\n    [dev 291bea8] add /usr/bin/env\r\n     1 file changed, 1 insertion(+)\r\n    $ git push origin dev\r\n    Counting objects: 5, done.\r\n    Delta compression using up to 4 threads.\r\n    Compressing objects: 100% (2/2), done.\r\n    Writing objects: 100% (3/3), 349 bytes, done.\r\n    Total 3 (delta 0), reused 0 (delta 0)\r\n    To git@github.com:michaelliao/learngit.git\r\n       fc38031..291bea8  dev -&gt; dev\r\n\r\n你的小伙伴已经向`origin/dev`分支推送了他的提交，而碰巧你也对同样的文件作了修改，并试图推送：\r\n\r\n    $ git add hello.py \r\n    $ git commit -m &quot;add coding: utf-8&quot;\r\n    [dev bd6ae48] add coding: utf-8\r\n     1 file changed, 1 insertion(+)\r\n    $ git push origin dev\r\n    To git@github.com:michaelliao/learngit.git\r\n     ! [rejected]        dev -&gt; dev (non-fast-forward)\r\n    error: failed to push some refs to \'git@github.com:michaelliao/learngit.git\'\r\n    hint: Updates were rejected because the tip of your current branch is behind\r\n    hint: its remote counterpart. Merge the remote changes (e.g. \'git pull\')\r\n    hint: before pushing again.\r\n    hint: See the \'Note about fast-forwards\' in \'git push --help\' for details.\r\n\r\n推送失败，因为你的小伙伴的最新提交和你试图推送的提交有冲突，解决办法也很简单，Git已经提示我们，先用`git pull`把最新的提交从`origin/dev`抓下来，然后，在本地合并，解决冲突，再推送：\r\n\r\n    $ git pull\r\n    remote: Counting objects: 5, done.\r\n    remote: Compressing objects: 100% (2/2), done.\r\n    remote: Total 3 (delta 0), reused 3 (delta 0)\r\n    Unpacking objects: 100% (3/3), done.\r\n    From github.com:michaelliao/learngit\r\n       fc38031..291bea8  dev        -&gt; origin/dev\r\n    There is no tracking information for the current branch.\r\n    Please specify which branch you want to merge with.\r\n    See git-pull(1) for details\r\n    \r\n        git pull &lt;remote&gt; &lt;branch&gt;\r\n    \r\n    If you wish to set tracking information for this branch you can do so with:\r\n    \r\n        git branch --set-upstream dev origin/&lt;branch&gt;\r\n\r\n`git pull`也失败了，原因是没有指定本地dev分支与远程`origin/dev`分支的链接，根据提示，设置`dev`和`origin/dev`的链接：\r\n\r\n    $ git branch --set-upstream dev origin/dev\r\n    Branch dev set up to track remote branch dev from origin.\r\n\r\n再pull：\r\n\r\n    $ git pull\r\n    Auto-merging hello.py\r\n    CONFLICT (content): Merge conflict in hello.py\r\n    Automatic merge failed; fix conflicts and then commit the result.\r\n\r\n这回`git pull`成功，但是合并有冲突，需要手动解决，解决的方法和分支管理中的解决冲突完全一样。解决后，提交，再push：\r\n\r\n    $ git commit -m &quot;merge &amp; fix hello.py&quot;\r\n    [dev adca45d] merge &amp; fix hello.py\r\n    $ git push origin dev\r\n    Counting objects: 10, done.\r\n    Delta compression using up to 4 threads.\r\n    Compressing objects: 100% (5/5), done.\r\n    Writing objects: 100% (6/6), 747 bytes, done.\r\n    Total 6 (delta 0), reused 0 (delta 0)\r\n    To git@github.com:michaelliao/learngit.git\r\n       291bea8..adca45d  dev -&gt; dev\r\n\r\n因此，多人协作的工作模式通常是这样：\r\n1. 首先，可以试图用`git push origin branch-name`推送自己的修改；\r\n2. 如果推送失败，则因为远程分支比你的本地更新，需要先用`git pull`试图合并；\r\n3. 如果合并有冲突，则解决冲突，并在本地提交；\r\n4. 没有冲突或者解决掉冲突后，再用`git push origin branch-name`推送就能成功！\r\n如果`git pull`提示“no tracking information”，则说明本地分支和远程分支的链接关系没有创建，用命令`git branch --set-upstream branch-name origin/branch-name`。\r\n这就是多人协作的工作模式，一旦熟悉了，就非常简单。\r\n\r\n# 小结\r\n查看远程库信息，使用`git remote -v`；\r\n- 本地新建的分支如果不推送到远程，对其他人就是不可见的；\r\n- 从本地推送分支，使用`git push origin branch-name`，如果推送失败，先用`git pull`抓取远程的新提交；\r\n- 在本地创建和远程分支对应的分支，使用`git checkout -b branch-name origin/branch-name`，本地和远程分支的名称最好一致；\r\n- 建立本地分支和远程分支的关联，使用`git branch --set-upstream branch-name origin/branch-name`；\r\n- 从远程抓取分支，使用`git pull`，如果有冲突，要先处理冲突。\r\n', 1571867887, 'git,协同开发');
INSERT INTO `exp` VALUES (6, 5, 'gvim-windows', '# 1.下载\r\nGvim下载\r\nhttp://www.vim.org/download.php#pc\r\n\r\n# 2.解决windows中cmd窗口运行git提示“不是内部或外部命令”的问题\r\n找到电脑上的git安装中bin的路径，如：E:安装吧GitGitin；同时，找到git安装路径中git-core的位置，如：E:安装吧GitGitlibexecgit-core；将这两个目录的路径加入到系统“环境变量”中即可。\r\n\r\n# 3.配置Vundle\r\n1）进入安装目录\r\n![](/templates/uploads/y5sazY7fFHrlfeH.png)\r\n\r\n2）调出git bash并clone项目Vundle\r\ngit clone https://github.com/VundleVim/Vundle.vim.git ./bundle/Vundle.vim\r\n\r\n![](/templates/uploads/XViuUsHQCtB9Rh1.png)\r\n\r\n3）打开配置文件进行配置\r\n\r\n![](/templates/uploads/nGQHbb8jteAaakk.png)\r\n\r\n![](/templates/uploads/Mv6kqRqlQnzlGgV.png)\r\n\r\n4）打开VIM，运行:PluginInstall\r\n\r\n![](/templates/uploads/JxaMfdM871pZd6o.png)\r\n\r\n出现Done表示完成，否则会有错误信息！\r\n\r\n![](/templates/uploads/tjKI1fmMtXDEVPe.png)\r\n\r\n# 4.安装配置airline\r\n1）安装powerline字体\r\n在bundle下新建fonts目录，进入目录，调出git bash\r\n\r\n![](/templates/uploads/iBe18Upuyy6QsgX.png)\r\n\r\n![](/templates/uploads/IIjGes66P7J5TU5.png)\r\n\r\n再一个一个将powerline中的字体安装到windows系统字体库中\r\n\r\n调出windows系统字体库\r\n![](/templates/uploads/JTd7klO5DbrI0Ff.png)\r\n\r\n复制字体文件：\r\n![](/templates/uploads/KpbL6uPBkOI3mkX.png)\r\n\r\n拷贝到windows系统字体库中：\r\n![](/templates/uploads/C8cINSsOGfQGtoV.png)\r\n\r\n2）打开配置文件加入配置项\r\n![](/templates/uploads/l94yrHKWo0rWdj0.png)\r\n\r\n3）进入vim运行:PluginInstall\r\n\r\n4）再次进入配置文件增加配置项\r\n\r\n![](/templates/uploads/UfCNx6YKadMNtem.png)\r\n\r\n![](/templates/uploads/tGPUkdNGGlFJluD.png)\r\n\r\n![](/templates/uploads/n1F3BxkCLcidgJC.png)\r\n\r\n5）重新打开vim，效果如下\r\n![](/templates/uploads/SR3TgwVC9vBgzsG.png)\r\n\r\n# 5.NERDTree的使用\r\n1）更改项目根目录\r\n方法一：在vim配置文件中指定\r\n![](/templates/uploads/QBab3NajKbd9Kw5.png)\r\n\r\n方法二：每次打开vim之后，摁冒号： cd your_work_directory 回车。 然后再打开NERD_tree\r\n\r\n2）常用快捷键\r\nR：递归刷新根节点\r\nCtrl+k：同级上一个节点\r\nCtrl+j：同级下一个节点\r\nI：切换 显示/隐藏 隐藏文件\r\nm：调出操作菜单（增删改文件/目录）  （调出后按esc退出操作菜单）\r\nCtrl+w：切换窗口\r\n\r\n# 6.阅读帮助菜单\r\nCtrl+]：进入指向的页面\r\nCtrl+t：返回到上次的页面\r\n\r\n# 7.vim操作\r\n[nromalMode]\r\nu：向后撤销\r\nctrl+R：向前撤销\r\nx：相当于delete键\r\n\r\n# 8.安装配置PIV\r\n![](/templates/uploads/pHa6k35f7vkmHUa.png)\r\n\r\n![](/templates/uploads/zAFPOSDlD10xsMa.png)\r\n\r\n# 9.配置gvim支持编译C文件\r\n1）下载minGW\r\nhttps://sourceforge.net/projects/mingw/?source=typ_redirect\r\n2）安装minGW\r\n![](/templates/uploads/Kq1QeNi1glRovua.png)\r\n\r\n安装库文件：\r\n\r\n![](/templates/uploads/Z9UPo8j46F20oXP.png)\r\n\r\n需要等待一段下载安装时间。\r\n\r\n3）配置环境变量\r\n3.1 在PATH里加入F:usrcENVminGWin\r\n3.2 新建LIBRARY_PATH变量，如果有的话，直接加入F:usrcENVminGWlib\r\n3.3 新建C_INCLUDE_PATH变量，值设为 F:usrcENVminGWinclude\r\n3.4新建CPLUS_INCLUDE_PATH变量，值为 F:usrcENVminGWinclude\r\n\r\n4）在_vimrc尾部增加如下配置\r\n![](/templates/uploads/p7oeEHQPvJci5dj.png)\r\n\r\n    &quot;==========================minGM\r\n    &quot;定义CompileRun函数，用来调用编译和运行  \r\n    func CompileRun()  \r\n    exec &quot;w&quot;\r\n      \r\n    if &amp;filetype == \'c\'\r\n    exec &quot;!gcc -Wall -enable-auto-import % -g -o %&lt;.exe&quot;\r\n      \r\n    elseif &amp;filetype == \'cpp\'  \r\n    exec &quot;!g++ % -g -o %&lt;.exe&quot;  \r\n      \r\n    elseif &amp;filetype == \'java\'  \r\n    exec &quot;!javac %&quot;  \r\n    endif  \r\n    endfunc\r\n    &quot;结束定义ComplieRun  \r\n      \r\n    &quot;定义Run函数  \r\n    func Run()  \r\n    if &amp;filetype == \'c\' || &amp;filetype == \'cpp\'  \r\n    exec &quot;!%&lt;.exe&quot;  \r\n    elseif &amp;filetype == \'java\'  \r\n    exec &quot;!java %&lt;&quot;  \r\n    endif  \r\n    endfunc  \r\n      \r\n    &quot;定义Debug函数，用来调试程序  \r\n    func Debug()  \r\n    exec &quot;w&quot;  \r\n      \r\n    if &amp;filetype == \'c\'  \r\n    exec &quot;!gcc % -g -o %&lt;.exe&quot;  \r\n    exec &quot;!gdb %&lt;.exe&quot;  \r\n    elseif &amp;filetype == \'cpp\'  \r\n    exec &quot;!g++ % -g -o %&lt;.exe&quot;  \r\n    &quot;exec !gdb %&lt;.exe \r\n    elseif &amp;filetype == \'java\'  \r\n    exec &quot;!javac %&quot;  \r\n    exec &quot;!jdb %&lt;&quot;  \r\n    endif  \r\n    endfunc  \r\n      \r\n    &quot;设置程序的运行和调试的快捷键F5和Ctrl-F5  \r\n    map &lt;F5&gt; :call CompileRun()&lt;CR&gt;  \r\n    map &lt;F6&gt; :call Run()&lt;CR&gt;  \r\n    map &lt;C-F5&gt; :call Debug()&lt;CR&gt;  \r\n    &quot;-------------------------------------------------------------minGM end\r\n\r\n5）重启gvim，测试\r\n![](/templates/uploads/lCg2XY5QjSGMnP5.png)\r\n\r\n# 实践问题：\r\n1.如何直接用浏览器打开网页？\r\n\r\n# 查询的资料\r\n一、3. GVIM字体设置\r\nGVIM作为独立的GUI APP，其具有自主性，可以独立配置显示字体大小。GVIM本身在编译的时候就增加了设置项guifont和guifontset等，可以通过GVIM Command MODE设置，也可以增加设置到～/home/.vimrc\r\n10.3.1 不同操作系统字体配置的不同\r\nLinux/Unix系操作系统和Windows操作系统对于字体大小的命令格式也有一些差异：\r\nLinux/Unix命令格式：set guifont=字体 ++空格 + 字体大小\r\nWindows/Mac命令格式：set guifont=字体 + : + 字体大小\r\n1.相同的是，两个系统对空格都需要使用反斜杠``进行转意。\r\n2.不同的是，关于字体大小的表述。Linux/Unix字体大小直接写字号，Windows/Mac字号需要加上h的高度名。\r\n\r\nGVIM HELP文档\r\n11.3.2 设置方法\r\n1.临时修改。通过gvim Command MODE，输入如下命令即可：\r\noLinux/Unix: set guifont=Monospace空格14 注意这里需要对空格使用进行转意 \r\noWindows: set guifont=Monospace:h14 注意这里的字体大小需要有h的标识 \r\n1.临时修改。通过GUI选择字体和大小（更直观），通过gvim Command MODE，输入如下命令即可：\r\noWindows或Linux/Unix：set guifont=*\r\n上述命令输入完毕后，GVIM将会弹出一个对话框，提示选择字体和大小，点击确认即可完成设置。\r\n\r\nset guifont=*截图\r\n2.永久修改。通过~/.vimrc配置文件修改，增加上述内容。\r\n配置.vimrc后如遇到不生效，请查看是否有如下内容，如有请将上述配置增加到该区间：\r\nif has(\'gui_running\')\r\n set guioptions-=T  &quot; no toolbar\r\n colorscheme elflord\r\n set lines=60 columns=108 linespace=0\r\n if has(\'gui_win32\')\r\n   set guifont=DejaVu_Sans_Mono:h10:cANSI\r\n else\r\n   set guifont=DejaVu Sans Mono 10\r\n endif\r\nendif\r\n\r\n\r\n作者：mst7\r\n链接：http://www.jianshu.com/p/3310ca7b07a1\r\n來源：简书', 1571869038, 'gvim');
INSERT INTO `exp` VALUES (7, 4, '解决安装vim8后，secureCRT进入vim界面无法调出右键菜单', ' 首先需要明白vim加载配置文件是根据变量$VIM来设定的（可以通过在vim中echo $VIM来查看其值），找到这个配置文件，发现其第一句引入了一个默认配置文件：\r\n![](/templates/uploads/212POPRsW0m2J4u.png)\r\n然后找到这个默认配置文件，查找”mouse”关键字，如果存在set mouse配置，则注释掉，就是开启了鼠标右键的某个模式导致无法使用右键调出右键菜单。', 1571872603, 'vim,vim8,右键菜单,问题');
INSERT INTO `exp` VALUES (8, 4, '解决安装powerline-fonts为linux系统字体，而非仅当前用户能使用的字体', '1）下载powerline-fonts：git clone https://github.com/powerline/fonts.git  ；\r\n2）进入fonts目录，修改install.sh文件，将安装字体的目标目录修改为linux系统字体目录/usr/share/fonts目录，修改完成再运行install.sh即可；\r\n3）补充：\r\n![](/templates/uploads/Ho1PfXTPP89soqD.png)\r\n', 1571872805, 'git,powerline-fonts,问题');
INSERT INTO `exp` VALUES (9, 4, '学习vim-airline', '1）查看vim中在线帮助文档：`:h airline`\r\n2）上翻页：`C-b`\r\n3）下翻页：`C-f`\r\n4）显示当前文件的全路径：`C-g`\r\n5）刷新文件：`C-l`\r\n6）查看Airline的扩展加载情况：`:AirlineExtensions`\r\n', 1571873562, 'vim,airline,学习');
INSERT INTO `exp` VALUES (10, 4, 'lenv虚拟机的设计', '1.新建虚拟机，linux-redhat64bit-3G RAM-120G HD\r\n2.安装系统，CentOS-7-x86_64-DVD-1810.iso\r\n3.分区：\r\n\r\n    Bios Boot     2M\r\n    /boot         1G\r\n    /             30G\r\n    /usr          30G\r\n    /home         50G\r\n    /swap         2G\r\n4.配置虚拟机网络，在教程的基础上需要特别注意，新的虚拟机在”主机网络管理器”界面对指定的网卡一定要勾选上启用；\r\n5.使用secureCRT/Xshell连接使用;\r\n6.安装git发现需要wget，使用yum whatprovides wget查找wget的支持安装包，然后yum install安装之；\r\n7.继续安装git，使用源码包的方式安装，先到官网下载tar包，解压后执行./configure发现需要许多依赖包，使用yum安装齐(注意，安装依赖包时，提示需要zlib，则实际安装的是zlib-devel)\r\n\r\n\r\n\r\n', 1571874609, 'linux,centos7');
INSERT INTO `exp` VALUES (11, 7, '使用git克隆最新vim  git clone https://github.com/vim/vim.git，报错：fatal: Unable to find remote helper for \'https\'', '使用git克隆最新vim  git clone https://github.com/vim/vim.git，报错：fatal: Unable to find remote helper for \'https\'；解决方法：\r\n![](/templates/uploads/rkpK6J95Yd0v4O6.png)\r\n\r\n总结：问题的原因在于缺少curl-devel软件。', 1571874827, 'git,问题');
INSERT INTO `exp` VALUES (12, 4, 'vim的常用操作', '1）查看vim加载了哪些脚本`:scriptnames`；vim内部学习文档`:vimtutor`\r\n2）上翻页：`C-b`\r\n3）下翻页：`C-f`\r\n4）显示当前文件的全路径：`C-g`\r\n5）刷新文件：`C-l`\r\n6）Vim自带了自动补全（前提是在vim配置中开启了自动补全）：`&lt;C-x&gt;&lt;C-o&gt;`\r\n', 1571909187, 'vim,常用操作');
INSERT INTO `exp` VALUES (13, 4, 'vim中的插件使用笔记（非单个插件专题）', '      # vim-php-manual\r\n1. normal模式下在某函数上按`S-k`即调出该系统函数的手册说明，`C-]`进入下一级，`C-t`返回上一级；\r\n\r\n# VimShell\r\n1. 安装VimShell，发现需要vimproc的支持，在vundle中安装vimproc，下载好后，进入vimproc.vim目录，执行`make`，完成之后vimproc才算安装好，然后VimShell才能够使用，执行`:VimShell`调取一个完整的可以执行shell的窗口，执行`:VimShellPop`调取一个小的可以执行shell的窗口；\r\n\r\n# taglist\r\n1. 绑定快捷键`&lt;Space&gt;tags`切换tagbar；\r\n\r\n# emmet-vim\r\n`div#page&gt;div.logo+ul#navigation&gt;li*5&gt;a`按快捷键`C-z ,`等同于补全：\r\n```html\r\n&lt;div id=&quot;page&quot;&gt;\r\n	&lt;div class=&quot;logo&quot;&gt;&lt;/div&gt;\r\n	&lt;ul id=&quot;navigation&quot;&gt;\r\n		&lt;li&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;&lt;/li&gt;\r\n		&lt;li&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;&lt;/li&gt;\r\n		&lt;li&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;&lt;/li&gt;\r\n		&lt;li&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;&lt;/li&gt;\r\n		&lt;li&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;&lt;/li&gt;\r\n	&lt;/ul&gt;\r\n&lt;/div&gt;\r\n```\r\n\r\n# nerdcommenter\r\n`&lt;leader&gt;cc` 注释      `&lt;leader&gt;cu`反注释\r\n\r\n# vim-surround\r\n`cs’”`   将包围的单引号替换为双引号；      `ds”`  将包裹的双引号删除\r\n\r\n# YouCompleteMe\r\nVundle中安装YouCompleteMe\r\n    yum install cmake   clang    clang-devel\r\n进入YouCompleteMe目录，执行：\r\n    python3 install.py --clangd-completer\r\n然后在编译过程中出现错误\r\n![](/templates/uploads/gnPCPYnQHWrGZ5N.png)\r\n解决方法如上图所描述，将对应的文件删除，然后再使用git更新一下即可，完成后再次执行\r\n`python3 install.py --clangd-completer`\r\n这次安装就OK了\r\n\r\n# expand-region\r\n重置快捷键：`A-=`扩大选择    `A--`缩小选择\r\n\r\n# vdebug(xdebug)\r\n## 首先在linux中安装xdebug\r\n1）寻找镜像中的xdebug：`yum --enablerepo=remi-php74 list *xdebug*`\r\n2）安装xdebug：`yum --enablerepo=remi-php74 install php-pecl-xdebug`\r\n3）查看xdebug是否安装成功：`php -v`\r\n4）安装xdebug成功后，打开在php中的xdebug的配置文件增加配置：\r\n```bash\r\n[root@localhost logs]# ls /etc/php.d/\r\n15-xdebug.ini       20-bz2.ini          20-curl.ini         20-ftp.ini          20-json.ini         20-phar.ini         20-tokenizer.ini    30-pdo_sqlite.ini   \r\n15-xdebug.ini~      20-calendar.ini     20-exif.ini         20-gettext.ini      20-mysqlnd.ini      20-sockets.ini      30-mysqli.ini       \r\n.15-xdebug.ini.un~  20-ctype.ini        20-fileinfo.ini     20-iconv.ini        20-pdo.ini          20-sqlite3.ini      30-pdo_mysql.ini\r\n[root@localhost logs]# vim /etc/php.d/15-xdebug.ini\r\n.....\r\n1031 ;xdebug.var_display_max_depth = 3\r\n1032\r\n1033\r\n1034 ;以上全为默认配置，以下为新增配置\r\n1035 xdebug.remote_autostart=1\r\n1036 xdebug.default_enable=0\r\n1037 xdebug.remote_enable=0      ;===》开不开启远程，取决于IDE工具与xdebug是否在同一台电脑中，当前IDE为vim，和xdebug在同一台服务器上，所以不需要开启远程\r\n1038 xdebug.remote_remote_enable=0\r\n1039 xdebug.remote_host=localhost    ;===》remote_host指定的是IDE所在的IP，和apache在同一台服务器则指定localhost即可\r\n1040 xdebug.remote_port=10000\r\n1041 xdebug.idekey=vim-xdebug    ;===》这个key值在vimrc中需要对应为统一的值\r\n1042 xdebug.profiler_enable=0\r\n\r\n```\r\n\r\n## 然后在vim中安装vdebug\r\n1）在vim中安装vdebug插件，安装完成后，增加相关配置：\r\n![](/templates/uploads/nag5aJnwUbOUhxJ.png)\r\n\r\n![](/templates/uploads/VPBaL7l6ekQ1qLA.png)\r\n\r\n还需要在vhosts虚拟主机中增加配置，针对某个域名虚拟主机生效：\r\n![](/templates/uploads/h5vQVNuq5lHWnSI.png)\r\n\r\n2）完成以上步骤，则安装成功，使用方法如下：\r\n\r\n    &lt;F5&gt;: start/run (to next breakpoint/end of script)\r\n    &lt;F2&gt;: step over\r\n    &lt;F3&gt;: step into\r\n    &lt;F4&gt;: step out\r\n    &lt;F6&gt;: stop debugging\r\n    &lt;F7&gt;: detach script from debugger\r\n    &lt;F9&gt;: run to cursor\r\n    &lt;F10&gt;: toggle line breakpoint\r\n    &lt;F11&gt;: show context variables (e.g. after &quot;eval&quot;)\r\n    &lt;F12&gt;: evaluate variable under cursor\r\n    :Breakpoint &lt;type&gt; &lt;args&gt;: set a breakpoint of any type (see :help VdebugBreakpoints)\r\n    :VdebugEval &lt;code&gt;: evaluate some code and display the result\r\n    &lt;Leader&gt;e: evaluate the expression under visual highlight and display the result\r\n    To stop debugging, press &lt;F6&gt;. Press it again to close the debugger interface.', 1571912023, 'vim,plugin');
INSERT INTO `exp` VALUES (14, 8, '使用yum安装amp', '   # yum安装apache\r\n1) `yum install httpd`\r\n2) 找到httpd.conf\r\n```bash\r\n[root@localhost logs]# rpm -qc httpd\r\n/etc/httpd/conf.d/autoindex.conf\r\n/etc/httpd/conf.d/userdir.conf\r\n/etc/httpd/conf.d/welcome.conf\r\n/etc/httpd/conf.modules.d/00-base.conf\r\n/etc/httpd/conf.modules.d/00-dav.conf\r\n/etc/httpd/conf.modules.d/00-lua.conf\r\n/etc/httpd/conf.modules.d/00-mpm.conf\r\n/etc/httpd/conf.modules.d/00-proxy.conf\r\n/etc/httpd/conf.modules.d/00-systemd.conf\r\n/etc/httpd/conf.modules.d/01-cgi.conf\r\n/etc/httpd/conf/httpd.conf\r\n/etc/httpd/conf/magic\r\n/etc/logrotate.d/httpd\r\n/etc/sysconfig/htcacheclean\r\n/etc/sysconfig/httpd\r\n\r\n```\r\n3) 在httpd.conf中修改ServerName为：`ServerName localhost:80`\r\n4) 找到httpd的httpd-vhosts.conf文件：\r\n```bash\r\n[root@localhost logs]# find / -name *vhosts*\r\n/usr/share/doc/httpd-2.4.6/httpd-vhosts.conf      ===》找到httpd-vhosts.conf\r\n\r\n```\r\n5）确定httpd存放配置文件的目录：\r\n![](/templates/uploads/uHkltbWM0NET4An.png)\r\n\r\n6) 将httpd-vhosts.conf文件复制一份到上面找到的目录中去：\r\n```bash\r\n[root@localhost logs]# cp /usr/share/doc/httpd-2.4.6/httpd-vhosts.conf /etc/httpd/conf.d/httpd-vhosts.conf\r\n[root@localhost logs]# ls /etc/httpd/conf.d/\r\nautoindex.conf          httpd-vhosts.conf       httpd-vhosts.conf~      .httpd-vhosts.conf.un~  php.conf                README                  userdir.conf            welcome.conf\r\n\r\n```\r\n\r\n7) 配置基于域名的虚拟主机(注意目标目录的权限，需要尤其注意SELinux的影响，配置完成还不行就关闭SELinux看看)\r\n![](/templates/uploads/qHmUN0ESw9FUoic.png)\r\n\r\n8) 重启apache，测试远程浏览器访问(注意在远程机hosts中增加指向，此处省略不列出来）：\r\n```bash\r\n[root@localhost logs]# systemctl restart httpd\r\n```\r\n9) 成功后将apache设置为开机启动\r\n```bash\r\n[root@localhost logs]# systemctl enable httpd\r\n```\r\n\r\n# yum安装mariadb\r\n安装参考链接:https://blog.csdn.net/bbwangj/article/details/80778113\r\n修改密码参考链接：https://blog.csdn.net/geoffreychan/article/details/78076966\r\n1) 安装软件：`yum install mariadb mariadb-server`\r\n2) 安装完成之后初始化mariadb: `mysql_secure_installation`\r\n3) 初始化时需要输入root密码，但是不成功，因为镜像的是别人的数据库的缘故，所以要修改root密码：\r\n   a. `systemctl stop mariadb`\r\n   \r\n   b. `systemctl set-environment MYSQLD_OPTS=”skip-grant-tables”`\r\n   \r\n   c. `systemctl start mariadb`\r\n   \r\n   d. `mysql -uroot -p`\r\n   \r\n   e. `set password=password(‘newpwd’); exit;`\r\n   \r\n   f. `systemctl stop mariadb`\r\n   \r\n   g. `systemctl unset-environment MYSQLD_OPTS`\r\n   \r\n   h. `systemctl start mariadb`\r\n   \r\n   i. 重置root密码后再次进行初始化操作即可。(记得设置防火墙和开机启动，当前在测试环境首次实验性部署，故没有做）\r\n\r\n# yum安装php7.4\r\n参考链接：https://www.jianshu.com/p/1e23aba0a164\r\n1) 首先需要手动配置yum源或安装EPEL yum源（因base源没有php7以上版本），这里是安装EPEL yum源，\r\n```bash\r\n# 安装EPEL yum存储库\r\n yum install epel-release -y\r\n# 安装Remi存储库\r\n rpm -Uvh http://rpms.famillecollet.com/enterprise/remi-release-7.rpm\r\n```\r\n\r\n2) 然后可以通过指令查看相关版本的软件包，比如查看php7.4相关的： `yum --enablerepo=remi-php74 list php*`    （注意前面指定了remo-php74，后面的就写php*就行，不用写php74*）\r\n\r\n3) 安装openssl相关支持：`yum install openssl openssl-devel`\r\n\r\n4) 安装php74:  `yum --enablerepo=remi-php74 install php`    (php74中已经默认加载了一些扩展)\r\n\r\n5) 查看当前php的扩展: `php -m`，如果想加入更多扩展，则首先查看相应扩展的名字： `yum --enablerepo=remi-php74 list php* | grep pdo` （ 这么写是错的`yum --enablerepo=remi-php74 list php74* | grep pdo`）   ===&gt;  然后再`yum --enablerepo=remi-php74 install php-pdo mysqlnd`即可，安装完成会被配置进php的扩展中，可以通过`php -m`查看；\r\n\r\n6）安装完成后再httpd.conf中加入关联配置：\r\n![](/templates/uploads/MBxi236S5gZcXNv.png)', 1571940960, 'linux,yum,软件');
INSERT INTO `exp` VALUES (15, 9, 'linux快捷键', '# 文件和目录操作命令(19)\r\nls cd find mkdir mv pwd rename rm rmdir touch tree basename dirname chattr lsattr file md5sum\r\n\r\n\r\n\r\n# 查看文件内容及内容处理命令(19)\r\ncat tac more less head tail cut split paste sort uniq wc iconv dos2unix file diff vimdiff rev grep egrep join tr vi/vim\r\n\r\n\r\n\r\n# 文件压缩与解压缩命令(4)\r\ntar unzip gzip zip\r\n\r\n\r\n\r\n# 主机相关信息显示命令(12)\r\nuname hostname dmesg uptime file stat du df top free date cal\r\n\r\n\r\n\r\n# 搜索文件命令(4)\r\nwhich find whereis locate\r\n\r\n\r\n\r\n# 进程管理命令(16)\r\nbg fg jobs kill killall pkill crontab ps pstree top nice nohup pgrep strace ltrace vmstat runlevel init service\r\n\r\n\r\n', 1572226194, 'linux,快捷键');
INSERT INTO `exp` VALUES (16, 4, 'vimrc', '```bash\r\n&quot; An example for a vimrc file.\r\n&quot;\r\n&quot; Maintainer:	Bram Moolenaar &lt;Bram@vim.org&gt;\r\n&quot; Last change:	2019 Jan 26\r\n&quot;\r\n&quot; To use it, copy it to\r\n&quot;     for Unix and OS/2:  ~/.vimrc\r\n&quot;	      for Amiga:  s:.vimrc\r\n&quot;  for MS-DOS and Win32:  $VIM\\_vimrc\r\n&quot;	    for OpenVMS:  sys$login:.vimrc\r\n\r\n&quot; When started as &quot;evim&quot;, evim.vim will already have done these settings, bail\r\n&quot; out.\r\nif v:progname =~? &quot;evim&quot;\r\n  finish\r\nendif\r\n\r\n&quot; Get the defaults that most users want.\r\nsource $VIMRUNTIME/defaults.vim \r\nif has(&quot;vms&quot;)\r\n  set nobackup		&quot; do not keep a backup file, use versions instead\r\nelse\r\n  set backup		&quot; keep a backup file (restore to previous version)\r\n  if has(\'persistent_undo\')\r\n    set undofile	&quot; keep an undo file (undo changes after closing)\r\n  endif\r\nendif\r\n\r\n&quot;搜索结果高亮\r\nif &amp;t_Co &gt; 2 || has(&quot;gui_running&quot;)\r\n&quot;  &quot; Switch on highlighting the last used search pattern.\r\n  set hlsearch\r\nendif\r\n\r\n&quot; Put these in an autocmd group, so that we can delete them easily.\r\naugroup vimrcEx\r\n  au!\r\n\r\n  &quot; For all text files set \'textwidth\' to 78 characters.\r\n  autocmd FileType text setlocal textwidth=78\r\naugroup END\r\n\r\n&quot; Add optional packages.\r\n&quot;\r\n&quot; The matchit plugin makes the % command work better, but it is not backwards\r\n&quot; compatible.\r\n&quot; The ! means the package won\'t be loaded right away but when plugins are\r\n&quot; loaded during initialization.\r\nif has(\'syntax\') &amp;&amp; has(\'eval\')\r\n\r\n  packadd! matchit\r\nendif\r\n\r\n&quot;----------------------------------------------wxg.基础配置.begin\r\n&quot;set t_Co=256\r\nset encoding=utf-8\r\nset nu\r\nset shell=sh\r\ncolorscheme blue\r\n&quot;开启对php自动补全的支持phpcomplete\r\nautocmd FileType php set omnifunc=phpcomplete#CompletePHP\r\n\r\n&quot;#==# 将&lt;leader&gt;键设置为映射为空格键即&lt;Space&gt;\r\nlet mapleader = &quot; &quot;\r\n\r\n&quot;#==# 快捷键\r\n&quot;#1 全局模式下的快捷键\r\n&quot;置换&lt;esc&gt;快捷键,inoremap中的i表示仅在insert模式下生效\r\nmap  &lt;Esc&gt;\r\n\r\n&quot;#1 编辑模式下的快捷键\r\n&quot;inoremapclear\r\n&quot;&lt;C-s&gt;\r\ninoremap  &lt;Esc&gt;:w!&lt;CR&gt;\r\ninoremap z &lt;Esc&gt;ua\r\ninoremap  &lt;Esc&gt;$a\r\ninoremap d &lt;Esc&gt;viwdi\r\n\r\n&quot;#1-#11 光标移动\r\n&quot;&lt;C-p&gt;\r\ninoremap  &lt;Up&gt;\r\ninoremap &lt;C-n&gt; &lt;Down&gt;\r\ninoremap &lt;C-b&gt; &lt;Left&gt;\r\ninoremap &lt;C-f&gt; &lt;Right&gt;\r\n&quot;块移动\r\n&quot;&lt;A-b&gt;\r\ninoremap b &lt;S-Left&gt;\r\n&quot;&lt;A-f&gt;\r\ninoremap f &lt;S-Right&gt;\r\ninoremap &lt;C-e&gt; &lt;End&gt;\r\ninoremap &lt;C-a&gt; &lt;Home&gt;\r\ninoremap &lt;C-d&gt; &lt;Del&gt;\r\n\r\n&quot;#1-1 编辑\r\n&quot;粘贴\r\ninoremap &lt;C-y&gt; &lt;Esc&gt;p&lt;End&gt;i\r\n&quot;向右单个字符删除\r\ninoremap &lt;C-d&gt; &lt;Del&gt;\r\n&quot;快速进入选择模式\r\ninoremap &lt;A-v&gt; &lt;Esc&gt;v\r\n&quot;块删除\r\n\r\n&quot;#1 normal模式下的快捷键\r\nnnoremap q :q&lt;Enter&gt;\r\n&quot;nnoremap w :w&lt;Enter&gt;\r\nnnoremap &lt;C-n&gt; &lt;Esc&gt;yyp$\r\nnnoremap &lt;leader&gt;vs :VimShell\r\nnnoremap &lt;leader&gt;vsp :VimShellPop\r\nnnoremap &lt;leader&gt;w &lt;C-w&gt;w\r\nnnoremap &lt;leader&gt;srcv :source /usr/local/share/vim/vimrc&lt;CR&gt;\r\nnnoremap &lt;leader&gt;pi :PluginInstall\r\n&quot;&lt;C-s&gt;\r\nnnoremap  &lt;Esc&gt;:w!&lt;CR&gt;\r\n\r\n\r\n&quot;设置双字宽显示，否则无法完整显示如空心五角心这类字符\r\nset ambiwidth=double\r\nlet laststatus = 2\r\nlet g:airline_powerline_fonts = 1\r\n\r\n&quot;let g:buftabs_in_statusline=1              &quot;显示标签栏\r\n&quot;map &lt;C-b&gt; :bprev!&lt;CR&gt;\r\n&quot;map &lt;C-n&gt; :bnext!&lt;CR&gt;\r\n\r\n\r\n&quot;设置&lt;F5&gt;快捷键编译执行对应类型文件\r\nnnoremap &lt;leader&gt;cpp :call CompileRunGcc()&lt;CR&gt;\r\nfunc! CompileRunGcc()\r\n	exec &quot;w&quot;\r\n	if &amp;filetype == \'c\'\r\n		exec &quot;!g++ % -o %&lt;&quot;\r\n		exec &quot;!time ./%&lt;&quot;\r\n	elseif &amp;filetype == \'cpp\'\r\n		exec &quot;!g++ % -o %&lt;&quot;\r\n		exec &quot;!time ./%&lt;&quot;\r\n	&quot;elseif &amp;filetype == \'java\' \r\n	&quot;        exec &quot;!javac %&quot; \r\n	&quot;        exec &quot;!time java %&lt;&quot;\r\n	&quot;elseif &amp;filetype == \'sh\'\r\n	&quot;        :!time bash %\r\n	&quot;elseif &amp;filetype == \'python\'\r\n	&quot;        exec &quot;!time python2.7 %&quot;\r\n	&quot;elseif &amp;filetype == \'html\'\r\n	&quot;        exec &quot;!firefox % &amp;&quot;\r\n	&quot;elseif &amp;filetype == \'go\'\r\n	&quot;        exec &quot;!go build %&lt;&quot;\r\n	&quot;        exec &quot;!time go run %&quot;\r\n	&quot;elseif &amp;filetype == \'mkd\'\r\n	&quot;        exec &quot;!~/.vim/markdown.pl % &gt; %.html &amp;&quot;\r\n	&quot;        exec &quot;!firefox %.html &amp;&quot;\r\n	endif\r\nendfunc\r\n\r\n&quot;----------------------------------------------wxg.基础配置.end\r\n\r\n\r\n&quot;#==# Vundle\r\n&quot;将vundle插件的目录添加到vim的运行时变量中\r\nset rtp+=/usr/local/share/vim/bundle/Vundle.vim/\r\ncall vundle#begin(\'/usr/share/vim/bundle\')\r\n\r\n&quot;vundle管理的插件\r\n&quot;Plugin \'VundleVim/Vundle.vim\'\r\nPlugin \'godlygeek/csapprox\'\r\nPlugin \'vim-airline/vim-airline\'\r\nPlugin \'vim-airline/vim-airline-themes\'\r\nPlugin \'scrooloose/nerdtree\'\r\nPlugin \'Xuyuanp/nerdtree-git-plugin\'         &quot;nerdtree文件树显示git状态的插件\r\nPlugin \'LionelMartin/vim-php-manual\'         &quot;php手册\r\nPlugin \'Shougo/vimproc.vim\'                  &quot;vimshell需要的支持\r\nPlugin \'Shougo/vimshell.vim\'                 &quot;在vim中可以执行shell\r\n&quot;Plugin \'msanders/snipmate.vim\'              &quot;相当于editplus的半自动补全(deprecated)\r\nPlugin \'TEC-LONG/ultisnips\'                    &quot;替代snipmate(因snipmate的&lt;tab&gt;键与ycm冲突又无法修改，且snipmate已停止更新，其成员转来ultisnips)\r\nPlugin \'honza/vim-snippets\'\r\nPlugin \'vim-scripts/taglist.vim\'\r\nPlugin \'mattn/emmet-vim\'                     &quot;即zencoding\r\nPlugin \'scrooloose/nerdcommenter\'            &quot;提供注释功能的插件\r\nPlugin \'jiangmiao/auto-pairs\'                &quot;提供括号引号自动成对功能\r\nPlugin \'tpope/vim-surround\'                  \r\nPlugin \'ycm-core/YouCompleteMe\'              &quot;提供C/C++自动补全\r\nPlugin \'TEC-LONG/vdebug\'                     &quot;提供vim中操作xdebug联调的插件\r\nPlugin \'liuchengxu/vim-which-key\'            &quot;提供提示快捷键的插件\r\n&quot;Plugin \'brianclements/vim-popwindow\'         &quot;提供小浮窗的插件\r\nPlugin \'terryma/vim-expand-region\'           &quot;提供更快捷的选取方式，emacs中的ctrl+=\r\nPlugin \'TEC-LONG/vim-fugitive\'                  &quot;提供vim中执行git指令的插件\r\nPlugin \'altercation/vim-colors-solarized\'                  &quot;米色主题\r\n\r\n\r\ncall vundle#end()\r\n\r\n\r\n&quot;#==# vim-colors-solarized\r\n&quot;set background=light\r\n&quot;colorscheme solarized\r\n\r\n\r\n&quot;#==# vim-expand-region\r\nmap = &lt;Plug&gt;(expand_region_expand)\r\nmap - &lt;Plug&gt;(expand_region_shrink)\r\n\r\n\r\n&quot;#==# popwindow\r\nlet g:popwindow_close_types = [\r\n    \'fugitive-diff\', \'fugitive\', \'help\',\r\n    \'quickfix\', \'temp\', \'permissive_temp\', \'nerdtree\']\r\n\r\n\r\n&quot;#==# which-key\r\n&quot;let g:which_key_vertical = 1\r\n&quot;let g:which_key_use_floating_win = 1 \r\nlet g:which_key_exit = &quot;&lt;C-G&gt;&quot;\r\nnnoremap &lt;silent&gt; &lt;leader&gt; :WhichKey \'&lt;Space&gt;\'&lt;CR&gt;\r\nset timeoutlen=500\r\n\r\n\r\n&quot;#==# vdebug\r\nlet g:vdebug_options = {\'ide_key\': \'vim-xdebug\'}\r\nlet g:vdebug_options = {\'break_on_open\': 0}\r\nlet g:vdebug_options = {\'server\': \'127.0.0.1\'}\r\nlet g:vdebug_options = {\'port\': \'10000\'}\r\n\r\n\r\n&quot;#==# YouCompleteMe\r\n&quot;let g:ycm_use_ultisnips_completer = 0\r\n&quot;autocmd CmdwinEnter * inoremap &lt;expr&gt;&lt;buffer&gt; &lt;C-j&gt;\r\n\r\n\r\n&quot;#==# ultisnips\r\nlet g:UltiSnipsUsePythonVersion = 3\r\n\r\nlet g:UltiSnipsExpandTrigger=&quot;&lt;c-j&gt;&quot;\r\nlet g:UltiSnipsJumpForwardTrigger=&quot;&lt;c-n&gt;&quot;\r\nlet g:UltiSnipsJumpBackwardTrigger=&quot;&lt;c-p&gt;&quot;\r\n\r\n\r\n&quot;#==# taglist\r\nnnoremap &lt;leader&gt;tags :TlistToggle&lt;Enter&gt;\r\n\r\n\r\n&quot;#==# Airline\r\n&quot;let g:airline#extensions#fugitiveline#enabled = 1\r\n&quot;let g:airline#extensions#disable_rtp_load = 1\r\nif !exists(\'g:airline_symbols\')\r\n       let g:airline_symbols = {}\r\nendif\r\n\r\n&quot;设置左/右状态栏分隔符\r\nlet g:airline_left_sep = \'\'\r\nlet g:airline_left_alt_sep = \'\'\r\nlet g:airline_right_sep = \'\'\r\nlet g:airline_right_alt_sep = \'\'\r\nlet g:airline_symbols.branch = \'\'\r\nlet g:airline_symbols.readonly = \'\'\r\nlet g:airline_symbols.linenr = \'☰\'\r\nlet g:airline_symbols.maxlinenr = \'\'\r\n\r\n&quot;设置tab键映射键\r\nnnoremap &lt;tab&gt; :bn&lt;cr&gt;\r\nlet g:airline#extensions#tabline#left_sep = \' \'\r\nlet g:airline#extensions#tabline#left_alt_sep = \'|\'\r\nlet g:airline#extensions#tabline#formatter = \'default\'\r\n\r\n&quot;let g:airline_detect_modified=1\r\n&quot;let g:airline_detect_paste=1\r\n&quot;let g:airline_detect_crypt=1\r\n&quot;设置buffer标签栏分隔符等\r\nlet g:airline#extensions#tabline#enabled=1 &quot;顶部tab显示&quot;\r\nlet g:airline#extensions#tabline#fnamemod = \':t\'\r\n\r\n&quot;&quot;快捷键\r\nlet g:airline#extensions#tabline#buffer_idx_mode = 1\r\nmap &lt;leader&gt;1 &lt;Plug&gt;AirlineSelectTab1\r\nmap &lt;leader&gt;2 &lt;Plug&gt;AirlineSelectTab2\r\nmap &lt;leader&gt;3 &lt;Plug&gt;AirlineSelectTab3\r\nmap &lt;leader&gt;4 &lt;Plug&gt;AirlineSelectTab4\r\nmap &lt;leader&gt;5 &lt;Plug&gt;AirlineSelectTab5\r\nmap &lt;leader&gt;6 &lt;Plug&gt;AirlineSelectTab6\r\nmap &lt;leader&gt;7 &lt;Plug&gt;AirlineSelectTab7\r\nmap &lt;leader&gt;8 &lt;Plug&gt;AirlineSelectTab8\r\nmap &lt;leader&gt;9 &lt;Plug&gt;AirlineSelectTab9\r\n&quot;map &lt;leader&gt;n &lt;Plug&gt;AirlineSelectNextTab\r\n&quot;map &lt;leader&gt;p &lt;Plug&gt;AirlineSelectPrevTab\r\n\r\n\r\n&quot;#==# NerdTree\r\n&quot;cd /home/fire\r\ncd ~\r\n&quot;cd /usr/local/share/vim/bundle/Vundle.vim\r\n&quot;当启动vim而没有指定打开的文件时，则自动打开NerdTree\r\nautocmd StdinReadPre * let s:std_in=1\r\nautocmd VimEnter * if argc() == 0 &amp;&amp; !exists(&quot;s:std_in&quot;) | NERDTree | endif &quot;当使用vim打开一个目录时，则自动打开NerdTree\r\nautocmd StdinReadPre * let s:std_in=1\r\nautocmd VimEnter * if argc() == 1 &amp;&amp; isdirectory(argv()[0]) &amp;&amp; !exists(&quot;s:std_in&quot;) | exe \'NERDTree\' argv()[0] | wincmd p | ene | exe \'cd \'.argv()[0] | endif\r\n&quot;绑定打开/关闭NerdTree菜单的快捷键\r\nmap &lt;F2&gt; :NERDTreeToggle&lt;CR&gt;\r\n&quot;当关闭vim时，NerdTree为仅有的窗口，则整个vim全部关闭\r\nautocmd bufenter * if (winnr(&quot;$&quot;) == 1 &amp;&amp; exists(&quot;b:NERDTree&quot;) &amp;&amp; b:NERDTree.isTabTree()) | q | endif\r\n\r\n\r\n&quot;#==# NERDTree-git\r\nlet g:NERDTreeIndicatorMapCustom = {\r\n     &quot;Modified&quot;  : &quot;*&quot;,\r\n     &quot;Staged&quot;    : &quot;＋&quot;,\r\n     &quot;Untracked&quot; : &quot;utk&quot;,\r\n     &quot;Renamed&quot;   : &quot;R&quot;,\r\n     &quot;Unmerged&quot;  : &quot;umg&quot;,\r\n     &quot;Deleted&quot;   : &quot;χ&quot;,\r\n     &quot;Dirty&quot;     : &quot;dt&quot;,\r\n     &quot;Clean&quot;     : &quot;√&quot;,\r\n     \'Ignored\'   : \'○\',\r\n     &quot;Unknown&quot;   : &quot;?&quot;\r\n     }\r\n\r\n\r\n&quot;#==# Airline-theme\r\n&quot;set notermguicolors\r\n&quot;let g:airline_theme=\'light\'\r\n\r\n\r\n&quot;#====# Airline font 必须放在配置文件最下方\r\n&quot;set guifont=DejaVu_Sans_Mono_for_Powerline h16 cANSI\r\n&quot;set guifont=SpaceMono-Regular 16  &quot;这个是windows下的写法，空格前都要加转义符,字体大小前要加h\r\n\r\nset guifont=Source Code Pro for Powerline 16  &quot;这个是linux/unix中的写法，空格前加转义符，字体大小前无需加h\r\n\r\n\r\n```', 1572313149, 'vim,vim配置');
INSERT INTO `exp` VALUES (17, 4, 'vim快捷键与指令', ' #全局\r\n	&lt;leader&gt;   为空格\r\n	&lt;leader&gt;e    编辑个人vim配置文件.vimrc.config:n\r\n	&lt;leader&gt;s    重新加载个人vim配置文件.vimrc.config:n\r\n	&lt;leader&gt;h    打开当前光标所在单词的vim帮助文档:n\r\n	&lt;leader&gt;&lt;leader&gt;i    安装plug插件:n:vim-plugs\r\n	&lt;leader&gt;t    打开/关闭tagbar窗口:in:tagbar\r\n	&lt;leader&gt;run    编译执行py/c/cpp文件:n\r\n	&lt;leader&gt;vim    编辑vimrc文件:n\r\n\r\n\r\n#注释与取消注释\r\n	&lt;leader&gt;cc    单行注释:n:nerdcommenter\r\n	&lt;leader&gt;cu    取消注释:n:nerdcommenter\r\n	gcc    单行注释/取消单行注释:n:vim-commentary\r\n	gcap    段落注释/取消段落注释:n:vim-commentary\r\n\r\n\r\n#移动\r\n	&lt;C-f&gt;    右移:i\r\n    &lt;A-f&gt;    右移一个词:iv\r\n	&lt;A-f&gt;    向下平滑翻动半屏:n:vim-smooth-scroll\r\n    &lt;C-b&gt;    左移:i\r\n    &lt;A-b&gt;    左移一个词:iv\r\n	&lt;A-b&gt;    向上平滑翻动半屏:n:vim-smooth-scroll\r\n\r\n    &lt;A-p&gt;    上移:i\r\n    &lt;A-n&gt;    下移:i\r\n	&lt;C-e&gt;    光标定位到行尾:i\r\n	&lt;C-a&gt;    光标定位到行首:i\r\n\r\n	&lt;A-j&gt;    跳转到当前窗口下面的窗口:n\r\n	&lt;A-k&gt;    跳转到当前窗口上面的窗口:n\r\n	&lt;A-h&gt;    跳转到当前窗口左边的窗口:n\r\n	&lt;A-l&gt;    跳转到当前窗口右面的窗口:n\r\n\r\n	&lt;c-p&gt;    跳转到当前buffer左边的buffer中:n:vim-buffer\r\n	&lt;c-n&gt;    跳转到当前buffer右边的buffer中:n:vim-buffer\r\n	&lt;leader&gt;d    关闭当前所在buffer及buffer窗口:n:vim-buffer\r\n	&lt;leader&gt;D    关闭除当前所在buffer外其他打开过的buffer:n:vim-buffer\r\n\r\n\r\n#复制、粘贴与删除\r\n	&lt;A-m&gt;    克隆当前行到下一行:in\r\n	&lt;C-d&gt;    向右删除一个字符:i\r\n	&lt;A-d&gt;    向右删除一个词:i\r\n\r\n	&lt;leader&gt;&lt;leader&gt;y    复制当前选中到系统剪切板:v:?\r\n	&lt;leader&gt;&lt;leader&gt;p    将系统剪切板内容粘贴到vim:n:?\r\n\r\n	yiw    复制光标处的单词:n\r\n\r\n2）通过指令删除：\r\n\r\n![](/templates/uploads/or3s7OomKrSJiYY.png)\r\n![](/templates/uploads/wDJjZlXs99VucD3.png)\r\n\r\n\r\n#切换状态\r\n	&lt;A-g&gt;    即&lt;Esc&gt;:i\r\n	&lt;A-v&gt;    从i模式立即进入v模式:i\r\n	q    退出:n\r\n\r\n\r\n#查找\r\n	K   找（跳）到当前光标下的系统函数/系统类的定义文档处:n:vim-php-manual\r\n	&lt;leader&gt;undo    打开/关闭undotree:n:undotree\r\n	&lt;leader&gt;f    搜索项目根目录及其子孙目录下文件名包含目标字符的文件:n:LeaderF\r\n	&lt;leader&gt;F    搜索项目根目录及其子孙目录下所有文件内容中包含目标字符的文件:n:ack\r\n1）LeaderF部分操作说明\r\n\r\n	&lt;C-j&gt;    下一条目标结果\r\n	&lt;C-k&gt;    上一条目标结果\r\n	&lt;C-r&gt;    fuzzy模糊匹配/regex正则匹配切换\r\n\r\n\r\n#快速选取\r\n	viw    选取光标所在单词:n\r\n	gv    重新选择上一次选中的文字:n\r\n	+    扩散选择:n:expand-region\r\n	_    收缩选择:n:expand-region\r\n\r\n\r\n#替换\r\n1）参考vim-edit中的操作；\r\n2）指令替换：\r\n\r\n	:s/p1/p2/g    替换当前行的p1为p2\r\n	:%s/p1/p2/g    替换当前文件中的p1为p2\r\n	:%s/&lt;p1&gt;/p2/g    替换当前文件中的p1单词为p2\r\n	:%s/p1/p2/gc    替换当前文件中的p1为p2，并且每处询问你是否替换\r\n	:10,20s/p1/p2/g    将第10到20行中所有p1替换为p2\r\n	:%s/12/3/123/g    将“12/3” 替换为 “123”（特殊字符使用反斜杠标注）\r\n\r\n\r\n#格式化代码\r\n	&lt;leader&gt;l    按竖线对齐:n\r\n	&lt;leader&gt;=    按等号对齐:n\r\n	&lt;leader&gt;gs    格式化代码:n\r\n\r\n\r\n#vim-easymotion\r\n	&lt;leader&gt;w    启动easymotion整屏快速定位:n\r\n	&lt;leader&gt;&lt;leader&gt;s    启动单个字符在整屏中快速定位:n\r\n\r\n\r\n#vim-edit\r\n	Ya    复制当前行从光标处到光标后字母a的这部分内容（如果后面有多个a则会让用户再次选择到哪个a）:n\r\n	Da    剪切当前行从光标处到光标后字母a的这部分内容（如果后面有多个a则会让用户再次选择到哪个a）:n\r\n	Ca    删除当前行从光标处到光标后字母a的这部分内容并进入插入模式（如果后面有多个a则会让用户再次选择到哪个a）:n\r\n	rr    当执行yiw、diw等命令操作文本后，在normal模式下执行rr命令，则会替换掉当前光标所在单词，在visual模式下执行rr命令，则会替换掉选中的文本。：nv\r\n	&lt;leader&gt;r    将文件里所有与当前光标所在单词相同的内容替换为指定的内容:n\r\n\r\n\r\n#NerdTree\r\n	&lt;leader&gt;n    打开/关闭NerdTree窗口:in\r\n\r\n\r\n#vdebug调试\r\n	&lt;F10&gt;    将当前行设置/取消断点\r\n	&lt;F5&gt;\r\n	&lt;F2&gt;\r\n	&lt;F3&gt;\r\n\r\n\r\n#cpp-mode\r\n	&lt;leader&gt;y    拷贝函数声明:n\r\n	&lt;leader&gt;p    生成函数实现:n\r\n	&lt;leader&gt;U    跳转到函数实现:n\r\n	&lt;leader&gt;a    .h/.cpp文件切换:n\r\n	&lt;leader&gt;&lt;leader&gt;fp    格式化函数参数:n\r\n	&lt;leader&gt;&lt;leader&gt;if    格式化if分支:n\r\n\r\n\r\n#vim-move\r\n	&lt;C-k&gt;    将选中代码/当前行上移一个行\r\n	&lt;C-j&gt;    将选中代码/当前行下移一个行\r\n	&lt;C-h&gt;    将选中代码/当前行左移一个字符\r\n	&lt;C-l&gt;    将选中代码/当前行右移一个字符\r\n\r\n\r\n#emmet-vim\r\n	&lt;C-z&gt;,    触发特定字符进行标记半自动补全:i\r\n\r\n\r\n#vim-multiple-cursors\r\n	&lt;C-n&gt;    选中下一个相同的字符串:n\r\n![](/templates/uploads/IHbhJ7Gq9uHKM5z.png)\r\n\r\n\r\n#YCM\r\n	&lt;C-n&gt;    下一个自动补全选项:i\r\n	&lt;C-p&gt;    上一个自动补全选项:i\r\n	&lt;leader&gt;u    跳转到声明处:n\r\n	&lt;leader&gt;o    跳转到include包含的文件处:n\r\n	&lt;leader&gt;ff    语法错误自动修复:n\r\n	&lt;leader&gt;trk    检查语法并在底部小minibuffer窗口显示结果\r\n	&lt;C-Space&gt;    手动显示补全项窗口（配置中设置是两个字符或某些语法关键字出现后才显示补全窗口）\r\n\r\n\r\n#GV\r\n	&lt;leader&gt;g    显示git仓库提交记录:n\r\n	&lt;leader&gt;G    显示当前文件提交记录:n\r\n	&lt;leader&gt;gg    显示当前文件在某个commit下的完整内容:n\r\n\r\n#vim-fugitive\r\n\r\n\r\n#半自动补全ultisnips\r\n	&lt;leader&gt;,    触发半自动补全\r\n	&lt;C-n&gt;    跳到补全块中的下一个参数位置\r\n	&lt;C-p&gt;    跳到补全块中的上一个参数位置\r\n\r\n\r\n	1）查看vim加载了哪些脚本`:scriptnames`；vim内部学习文档`:vimtutor`\r\n	4）显示当前文件的全路径：`C-g`\r\n	5）刷新文件：`C-l`\r\n	6）Vim自带了自动补全（前提是在vim配置中开启了自动补全）：`&lt;C-x&gt;&lt;C-o&gt;`\r\n	#=============================all mode.end\r\n\r\n	#=============================normal mode.begin\r\n	&lt;leader&gt;run   执行当前python文件/编译执行c&amp;cpp文件\r\n	&lt;leader&gt;srcv   重载vim配置文件\r\n	&lt;leader&gt;&lt;leader&gt;s\r\n	&lt;leader&gt;w    光标切换到另一个窗口\r\n	&lt;leader&gt;g   YCM找到光标所在内容的定义处（代码追踪）\r\n	\r\n	#=============================normal mode.end\r\n    ', 1572321306, 'vim,快捷键');
INSERT INTO `exp` VALUES (18, 11, 'python3标准数据类型', '  # （1）python3中的标准数据类型（6个）\r\n1. number（数字）\r\n2. string（字符串）(str)\r\n3. list（列表）(list)\r\n4. tuple（元组）\r\n5. set（集合）\r\n6. dictionary（字典）(dict)\r\n\r\n## （1.1）number\r\nPython3 支持 int、float、bool、complex（复数）。\r\n在Python 3里，只有一种整数类型 int，表示为长整型，没有 python2 中的 Long。\r\n\r\n***注意***：在 Python2 中是没有布尔型的，它用数字 0 表示 False，用 1 表示 True。到 Python3 中，把 True 和 False 定义成关键字了，但它们的值还是 1 和 0，它们可以和数字相加。\r\n\r\n```python\r\n#定义方式\r\na = 100\r\na = int(100)\r\n```\r\n\r\n### （1.1.1）整型对象下的常用方法\r\n```python\r\n#bit_length  返回某数的二进制形式最少占据的有效位位数\r\nb = 3;\r\nprint(bin(b))\r\nprint(b.bit_length())\r\n```\r\n![](/templates/uploads/OYpDChOsCSJ6J9B.png)\r\n\r\n```python\r\n#__pow__  返回某数的n次幂，功能等同于pow(3,2)\r\nb = 3;\r\nprint(b.__pow__(3))\r\n```\r\n![](/templates/uploads/Or3woP2AmuvKIzQ.png)\r\n\r\n## （1.2）string\r\n```python\r\n#定义方式\r\ns1 = \'aa\'\r\ns2 = str(\'aa\')\r\ns3 = str()\r\n```\r\n\r\n### （1.2.1）字符串对象下的常用方法\r\n```python\r\n#大小写转换\r\ns1 = \'abCdEf\'\r\n##首字母转成大写的同时其他所有字母变成小写\r\nprint(s1.capitalize())\r\nprint(s1.upper())\r\nprint(s1.upper().lower())\r\n##大写转小写，小写转大写\r\nprint(s1.swapcase())\r\n##下面输出s1是为了说明前面这些操作都不会改变s1原有的值\r\nprint(s1)\r\n```\r\n![](/templates/uploads/WXS806DJsPksubk.png)\r\n\r\n```python\r\n#内容对齐相关\r\ns1 = \'abCdE\'\r\nprint(s1.center(8, \'@\'))\r\nprint(s1.center(9, \'@\'))\r\nprint(s1.ljust(8, \'@\'))\r\nprint(s1.rjust(8, \'@\'))\r\n```\r\n![](/templates/uploads/KWKTbliKTfG2Cmn.png)\r\n\r\n```python\r\n#编码与解码\r\ns1 = \'abCd你好\'\r\ns1_utf8 = s1.encode(\'utf-8\')\r\nprint(s1_utf8)\r\n##decode方法只能对编码后的字节码进行解码，可以指定解码的方式，默认utf8\r\nprint(s1_utf8.decode())\r\n```\r\n![](/templates/uploads/L54QvZ9PH3cpL1x.png)\r\n\r\n```python\r\n#统计\r\ns1 = \'abCd你好bCteew\'\r\nprint(s1.count(\'bC\'))\r\nprint(s1.count(\'bC\', 5))\r\n##相当于len(s1)\r\nprint(s1.__len__())\r\nprint(len(s1))\r\n```\r\n![](/templates/uploads/WlTYYLYDkVGZnYA.png)\r\n\r\n```python\r\n#去除空白字符  相关的还有lstrip和rstrip\r\ns1 = \'  \r\nabcDeFg\r\n  \'\r\ns2 = &quot;  \r\nabcDeFg\r\n  &quot;\r\n\r\nprint(s1)\r\nprint(s1.strip())\r\nprint(s2)\r\nprint(s2.strip())\r\n#从输出结果可以知道python中字符串没有单双引号的区别\r\n```\r\n![](/templates/uploads/h5ybZwJJHhSbhXD.png)\r\n\r\n```python\r\n#查找与替换\r\ns1 = \'ab_cDeFg你好aa.py\'\r\nprint(s1.startswith(\'ab_\'))\r\nprint(s1.endswith(\'.py\'))\r\nprint(\'------------------------\')\r\n##find查找是按照字符数来计算的，不是按字节数\r\nprint(s1.find(\'a\'))\r\nprint(s1.find(\'aa\'))\r\n##index系列与find系列功能相同，区别在于find找不到则返回-1，index找不到则直接报错\r\nprint(s1.index(\'c\'))\r\nprint(s1.rindex(\'aa\'))\r\nprint(\'------------------------\')\r\nprint(s1.replace(\'De\', \'TT\'))\r\n```\r\n![](/templates/uploads/Nr5lGr9ApS7cadL.png)\r\n\r\n```python\r\n#分割\r\ns1 = \'abcDDefG\r\nhDDi你\r\n好jk\'\r\nprint(s1.split(\'DD\'))\r\nprint(s1.splitlines())\r\n##指定参数True则将保留用于分割的换行符\r\nprint(s1.splitlines(True))\r\n```\r\n![](/templates/uploads/0qVLsvfVk8vJsX3.png)\r\n\r\n### （1.2.2）常用操作\r\n1. 长度\r\n2. 索引\r\n3. 切片\r\n4. 分割\r\n5. 移出空白\r\n\r\n```python\r\n#切片 切片范围为：&gt;=起始索引 &lt;结束索引\r\ns1 = \'abcdeFgHij\'\r\nprint(s1[2:6])\r\n```\r\n![](/templates/uploads/fVpC6KsekbCe5Cx.png)\r\n\r\n## （1.3）list\r\n```python\r\n#定义方式\r\nl1 = [1, 2, \'aa\', \'bb\']\r\nl2 = list()\r\n##以下均为list(可迭代的对象)方式创建列表\r\nl3 = list(\'abcde12\')\r\nl4 = list([1, 2, \'aa\'])\r\nl5 = list((11, 22, \'ab\'))\r\nl6 = list({\'k1\':\'v1\', \'k2\':\'v2\'})\r\nl7 = list({11, \'aa\', 22})\r\n```\r\n\r\n### （1.3.1）list对象下常用方法\r\n```python\r\n#追加\r\nli1 = [11, 22, \'aa\', \'bb\']\r\nli1_append1 = li1.append(33)\r\nprint(li1_append1)\r\nprint(li1)\r\nprint(\'---------------------append1\')\r\n\r\nli1_append2 = li1.append(\'abc\')\r\nprint(li1)\r\nprint(\'---------------------append2\')\r\n##append不将数据迭代插入，并且一次只能追加一个数据\r\nli1_append3 = li1.append(enumerate(\'abc\'))\r\nprint(li1)\r\nprint(\'---------------------append3\')\r\n\r\nli1_append4 = li1.append([55, 66])\r\nprint(li1)\r\nprint(\'---------------------append4\')\r\n```\r\n![](/templates/uploads/Pdeo9g2Tny6HDoa.png)\r\n\r\n```python\r\n#统计\r\nli2 = [11, 22, \'aa\', \'bb\', \'aa\', 66]\r\nli2_count = li2.count(\'aa\')\r\nprint(li2_count)\r\n```\r\n![](/templates/uploads/naEu0HVDPWG5F8n.png)\r\n\r\n```python\r\n#扩展 extend将会把数据迭代追加进目标列表中\r\nli3 = [11, 22, \'aa\']\r\nli3_extend1 = li3.extend(\'ab你好\')\r\nprint(li3_extend1)\r\nprint(li3)\r\n```\r\n![](/templates/uploads/a3ye83J3Af5EPZX.png)\r\n\r\n```python\r\n#查找索引位置\r\nli4 = [11, 22, \'aa\', \'cc\', 66, \'aa\']\r\nli4_index1 = li4.index(\'aa\')\r\nprint(li4_index1)\r\n##可以指定开始和结束索引范围\r\nli4_index2 = li4.index(\'aa\', 3, len(li4))\r\nprint(li4_index2)\r\n```\r\n![](/templates/uploads/QN8sZdBr1jlymst.png)\r\n\r\n```python\r\n#插入列表元素\r\nli5 = [11, 22]\r\nli5_insert1 = li5.insert(1, \'aa\')\r\nprint(li5)\r\n##当指定索引值超过目前最大索引值+1，则仅会将插入元素的索引值设置为原来最大索引值+1\r\nli5_insert2 = li5.insert(6, \'bb\')\r\nprint(li5)\r\nprint(li5[3])\r\n```\r\n![](/templates/uploads/PR6yuhPYxmFoXSq.png)\r\n\r\n```python\r\n#弹出最后一个元素并且获得弹出的值\r\nli6 = [11, 22, 33]\r\nli6_pop1 = li6.pop()\r\nprint(li6_pop1)\r\nprint(li6)\r\n```\r\n![](/templates/uploads/GuEzBlvPjxW9uRM.png)\r\n\r\n```python\r\n#删除列表元素\r\nli7 = [11, 22, 33]\r\nli7_remove1 = li7.remove(22)\r\nprint(li7_remove1)\r\nprint(li7)\r\n##删除还可以通过以下方法实现\r\nli8 = [11, 22, 33]\r\ndel(li8[1])\r\nprint(li8)\r\n```\r\n![](/templates/uploads/nqOzAu6a9iuGmwo.png)\r\n\r\n```python\r\n#翻转所有列表元素\r\nli9 = [11, 22, 33]\r\nprint(li9.reverse())\r\nprint(li9)\r\n```\r\n![](/templates/uploads/Dkbgp3RoBwgSPfN.png)\r\n\r\n### （1.3.2）常用操作\r\n长度\r\n索引\r\n切片\r\n追加\r\n删除\r\n循环\r\n包含\r\n\r\n## （1.4）tuple\r\n```python\r\n#定义方式\r\nt1 = (1, 2, \'aa\', \'bb\')\r\nt2 = tuple()\r\n##以下均为tuple(可迭代的对象)方式创建列表\r\nt3 = tuple(\'abcde12\')\r\nt4 = tuple([1, 2, \'aa\'])\r\nt5 = tuple((11, 22, \'ab\'))\r\nt6 = tuple({\'k1\':\'v1\', \'k2\':\'v2\'})\r\nt7 = tuple({11, \'aa\', 22})\r\n```\r\n\r\n### （1.4.1）tuple对象下常用方法\r\n\r\n### （1.4.2）常用操作\r\n\r\n\r\n## （1.5）set\r\n```python\r\n#定义方式\r\nst1 = {1, 2, \'aa\', \'bb\'}\r\nst2 = set()\r\n##以下均为set(可迭代的对象)方式创建列表\r\nst3 = set(\'abcde12\')\r\nst4 = set([1, 2, \'aa\'])\r\nst5 = set((11, 22, \'ab\'))\r\nst6 = set({\'k1\':\'v1\', \'k2\':\'v2\'})\r\nst7 = set({11, \'aa\', 22})\r\n```\r\n\r\n### （1.5.1）set对象下常用方法\r\n\r\n### （1.5.2）常用操作\r\n\r\n\r\n## （1.6）dictionary\r\n```python\r\n#定义方式\r\nd1 = {\'k1\':1, \'k2\':2, \'key3\':\'aa\', \'xxx\':\'bb\'}\r\nd2 = dict()\r\n##以下均为dict(可迭代的具有键值对的对象)方式创建列表\r\nd3 = dict(enumerate(\'abcde12\'))\r\nd4 = dict(enumerate([1, 2, \'aa\']))\r\nd5 = dict(enumerate((11, 22, \'ab\')))\r\nd6 = dict({\'k1\':\'v1\', \'k2\':\'v2\'})\r\nd7 = dict(enumerate({11, \'aa\', 22}))\r\nd8 = dict(k1=11, k2=\'bb\', xx=\'cc\')\r\n```\r\n\r\n### （1.6.1）dict对象下常用方法\r\n\r\n### （1.6.2）常用操作\r\n\r\n\r\n# （2）类型转换\r\n\r\n\r\n\r\n\r\n\r\n', 1572374142, 'python,基础');
INSERT INTO `exp` VALUES (19, 11, 'python运算符', '# 算术运算符\r\n![](/templates/uploads/l8nABexhMZX0sHr.png)\r\n\r\n# 赋值运算符\r\n![](/templates/uploads/Obm8pZoa6lkXxmw.png)\r\n\r\n# 比较运算符\r\n![](/templates/uploads/9JfPgNIZP7CvMDG.png)\r\n\r\n# 逻辑运算符\r\n![](/templates/uploads/SrVqYhgKvTSdTtR.png)\r\n\r\n# 成员运算符\r\n![](/templates/uploads/qH2lWSEjROVo9MW.png)\r\n\r\n# 三目运算符\r\n    值1 ? if 条件 : 值2', 1572378001, 'python,py,python3,运算符');
INSERT INTO `exp` VALUES (20, 11, 'python分支与循环', '# 分支\r\n\r\n## if..elif..else\r\n\r\n# 循环\r\n\r\n## for...in\r\n\r\n## while', 1572378112, 'python,分支,循环');
INSERT INTO `exp` VALUES (21, 11, 'python函数', '# 函数的定义\r\n\r\n# 函数的参数\r\n\r\n# 函数的调用\r\n\r\n', 1572378221, 'python,函数');
INSERT INTO `exp` VALUES (22, 11, 'python变量', '# 全局变量\r\n\r\n# 局部变量', 1572378270, 'python,变量');
INSERT INTO `exp` VALUES (23, 11, 'python文件操作', '# 相关内置函数\r\n\r\n# 模式', 1572378362, 'python,文件操作');
INSERT INTO `exp` VALUES (24, 11, 'python常用内置函数', '# 相关的函数汇总\r\n\r\n# 操作小例', 1572378444, 'python,内置函数');
INSERT INTO `exp` VALUES (25, 11, 'python装饰器', '', 1572493868, 'python,装饰器');
INSERT INTO `exp` VALUES (26, 11, 'python中的正则表达式', ' # re模块\r\n```python\r\n#在python中使用正则表达式需要引入re模块\r\nimport re\r\n```\r\n\r\n# 元字符\r\n1. 匹配任意除换行符外的字符(在DOTALL模式中也能匹配换行符：`.`\r\n2. `^`\r\n3. `$`\r\n重复次数\r\n4. 0~n次：`*`\r\n5. 1~n次：`+`\r\n6. 0~1次：`?`\r\n7. 指定次数范围：`{m,n}`\r\n字符范围\r\n8. 指定字符范围：`[x-x]`\r\n9. 或：`|`\r\n10. 组：`()`\r\n11. 转义：``\r\n\r\n## 预定义字符集\r\n![](/templates/uploads/W2sr1px6gfseUkD.png)\r\n\r\n# 贪婪匹配与非贪婪匹配\r\n\r\n#\r\n\r\n\r\n', 1572493898, 'python,正则');
INSERT INTO `exp` VALUES (27, 8, 'vmware安装与配置双网卡NAT&Host-Only', '# win7下安装vmware15\r\n\r\n# vmware中安装Centos7虚拟机\r\n\r\n# 配置NAT网卡\r\nNAT网卡是负责虚拟机直接上网的，不负责与宿主机连通！\r\n\r\n![](/templates/uploads/amRMpLxVz7tt2W4.png)\r\n\r\nDHCP是负责自动分配IP的所以保持默认勾选状态即可。\r\n\r\n![](/templates/uploads/SNgMlXldQKqZD9P.png)\r\n\r\nvmware的NAT网卡对应的网卡名是VMnet8，可以在宿主机的“网络和Internet”中查看到，但是NAT网络不需要对这个进行配置，这里仅作为笔记记录，以备以后拾遗，\r\n\r\n![](/templates/uploads/PJXYtSNkysdTSq2.png)\r\n\r\nvmware新建虚拟机后，默认只有一个网卡，这个取决于vmware的配置，如下图：\r\n\r\n![](/templates/uploads/rfTXUUyDS12s2H9.png)\r\n\r\n进入虚拟机系统，配置这个网卡，保持DHCP自动分配IP不变，将启动改为yes\r\n\r\n![](/templates/uploads/W7gWON58hjWTkzh.png)\r\n\r\n最后重启网络服务,在测试ping外网看看能否ping通即可\r\n\r\n`systemctl restart network`\r\n\r\n# 配置仅Host-Only\r\n仅Host-Only负责让宿主机与虚拟机之间互相连通！\r\n\r\n首先添加一个新的网卡，\r\n\r\n![](/templates/uploads/Vyo5HzfXJAp53Ci.png)\r\n\r\n然后设置vmware负责仅主机模式的网卡，\r\n\r\n![](/templates/uploads/UNjgPgtjd004kJg.png)\r\n\r\n仅主机模式的网卡在win7中的名字叫VMnet1，修改这个IPV4的IP，\r\n\r\n![](/templates/uploads/HmMfOVMBCWpkheN.png)\r\n\r\n上面这个IP之后要作为虚拟机系统的网关来存在的，进入虚拟机系统，配置第二个网卡，先观察第二个网卡的名称，\r\n![](/templates/uploads/iaGl09kTeipGI32.png)\r\n\r\n然后再复制一个网卡文件，修改内部的配置，\r\n\r\n![](/templates/uploads/Wra1hgjvjCrTPjG.png)\r\n\r\n配置完成，重启网络服务，然后宿主机ping虚拟机固定IP，\r\n\r\n![](/templates/uploads/a94xeslUpBatHGc.png)\r\n\r\n到这里虽然本次可以ping通，但是会遇到一个问题，过几秒后，就ping不通了，查看虚拟机第二个网卡的IP发现消失了，这个问题与linux自带的网络管理服务进程有关，关闭这个服务，并且取消掉开机自动启动，就可以解决这个问题了：\r\n![](/templates/uploads/rF0mnrLHc0zmfmo.png)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n', 1572697527, 'vmware,双网卡');
INSERT INTO `exp` VALUES (28, 5, 't1', '&lt;pre class=&quot;prettyprint lang-html&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;\r\n&amp;lt;html&amp;gt;\r\n&amp;lt;head&amp;gt;\r\n&amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt;\r\n&amp;lt;title&amp;gt;xxxx&amp;lt;/title&amp;gt;\r\n&amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;/test/xh/jquery/jquery-1.9.1.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;\r\n&amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;/test/xh/xheditor-1.2.2.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;\r\n&amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;/test/xh/xheditor_lang/zh-cn.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;\r\n&amp;lt;link href=&amp;quot;/test/pre/src/prettify.css&amp;quot; rel=&amp;quot;stylesheet&amp;quot; type=&amp;quot;text/css&amp;quot; /&amp;gt;\r\n&amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;/test/pre/src/prettify.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;\r\n&amp;lt;style&amp;gt;\r\n.btnCode {\r\n	background: transparent url(&amp;quot;/test/a.png&amp;quot;) no-repeat 16px 16px;\r\n	background-position: 2px 2px;\r\n}\r\n&amp;lt;/style&amp;gt;\r\n&amp;lt;/head&amp;gt;\r\n&amp;lt;body&amp;gt;\r\n\r\n&amp;lt;textarea id=&amp;quot;t1&amp;quot; name=&amp;quot;elm1&amp;quot; rows=&amp;quot;12&amp;quot; cols=&amp;quot;80&amp;quot; style=&amp;quot;width: 80%&amp;quot;&amp;gt;&amp;lt;/textarea&amp;gt;\r\n\r\n&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;\r\n$(function() {\r\n	$(pageInit);\r\n	function pageInit()\r\n	{\r\n		var allPlugin={\r\n			\r\n			Code:{c:\'btnCode\',t:\'插入代码\',h:1,e:function(){\r\n				var _this=this;\r\n				var htmlCode=\'&amp;lt;div&amp;gt;&amp;lt;select id=&amp;quot;xheCodeType&amp;quot;&amp;gt;\'\r\n				+\'&amp;lt;option value=&amp;quot;html&amp;quot;&amp;gt;HTML/XML&amp;lt;/option&amp;gt;&amp;lt;option value=&amp;quot;js&amp;quot;&amp;gt;Javascript&amp;lt;/option&amp;gt;\'\r\n				+\'&amp;lt;option value=&amp;quot;css&amp;quot;&amp;gt;CSS&amp;lt;/option&amp;gt;&amp;lt;option value=&amp;quot;php&amp;quot;&amp;gt;PHP&amp;lt;/option&amp;gt;\'\r\n				+\'&amp;lt;option value=&amp;quot;java&amp;quot;&amp;gt;Java&amp;lt;/option&amp;gt;&amp;lt;option value=&amp;quot;py&amp;quot;&amp;gt;Python&amp;lt;/option&amp;gt;\'\r\n				+\'&amp;lt;option value=&amp;quot;pl&amp;quot;&amp;gt;Perl&amp;lt;/option&amp;gt;&amp;lt;option value=&amp;quot;rb&amp;quot;&amp;gt;Ruby&amp;lt;/option&amp;gt;\'\r\n				+\'&amp;lt;option value=&amp;quot;cs&amp;quot;&amp;gt;C#&amp;lt;/option&amp;gt;&amp;lt;option value=&amp;quot;c&amp;quot;&amp;gt;C++/C&amp;lt;/option&amp;gt;\'\r\n				+\'&amp;lt;option value=&amp;quot;sql&amp;quot;&amp;gt;sql&amp;lt;/option&amp;gt;\'\r\n				+\'&amp;lt;option value=&amp;quot;vb&amp;quot;&amp;gt;VB/ASP&amp;lt;/option&amp;gt;&amp;lt;option value=&amp;quot;&amp;quot;&amp;gt;其它&amp;lt;/option&amp;gt;\'\r\n				+\'&amp;lt;/select&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;\'\r\n				+\'&amp;lt;textarea id=&amp;quot;xheCodeValue&amp;quot; wrap=&amp;quot;soft&amp;quot; spellcheck=&amp;quot;false&amp;quot; style=&amp;quot;width:300px;height:100px;&amp;quot; /&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div style=&amp;quot;text-align:right;&amp;quot;&amp;gt;&amp;lt;input type=&amp;quot;button&amp;quot; id=&amp;quot;xheSave&amp;quot; value=&amp;quot;确定&amp;quot; /&amp;gt;&amp;lt;/div&amp;gt;\';    \r\n				var jCode=$(htmlCode),jType=$(\'#xheCodeType\',jCode),jValue=$(\'#xheCodeValue\',jCode),jSave=$(\'#xheSave\',jCode);\r\n				jSave.click(function(){\r\n					_this.loadBookmark();\r\n					_this.pasteHTML(\'&amp;lt;pre class=&amp;quot;prettyprint lang-\'+jType.val()+\'&amp;quot;&amp;gt;\'+_this.domEncode(jValue.val())+\'&amp;lt;/pre&amp;gt;\');\r\n					_this.hidePanel();\r\n					return false;    \r\n				});\r\n				_this.saveBookmark();  \r\n				_this.showDialog(jCode);\r\n			}}\r\n		}\r\n		$(\'#t1\').xheditor({plugins:allPlugin,tools:\'Cut,Copy,Paste,Pastetext,Blocktag,Fontface,FontSize,FontColor,BackColor,Bold,Italic,Underline,Removeformat,Link,Source,Code,Emot,Table\'});\r\n	}\r\n})\r\n&amp;lt;/script&amp;gt;\r\n&amp;lt;/body&amp;gt;\r\n&amp;lt;/html&amp;gt;&lt;/pre&gt;\r\n', 1574760949, 'aaa,aaa');
INSERT INTO `exp` VALUES (29, 2, '', '```html\r\n&lt;!DOCTYPE html&gt;\r\n&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;meta charset=&quot;utf-8&quot;&gt;\r\n&lt;title&gt;xxxx&lt;/title&gt;\r\n&lt;script type=&quot;text/javascript&quot; src=&quot;/test/xh/jquery/jquery-1.9.1.min.js&quot;&gt;&lt;/script&gt;\r\n&lt;script type=&quot;text/javascript&quot; src=&quot;/test/xh/xheditor-1.2.2.min.js&quot;&gt;&lt;/script&gt;\r\n&lt;script type=&quot;text/javascript&quot; src=&quot;/test/xh/xheditor_lang/zh-cn.js&quot;&gt;&lt;/script&gt;\r\n&lt;link href=&quot;/test/pre/src/prettify.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot; /&gt;\r\n&lt;script type=&quot;text/javascript&quot; src=&quot;/test/pre/src/prettify.js&quot;&gt;&lt;/script&gt;\r\n&lt;style&gt;\r\n.btnCode {\r\n	background: transparent url(&quot;/test/a.png&quot;) no-repeat 16px 16px;\r\n	background-position: 2px 2px;\r\n}\r\n&lt;/style&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n\r\n&lt;textarea id=&quot;t1&quot; name=&quot;elm1&quot; rows=&quot;12&quot; cols=&quot;80&quot; style=&quot;width: 80%&quot;&gt;&lt;/textarea&gt;\r\n\r\n&lt;script type=&quot;text/javascript&quot;&gt;\r\n$(function() {\r\n	$(pageInit);\r\n	function pageInit()\r\n	{\r\n		var allPlugin={\r\n			\r\n			Code:{c:\'btnCode\',t:\'插入代码\',h:1,e:function(){\r\n				var _this=this;\r\n				var htmlCode=\'&lt;div&gt;&lt;select id=&quot;xheCodeType&quot;&gt;\'\r\n				+\'&lt;option value=&quot;html&quot;&gt;HTML/XML&lt;/option&gt;&lt;option value=&quot;js&quot;&gt;Javascript&lt;/option&gt;\'\r\n				+\'&lt;option value=&quot;css&quot;&gt;CSS&lt;/option&gt;&lt;option value=&quot;php&quot;&gt;PHP&lt;/option&gt;\'\r\n				+\'&lt;option value=&quot;java&quot;&gt;Java&lt;/option&gt;&lt;option value=&quot;py&quot;&gt;Python&lt;/option&gt;\'\r\n				+\'&lt;option value=&quot;pl&quot;&gt;Perl&lt;/option&gt;&lt;option value=&quot;rb&quot;&gt;Ruby&lt;/option&gt;\'\r\n				+\'&lt;option value=&quot;cs&quot;&gt;C#&lt;/option&gt;&lt;option value=&quot;c&quot;&gt;C++/C&lt;/option&gt;\'\r\n				+\'&lt;option value=&quot;sql&quot;&gt;sql&lt;/option&gt;\'\r\n				+\'&lt;option value=&quot;vb&quot;&gt;VB/ASP&lt;/option&gt;&lt;option value=&quot;&quot;&gt;其它&lt;/option&gt;\'\r\n				+\'&lt;/select&gt;&lt;/div&gt;&lt;div&gt;\'\r\n				+\'&lt;textarea id=&quot;xheCodeValue&quot; wrap=&quot;soft&quot; spellcheck=&quot;false&quot; style=&quot;width:300px;height:100px;&quot; /&gt;&lt;/div&gt;&lt;div style=&quot;text-align:right;&quot;&gt;&lt;input type=&quot;button&quot; id=&quot;xheSave&quot; value=&quot;确定&quot; /&gt;&lt;/div&gt;\';    \r\n				var jCode=$(htmlCode),jType=$(\'#xheCodeType\',jCode),jValue=$(\'#xheCodeValue\',jCode),jSave=$(\'#xheSave\',jCode);\r\n				jSave.click(function(){\r\n					_this.loadBookmark();\r\n					_this.pasteHTML(\'&lt;pre class=&quot;prettyprint lang-\'+jType.val()+\'&quot;&gt;\'+_this.domEncode(jValue.val())+\'&lt;/pre&gt;\');\r\n					_this.hidePanel();\r\n					return false;    \r\n				});\r\n				_this.saveBookmark();  \r\n				_this.showDialog(jCode);\r\n			}}\r\n		}\r\n		$(\'#t1\').xheditor({plugins:allPlugin,tools:\'Cut,Copy,Paste,Pastetext,Blocktag,Fontface,FontSize,FontColor,BackColor,Bold,Italic,Underline,Removeformat,Link,Source,Code,Emot,Table\'});\r\n	}\r\n})\r\n&lt;/script&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;\r\n```', 1574778197, '');

-- ----------------------------
-- Table structure for expcat
-- ----------------------------
DROP TABLE IF EXISTS `expcat`;
CREATE TABLE `expcat`  (
  `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `post_date` int(10) UNSIGNED NOT NULL DEFAULT 0,
  `name` varchar(30) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '分类名称',
  `pid` int(4) UNSIGNED NULL DEFAULT 0 COMMENT '上级分类id',
  `article_nums` int(4) UNSIGNED NULL DEFAULT 0 COMMENT '直属文章数量',
  `level` tinyint(1) UNSIGNED NULL DEFAULT 1 COMMENT '节点层级',
  `child_nums` smallint(2) UNSIGNED NULL DEFAULT 0 COMMENT '直属子节点总个数',
  `child_ids` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '直属子节点id集合',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = MyISAM AUTO_INCREMENT = 39 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of expcat
-- ----------------------------
INSERT INTO `expcat` VALUES (1, 1574694895, 'git', 0, 0, 1, 2, '2,4');
INSERT INTO `expcat` VALUES (2, 1574694910, '学习git', 1, 0, 2, 1, '3');
INSERT INTO `expcat` VALUES (3, 1574694946, '学习git【廖雪峰git教程】', 2, 0, 3, 0, '');
INSERT INTO `expcat` VALUES (4, 1574695004, '使用git', 1, 0, 2, 2, '5,6');
INSERT INTO `expcat` VALUES (5, 1574695031, '使用git遇到的问题', 4, 0, 3, 0, '');
INSERT INTO `expcat` VALUES (6, 1574695051, '我的经验', 4, 0, 3, 0, '');
INSERT INTO `expcat` VALUES (7, 1574695146, 'vim', 0, 0, 1, 2, '8,9');
INSERT INTO `expcat` VALUES (8, 1574695164, 'vim for linux', 7, 0, 2, 2, '10,11');
INSERT INTO `expcat` VALUES (9, 1574695175, 'gvim', 7, 0, 2, 1, '12');
INSERT INTO `expcat` VALUES (10, 1574695532, '学习入门文档【vim tutor】', 8, 0, 3, 0, '');
INSERT INTO `expcat` VALUES (11, 1574695604, 'vim的安装与使用', 8, 0, 3, 0, '');
INSERT INTO `expcat` VALUES (12, 1574695619, 'gvim', 9, 0, 3, 0, '');
INSERT INTO `expcat` VALUES (13, 1574695654, 'linux', 0, 0, 1, 2, '14,16');
INSERT INTO `expcat` VALUES (14, 1574695696, '学习linux', 13, 0, 2, 1, '15');
INSERT INTO `expcat` VALUES (15, 1574695731, '学习鸟哥linux', 14, 0, 3, 0, '');
INSERT INTO `expcat` VALUES (16, 1574695761, '使用linux', 13, 0, 2, 1, '17');
INSERT INTO `expcat` VALUES (17, 1574695789, '我的经验', 16, 0, 3, 0, '');
INSERT INTO `expcat` VALUES (18, 1574695821, 'python', 0, 0, 1, 1, '19');
INSERT INTO `expcat` VALUES (19, 1574695832, '学习python', 18, 0, 2, 1, '20');
INSERT INTO `expcat` VALUES (20, 1574695863, '学习老男孩python', 19, 0, 3, 0, '');
INSERT INTO `expcat` VALUES (21, 1575039354, '吃饭做菜', 0, 0, 1, 3, '22,23,27');
INSERT INTO `expcat` VALUES (22, 1575039674, '早餐', 21, 0, 2, 3, '24,25,26');
INSERT INTO `expcat` VALUES (23, 1575039683, '中餐晚餐', 21, 0, 2, 0, '');
INSERT INTO `expcat` VALUES (24, 1575039709, '清淡', 22, 0, 3, 0, '');
INSERT INTO `expcat` VALUES (25, 1575039784, '西餐', 22, 0, 3, 0, '');
INSERT INTO `expcat` VALUES (26, 1575039803, '鲜香麻辣', 22, 0, 3, 0, '');
INSERT INTO `expcat` VALUES (27, 1575039897, '酱料', 21, 0, 2, 1, '28');
INSERT INTO `expcat` VALUES (28, 1575039940, '川香麻辣', 27, 0, 3, 0, '');
INSERT INTO `expcat` VALUES (29, 1575442554, '开发环境', 0, 0, 1, 1, '30');
INSERT INTO `expcat` VALUES (30, 1575442576, 'IDE工具', 29, 0, 2, 1, '31');
INSERT INTO `expcat` VALUES (31, 1575442585, 'vscode', 30, 0, 3, 0, '');
INSERT INTO `expcat` VALUES (32, 1575536062, 'windows', 0, 0, 1, 1, '33');
INSERT INTO `expcat` VALUES (33, 1575536073, '开发环境', 32, 0, 2, 2, '34,35');
INSERT INTO `expcat` VALUES (34, 1575536082, 'wamp', 33, 0, 3, 0, '');
INSERT INTO `expcat` VALUES (35, 1575609547, 'laravel', 33, 0, 3, 0, '');
INSERT INTO `expcat` VALUES (36, 1576495942, '日常总结', 0, 0, 1, 1, '37');
INSERT INTO `expcat` VALUES (37, 1576495949, '日常总结', 36, 0, 2, 1, '38');
INSERT INTO `expcat` VALUES (38, 1576495959, '日常总结', 37, 0, 3, 0, '');

-- ----------------------------
-- Table structure for expchifan
-- ----------------------------
DROP TABLE IF EXISTS `expchifan`;
CREATE TABLE `expchifan`  (
  `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `post_date` int(10) UNSIGNED NOT NULL DEFAULT 0,
  `title` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '标题',
  `cat_numb` tinyint(1) UNSIGNED NULL DEFAULT 0 COMMENT '分类代号',
  `con` text CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '内容',
  `tags` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '标签  ',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = MyISAM AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Table structure for expnew
-- ----------------------------
DROP TABLE IF EXISTS `expnew`;
CREATE TABLE `expnew`  (
  `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `post_date` int(10) UNSIGNED NOT NULL DEFAULT 0,
  `title` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '标题',
  `content` text CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '内容',
  `tags` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '标签',
  `expcat__id` int(4) UNSIGNED NULL DEFAULT 0 COMMENT '所属exp分类id',
  `expcat__name` varchar(30) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '所属exp分类名称',
  `crumbs_expcat_ids` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '所属exp分类id父级关系',
  `crumbs_expcat_names` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '所属exp分类名称父级关系',
  `is_del` tinyint(1) UNSIGNED NULL DEFAULT 0 COMMENT '是否删除',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = MyISAM AUTO_INCREMENT = 17 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of expnew
-- ----------------------------
INSERT INTO `expnew` VALUES (2, 1574947381, 'git简介', '# GIT的诞生\r\n很多人都知道，Linus在1991年创建了开源的Linux，从此，Linux系统不断发展，已经成为最大的服务器系统软件了。\r\nLinus虽然创建了Linux，但Linux的壮大是靠全世界热心的志愿者参与的，这么多人在世界各地为Linux编写代码，那Linux的代码是如何管理的呢？\r\n事实是，在2002年以前，世界各地的志愿者把源代码文件通过diff的方式发给Linus，然后由Linus本人通过手工方式合并代码！\r\n你也许会想，为什么Linus不把Linux代码放到版本控制系统里呢？不是有CVS、SVN这些免费的版本控制系统吗？因为Linus坚定地反对CVS和SVN，这些集中式的版本控制系统不但速度慢，而且必须联网才能使用。有一些商用的版本控制系统，虽然比CVS、SVN好用，但那是付费的，和Linux的开源精神不符。\r\n不过，到了2002年，Linux系统已经发展了十年了，代码库之大让Linus很难继续通过手工方式管理了，社区的弟兄们也对这种方式表达了强烈不满，于是Linus选择了一个商业的版本控制系统BitKeeper，BitKeeper的东家BitMover公司出于人道主义精神，授权Linux社区免费使用这个版本控制系统。\r\n安定团结的大好局面在2005年就被打破了，原因是Linux社区牛人聚集，不免沾染了一些梁山好汉的江湖习气。开发Samba的Andrew试图破解BitKeeper的协议（这么干的其实也不只他一个），被BitMover公司发现了（监控工作做得不错！），于是BitMover公司怒了，要收回Linux社区的免费使用权。\r\nLinus可以向BitMover公司道个歉，保证以后严格管教弟兄们，嗯，这是不可能的。实际情况是这样的：\r\nLinus花了两周时间自己用C写了一个分布式版本控制系统，这就是Git！一个月之内，Linux系统的源码已经由Git管理了！牛是怎么定义的呢？大家可以体会一下。\r\nGit迅速成为最流行的分布式版本控制系统，尤其是2008年，GitHub网站上线了，它为开源项目免费提供Git存储，无数开源项目开始迁移至GitHub，包括jQuery，PHP，Ruby等等。\r\n历史就是这么偶然，如果不是当年BitMover公司威胁Linux社区，可能现在我们就没有免费而超级好用的Git了。\r\n\r\n# GIT的安装\r\n省略\r\n\r\n# 查看配置项\r\n查看所有配置项：`git  config  [--global]  -l`\r\n\r\n![](/public/tools/editormdimg/201911/editormd_5ddfca2aa8bf020191128132250.19.jpg)', '', 1, 'git', '1|2|3', 'git|学习git|学习git【廖雪峰git教程】', 0);
INSERT INTO `expnew` VALUES (3, 1574948617, 'git的基本使用', '# 创建版本库\r\n\r\n创建版本仓库：`git init`\r\n\r\n查看状态：`git status`\r\n\r\n![](/public/tools/editormdimg/201911/editormd_5ddfcab1b0d8420191128132505.20.jpg)\r\n\r\n添加文件到暂存区：`git  add  [xx/xxx/x.xx]`\r\n\r\n提交文件：`git  commit  [-m  “comments”]`\r\n\r\n# 版本回退（回到过去）\r\n\r\n在Git中，用`HEAD`表示当前版本，上一个版本就是`HEAD^`，上上一个版本就是`HEAD^^`，当然往上100个版本写100个^比较容易数不过来，所以写成`HEAD~100`。\r\n\r\n```shell\r\n查看往期版本：git log [--pretty=oneline]\r\n```\r\n\r\n![](/public/tools/editormdimg/201911/editormd_5ddfcbde0ac0020191128133006.21.jpg)\r\n\r\n```shell\r\n回退版本：git  reset  --hard  xxxxxx\r\n```\r\n\r\n![](/public/tools/editormdimg/201911/editormd_5ddfcc225be7620191128133114.22.jpg)\r\n\r\n# 版本前进（回到未来）\r\n\r\n现在，你回退到了某个版本，关掉了电脑，第二天早上就后悔了，想恢复到新版本怎么办？找不到新版本的`commit id`怎么办？\r\n在Git中，总是有后悔药可以吃的。当你用`$ git reset --hard HEAD^`回退到part of day1 and day2 all版本时，再想恢复到append GPL，就必须找到append GPL的commit id。Git提供了一个命令`git reflog`用来记录你的每一次命令。\r\n\r\n```shell\r\n查看以往所操作的全部指令：git  reflog\r\n```\r\n\r\n![](/public/tools/editormdimg/201911/editormd_5ddfcc8fdbc8020191128133303.23.jpg)\r\n\r\n版本前进操作之前：\r\n\r\n![](/public/tools/editormdimg/201911/editormd_5ddfccafda10520191128133335.24.jpg)\r\n\r\n版本前进操作之后：\r\n\r\n![](/public/tools/editormdimg/201911/editormd_5ddfccc47035f20191128133356.25.jpg)\r\n\r\n# 撤销修改\r\n\r\n```shell\r\n操作指令：git  checkout  --  xxx.xx\r\n```\r\n\r\n**注意**：不能撤销 添加文件操作。\r\n\r\n![](/public/tools/editormdimg/201911/editormd_5ddfcd3e07a3d20191128133558.26.jpg)\r\n\r\n![](/public/tools/editormdimg/201911/editormd_5ddfcd4e920e220191128133614.27.jpg)\r\n\r\n![](/public/tools/editormdimg/201911/editormd_5ddfcd60109fa20191128133632.28.jpg)\r\n\r\n## 单纯撤销修改（未执行git add）\r\n\r\n修改前t1.txt文件的内容：\r\n\r\n![](/public/tools/editormdimg/201911/editormd_5ddfcd8214f9420191128133706.29.jpg)\r\n\r\n将t1.txt文件进行修改：\r\n\r\n![](/public/tools/editormdimg/201911/editormd_5ddfcd96e9baf20191128133726.30.jpg)\r\n\r\n![](/public/tools/editormdimg/201911/editormd_5ddfcdb49bfd320191128133756.31.jpg)\r\n\r\n执行撤销修改操作：\r\n\r\n![](/public/tools/editormdimg/201911/editormd_5ddfcdcbe03d220191128133819.32.jpg)\r\n\r\n查看t1.txt文件，发现该文件之前所作的修改操作全部被撤销了，\r\n\r\n![](/public/tools/editormdimg/201911/editormd_5ddfcde1b84a920191128133841.33.jpg)\r\n\r\n## 撤销修改（执行了git add）\r\n\r\n修改前t1.txt文件的内容：\r\n\r\n![](/public/tools/editormdimg/201911/editormd_5ddfce45ab27620191128134021.34.jpg)\r\n\r\n将t1.txt文件进行修改，并且执行git add提交操作：\r\n\r\n![](/public/tools/editormdimg/201911/editormd_5ddfce5e9167f20191128134046.35.jpg)\r\n\r\n![](/public/tools/editormdimg/201911/editormd_5ddfce883109e20191128134128.36.jpg)\r\n\r\n此时后悔了，想执行撤销操作：\r\n1）根据提示先执行git reset操作，把暂存区的修改撤销掉（git add操作是将文件提交到暂存区）\r\n\r\n![](/public/tools/editormdimg/201911/editormd_5ddfcea02ef1720191128134152.37.jpg)\r\n\r\n但是t1.txt修改后的内容还在，\r\n\r\n![](/public/tools/editormdimg/201911/editormd_5ddfcec580a6320191128134229.38.jpg)\r\n\r\n2）再执行git checkout操作撤销修改\r\n\r\n![](/public/tools/editormdimg/201911/editormd_5ddfcee34d11a20191128134259.39.jpg)\r\n\r\n再次查看t1.txt，发现修改的内容被撤销了（相当于丢弃了对工作区中t1.txt的修改），\r\n\r\n![](/public/tools/editormdimg/201911/editormd_5ddfcefe69d9f20191128134326.40.jpg)\r\n', '', 1, 'git', '1|2|3', 'git|学习git|学习git【廖雪峰git教程】', 0);
INSERT INTO `expnew` VALUES (4, 1574949506, 'github远程仓库', '# 说明\r\n需要向github账户中添加本地SSH Key，以后在本地修改才能推送到github远程仓库中。\r\n\r\n![](/public/tools/editormdimg/201911/editormd_5ddfd1130255d20191128215219.41.jpg)\r\n\r\n# 为github帐号添加ssh key\r\n在本地计算机上生成SSH Key：\r\n\r\n![](/public/tools/editormdimg/201911/editormd_5ddfd1485079620191128215312.42.jpg)\r\n\r\n打开c://Users/Administrator/.ssh/id_rsa.pub，复制全部内容\r\n\r\n![](/public/tools/editormdimg/201911/editormd_5ddfd15b17b2020191128215331.43.jpg)\r\n\r\n登陆github，按下图顺序进入SSH添加界面\r\n\r\n![](/public/tools/editormdimg/201911/editormd_5ddfd1707e64420191128215352.44.jpg)\r\n\r\n![](/public/tools/editormdimg/201911/editormd_5ddfd17e71a4620191128215406.45.jpg)\r\n\r\n![](/public/tools/editormdimg/201911/editormd_5ddfd18c006c720191128215420.46.jpg)\r\n\r\n点击Add SSH key，\r\n\r\n![](/public/tools/editormdimg/201911/editormd_5ddfd19b4038d20191128215435.47.jpg)\r\n\r\n如上图所示，添加成功！\r\n\r\n# 添加远程库（将本地仓库关联github仓库）\r\n\r\n## 1）创建本地仓库\r\n\r\n![](/public/tools/editormdimg/201911/editormd_5ddfd1bc15ae920191128215508.48.jpg)\r\n\r\n添加文件进行各种操作：\r\n\r\n![](/public/tools/editormdimg/201911/editormd_5ddfd1cc9bd9120191128215524.49.jpg)\r\n\r\n操作之后本地仓库中的文件：\r\n\r\n![](/public/tools/editormdimg/201911/editormd_5ddfd1e42031920191128215548.50.jpg)\r\n\r\n## 2）创建github远程仓库\r\n\r\n![](/public/tools/editormdimg/201911/editormd_5ddfd1f95ddfe20191128215609.51.jpg)\r\n\r\n![](/public/tools/editormdimg/201911/editormd_5ddfd205ec19d20191128215621.52.jpg)\r\n\r\n## 3）关联本地仓库到github远程仓库\r\n\r\na. 将本地仓库添加关联远程仓库\r\n\r\n![](/public/tools/editormdimg/201911/editormd_5ddfd2232254520191128215651.53.jpg)\r\n\r\n![](/public/tools/editormdimg/201911/editormd_5ddfd2316dddb20191128215705.54.jpg)\r\n\r\nb. 将本地库的所有内容推送到github远程仓库\r\n\r\n![](/public/tools/editormdimg/201911/editormd_5ddfd243bb2c120191128215723.55.jpg)\r\n\r\n![](/public/tools/editormdimg/201911/editormd_5ddfd252af22a20191128215738.56.jpg)\r\n\r\n推送成功后，我们可以在github页面中看到远程仓库的内容：\r\n\r\n![](/public/tools/editormdimg/201911/editormd_5ddfd269d6d1620191128215801.57.jpg)\r\n\r\n![](/public/tools/editormdimg/201911/editormd_5ddfd2783e56a20191128215816.58.jpg)\r\n\r\n', '', 1, 'git', '1|2|3', 'git|学习git|学习git【廖雪峰git教程】', 0);
INSERT INTO `expnew` VALUES (5, 1575041258, '分支管理', '# 基本介绍\r\n![](/public/tools/editormdimg/201911/editormd_5de135052166120191129231101.59.jpg)\r\n\r\n![](/public/tools/editormdimg/201911/editormd_5de135bce037020191129231404.62.jpg)\r\n\r\n![](/public/tools/editormdimg/201911/editormd_5de135577601f20191129231223.61.jpg)\r\n\r\n![](/public/tools/editormdimg/201911/editormd_5de136a67263a20191129231758.63.jpg)\r\n\r\n![](/public/tools/editormdimg/201911/editormd_5de136be9f2e820191129231822.64.jpg)\r\n\r\n![](/public/tools/editormdimg/201911/editormd_5de136e242a5020191129231858.65.jpg)\r\n\r\n# 案例1：创建与合并分支\r\n\r\n![](/public/tools/editormdimg/201911/editormd_5de1372ee108220191129232014.66.jpg)\r\n\r\n# 案例2：解决冲突\r\n\r\n![](/public/tools/editormdimg/201911/editormd_5de137646e24820191129232108.67.jpg)\r\n\r\n# 案例3：分支管理策略\r\n\r\n![](/public/tools/editormdimg/201911/editormd_5de137872cf4920191129232143.68.jpg)\r\n\r\n# 案例4：BUG分支\r\n\r\n软件开发中，bug就像家常便饭一样。有了bug就需要修复，在Git中，每个bug都可以通过一个新的临时分支来修复，修复后，合并分支，然后将临时分支删除。\r\n\r\n假设当前正在dev分支上进行开发，\r\n\r\n![](/public/tools/editormdimg/201911/editormd_5de137b26928d20191129232226.69.jpg)\r\n\r\n但是临时接到一个修改`master`分支BUG的任务，所以现在需要根据`master`分支新建一个分支，比如`debug-001`，在这个分支上去修复BUG。\r\n但是，当前我在`dev`分支上开发到一半，尚未开发完，没法提交，预估还需要几天时间开发`dev`，而BUG需要立即去解决，否则影响项目正常运行，怎么办？\r\nGIT中提供了stash功能，可以将当前的工作现场“保存”起来，以后有需要可以恢复现场继续工作。\r\n:tw-1f170: :tw-1f6a9:***注意***：在执行stash之前，必须先将所有工作区中的文件添加到暂存区，否则工作区中的文件将无法保存进stash中。\r\n\r\n![](/public/tools/editormdimg/201911/editormd_5de1380dabbb720191129232357.70.jpg)\r\n\r\n执行git stash指令将当前分支工作现场保存起来：\r\n\r\n![](/public/tools/editormdimg/201911/editormd_5de138249d17720191129232420.71.jpg)\r\n\r\n![](/public/tools/editormdimg/201911/editormd_5de13839eed5320191129232441.72.jpg)\r\n\r\n保存工作现场后，再切换回master分支修改BUG，\r\n\r\n![](/public/tools/editormdimg/201911/editormd_5de1384f100b520191129232503.73.jpg)\r\n\r\n在debug-001分支上解决BUG：\r\n\r\n![](/public/tools/editormdimg/201911/editormd_5de138680256f20191129232528.74.jpg)\r\n\r\n解决完BUG后，切换回master分支，并且在master分支上合并debug-001分支：\r\n\r\n![](/public/tools/editormdimg/201911/editormd_5de138877f0d020191129232559.75.jpg)\r\n\r\n再删除debug-001分支：\r\n\r\n![](/public/tools/editormdimg/201911/editormd_5de138ab0d57020191129232635.76.jpg)\r\n\r\n到此，BUG已经解决了。此时我需要继续dev分支上的工作，所以需要将之前保存起来的stash现场进行恢复，\r\n\r\n![](/public/tools/editormdimg/201911/editormd_5de138c33a18220191129232659.77.jpg)\r\n\r\n因为我们之前只有一个stash，而这个stash@{0}在恢复后就被删除了，所以此时stash列表为空，\r\n\r\n![](/public/tools/editormdimg/201911/editormd_5de138dc783fd20191129232724.78.jpg)\r\n\r\n\r\n\r\n', '', 1, 'git', '1|2|3', 'git|学习git|学习git【廖雪峰git教程】', 0);
INSERT INTO `expnew` VALUES (6, 1575041444, '多人协同开发', '# 基本介绍\r\n当你从远程仓库克隆时，实际上Git自动把本地的`master`分支和远程的`master`分支对应起来了，并且，远程仓库的默认名称是`origin`。\r\n要查看远程库的信息，用`git remote`：\r\n\r\n    $ git remote\r\n    origin\r\n\r\n或者，用`git remote -v`显示更详细的信息：\r\n\r\n    $ git remote -v\r\n    origin  git@github.com:michaelliao/learngit.git (fetch)\r\n    origin  git@github.com:michaelliao/learngit.git (push)\r\n\r\n上面显示了可以抓取和推送的`origin`的地址。如果没有推送权限，就看不到push的地址。\r\n\r\n# 推送分支\r\n推送分支，就是把该分支上的所有本地提交推送到远程库。推送时，要指定本地分支，这样，Git就会把该分支推送到远程库对应的远程分支上：\r\n\r\n    $ git push origin master\r\n\r\n如果要推送其他分支，比如`dev`，就改成：\r\n\r\n    $ git push origin dev\r\n\r\n但是，并不是一定要把本地分支往远程推送，那么，哪些分支需要推送，哪些不需要呢？\r\n- `master`分支是主分支，因此要时刻与远程同步；\r\n- `dev`分支是开发分支，团队所有成员都需要在上面工作，所以也需要与远程同步；\r\n- `bug`分支只用于在本地修复bug，就没必要推到远程了，除非老板要看看你每周到底修复了几个bug；\r\n- `feature`分支是否推到远程，取决于你是否和你的小伙伴合作在上面开发。\r\n总之，就是在Git中，分支完全可以在本地自己藏着玩，是否推送，视你的心情而定！\r\n\r\n# 抓取分支\r\n多人协作时，大家都会往`master`和`dev`分支上推送各自的修改。\r\n现在，模拟一个你的小伙伴，可以在另一台电脑（注意要把SSH Key添加到GitHub）或者同一台电脑的另一个目录下克隆：\r\n\r\n    $ git clone git@github.com:michaelliao/learngit.git\r\n    Cloning into \'learngit\'...\r\n    remote: Counting objects: 46, done.\r\n    remote: Compressing objects: 100% (26/26), done.\r\n    remote: Total 46 (delta 16), reused 45 (delta 15)\r\n    Receiving objects: 100% (46/46), 15.69 KiB | 6 KiB/s, done.\r\n    Resolving deltas: 100% (16/16), done.\r\n\r\n当你的小伙伴从远程库clone时，默认情况下，你的小伙伴只能看到本地的`master`分支。不信可以用`git branch`命令看看：\r\n\r\n    $ git branch\r\n    * master\r\n\r\n现在，你的小伙伴要在`dev`分支上开发，就必须创建远程`origin`的`dev`分支到本地，于是他用这个命令创建本地`dev`分支：\r\n\r\n    $ git checkout -b dev origin/dev\r\n\r\n现在，他就可以在dev上继续修改，然后，时不时地把dev分支push到远程：\r\n\r\n    $ git commit -m &quot;add /usr/bin/env&quot;\r\n    [dev 291bea8] add /usr/bin/env\r\n     1 file changed, 1 insertion(+)\r\n    $ git push origin dev\r\n    Counting objects: 5, done.\r\n    Delta compression using up to 4 threads.\r\n    Compressing objects: 100% (2/2), done.\r\n    Writing objects: 100% (3/3), 349 bytes, done.\r\n    Total 3 (delta 0), reused 0 (delta 0)\r\n    To git@github.com:michaelliao/learngit.git\r\n       fc38031..291bea8  dev -&amp;gt; dev\r\n\r\n你的小伙伴已经向`origin/dev`分支推送了他的提交，而碰巧你也对同样的文件作了修改，并试图推送：\r\n\r\n    $ git add hello.py \r\n    $ git commit -m &quot;add coding: utf-8&quot;\r\n    [dev bd6ae48] add coding: utf-8\r\n     1 file changed, 1 insertion(+)\r\n    $ git push origin dev\r\n    To git@github.com:michaelliao/learngit.git\r\n     ! [rejected]        dev -&amp;gt; dev (non-fast-forward)\r\n    error: failed to push some refs to \'git@github.com:michaelliao/learngit.git\'\r\n    hint: Updates were rejected because the tip of your current branch is behind\r\n    hint: its remote counterpart. Merge the remote changes (e.g. \'git pull\')\r\n    hint: before pushing again.\r\n    hint: See the \'Note about fast-forwards\' in \'git push --help\' for details.\r\n\r\n推送失败，因为你的小伙伴的最新提交和你试图推送的提交有冲突，解决办法也很简单，Git已经提示我们，先用`git pull`把最新的提交从`origin/dev`抓下来，然后，在本地合并，解决冲突，再推送：\r\n\r\n    $ git pull\r\n    remote: Counting objects: 5, done.\r\n    remote: Compressing objects: 100% (2/2), done.\r\n    remote: Total 3 (delta 0), reused 3 (delta 0)\r\n    Unpacking objects: 100% (3/3), done.\r\n    From github.com:michaelliao/learngit\r\n       fc38031..291bea8  dev        -&amp;gt; origin/dev\r\n    There is no tracking information for the current branch.\r\n    Please specify which branch you want to merge with.\r\n    See git-pull(1) for details\r\n    \r\n        git pull &amp;lt;remote&amp;gt; &amp;lt;branch&amp;gt;\r\n    \r\n    If you wish to set tracking information for this branch you can do so with:\r\n    \r\n        git branch --set-upstream dev origin/&amp;lt;branch&amp;gt;\r\n\r\n`git pull`也失败了，原因是没有指定本地dev分支与远程`origin/dev`分支的链接，根据提示，设置`dev`和`origin/dev`的链接：\r\n\r\n    $ git branch --set-upstream dev origin/dev\r\n    Branch dev set up to track remote branch dev from origin.\r\n\r\n再pull：\r\n\r\n    $ git pull\r\n    Auto-merging hello.py\r\n    CONFLICT (content): Merge conflict in hello.py\r\n    Automatic merge failed; fix conflicts and then commit the result.\r\n\r\n这回`git pull`成功，但是合并有冲突，需要手动解决，解决的方法和分支管理中的解决冲突完全一样。解决后，提交，再push：\r\n\r\n    $ git commit -m &quot;merge &amp;amp; fix hello.py&quot;\r\n    [dev adca45d] merge &amp;amp; fix hello.py\r\n    $ git push origin dev\r\n    Counting objects: 10, done.\r\n    Delta compression using up to 4 threads.\r\n    Compressing objects: 100% (5/5), done.\r\n    Writing objects: 100% (6/6), 747 bytes, done.\r\n    Total 6 (delta 0), reused 0 (delta 0)\r\n    To git@github.com:michaelliao/learngit.git\r\n       291bea8..adca45d  dev -&amp;gt; dev\r\n\r\n因此，多人协作的工作模式通常是这样：\r\n1. 首先，可以试图用`git push origin branch-name`推送自己的修改；\r\n2. 如果推送失败，则因为远程分支比你的本地更新，需要先用`git pull`试图合并；\r\n3. 如果合并有冲突，则解决冲突，并在本地提交；\r\n4. 没有冲突或者解决掉冲突后，再用`git push origin branch-name`推送就能成功！\r\n如果`git pull`提示“no tracking information”，则说明本地分支和远程分支的链接关系没有创建，用命令`git branch --set-upstream branch-name origin/branch-name`。\r\n这就是多人协作的工作模式，一旦熟悉了，就非常简单。\r\n\r\n# 小结\r\n查看远程库信息，使用`git remote -v`；\r\n- 本地新建的分支如果不推送到远程，对其他人就是不可见的；\r\n- 从本地推送分支，使用`git push origin branch-name`，如果推送失败，先用`git pull`抓取远程的新提交；\r\n- 在本地创建和远程分支对应的分支，使用`git checkout -b branch-name origin/branch-name`，本地和远程分支的名称最好一致；\r\n- 建立本地分支和远程分支的关联，使用`git branch --set-upstream branch-name origin/branch-name`；\r\n- 从远程抓取分支，使用`git pull`，如果有冲突，要先处理冲突。\r\n', '', 1, 'git', '1|2|3', 'git|学习git|学习git【廖雪峰git教程】', 0);
INSERT INTO `expnew` VALUES (7, 1575041575, '使用git克隆最新vim git clone https://github.com/vim/vim.', '使用git克隆最新vim  git clone https://github.com/vim/vim.git，报错：fatal: Unable to find remote helper for \'https\'；解决方法：\r\n![](/public/tools/editormdimg/201911/editormd_5de13a20512df20191129233248.79.jpg)\r\n\r\n总结：问题的原因在于缺少curl-devel软件。', '', 1, 'git', '1|4|5', 'git|使用git|使用git遇到的问题', 0);
INSERT INTO `expnew` VALUES (8, 1576221225, 'vscode快捷键', '## 光标移动\r\n```shell\r\nC-n    光标下移\r\nC-p    光标上移\r\n\r\nC-f    光标右移一个字符\r\nA-f    光标右移一个单词\r\n\r\nC-b    光标左移一个字符\r\nA-b    光标左移一个单词\r\n\r\nC-e    将光标定位到行尾\r\nA-a    将光标定位到行首\r\n\r\nC-A-p    向上滚动一屏（pageUp）\r\nC-A-n    向下滚动一屏（pageDown）\r\n```\r\n\r\n## 内容选取\r\n```shell\r\nC-S-n    向下增加一个光标\r\n\r\nS-A-n    选中下一个相同内容的词\r\nS-A-p    选中上一个相同内容的词\r\n\r\nS-b    向左选中一个字符\r\nS-f    向右选中一个字符\r\n\r\nS-n    向下选取一行\r\nS-p    向上选取一行\r\n\r\nS-e    从当前光标处选取到尾部\r\n```\r\n\r\n## 内容编辑\r\n```shell\r\nC-A-r    将当前 行/选中的行 在下一行复制一份\r\nC-A-d    删除当前 行/选中的行\r\n\r\nC-d    向右删除一个字符\r\nA-d    向右删除一整个词\r\n\r\nA-n    将当前 行/选中的行 整体向下移动一行\r\nA-p    将当前 行/选中的行 整体向上移动一行\r\n```\r\n\r\n## 查找替换\r\n```shell\r\nC-A-f    当前窗口内查找\r\n```\r\n\r\n## 定位文件\r\n```shell\r\nC-0    在side bar定位到当前文件名上\r\nshift-f2    laravel查找xx.blade.php用\r\nalt-f1    laravel查找除xx.blade.php的文件\r\n```\r\n\r\n## 命令操作&amp;amp;文件操作\r\n```shell\r\nf1    调出vscode命令行\r\nsetting    可以调出setting菜单，包括default的和自定义的\r\nfile:duplicate    根据当前文件复制出新的文件，路径可以接下来指定\r\nfile:new file    在当前文件所在目录新建文件\r\nfile:delete file    删除当前文件\r\nfile:new folder    在当前文件所在目录新建目录\r\n\r\n\r\n\r\nctrl-`    调出terminal\r\n\r\n```\r\n\r\n\r\n## 插件\r\n### rest client\r\n```shell\r\nC-A-s    使用rest client插件发送http请求\r\n```\r\n\r\n### Laravel Artisan\r\nGet a list of routes\r\n![](/public/tools/editormdimg/201912/editormd_5dea26b7c67d720191206180023.94.jpg)\r\n\r\nMake a controller\r\n![](/public/tools/editormdimg/201912/editormd_5dea26dbb303a20191206180059.95.jpg)', 'vscode,快捷键', 29, '开发环境', '29|29|29', '开发环境|IDE工具|vscode', 0);
INSERT INTO `expnew` VALUES (11, 1575512967, '测试EXP', 'adfasdfasdf\r\n![](/public/tools/editormdimg/201912/editormd_5de86b832131a20191205102923.91.jpg)', 'aaabbb', 7, 'vim', '7|8|11', 'vim|vim for linux|vim的安装与使用', 1);
INSERT INTO `expnew` VALUES (12, 1575536227, 'PHP本地打开页面很慢原因解析', 'php.ini中关闭xdebug', 'PHP网站（Drupal7）响应过慢之“Wating(TTFB)时间过长”', 32, 'windows', '32|33|34', 'windows|开发环境|wamp', 0);
INSERT INTO `expnew` VALUES (13, 1575609658, '怎样查看laravel版本', '![](/public/tools/editormdimg/201912/editormd_5de9e50406baa20191206132004.92.jpg)\r\n\r\n输入：php artisan --version\r\n或：php artisan\r\n都可以。', '', 32, 'windows', '32|33|35', 'windows|开发环境|laravel', 0);
INSERT INTO `expnew` VALUES (14, 1577071863, 'laravel操作使用笔记', '### 创建控制器\r\n```shell\r\n php .artisan make:controller Test1Controller\r\n```\r\n![](/public/tools/editormdimg/201912/editormd_5de9f1cfaa75e20191206141439.93.jpg)\r\n\r\n#### 表单验证\r\n##### 使用lavavel的Validation\r\n参考链接：https://laravel.com/docs/5.8/validation\r\n\r\n###### 直接使用\r\n```php\r\n&lt;?php\r\nnamespace App\\Http\\Controllers\\Test;\r\n\r\nuse Illuminate\\Http\\Request;\r\nuse App\\Http\\Controllers\\Controller;\r\nuse Illuminate\\Support\\Facades\\Validator;\r\n\r\nclass TestController extends Controller\r\n{\r\n\r\n    public function adh(Request $request){\r\n\r\n        $arrData = $request-&gt;all();\r\n\r\n        $msg = [\r\n            // \'required\' =&gt; \'请填写 :attribute 的值\'  #为所有 &quot;required&quot; 类型的字段指定消息\r\n            \'name.required\' =&gt; \'模块名为必填项\'\r\n        ];\r\n\r\n        $validator = Validator::make($arrData, [\r\n            \'name\'  =&gt; \'required\',\r\n            \'surplus\'  =&gt; \'required|integer\'\r\n        ], $msg);\r\n\r\n        if ($validator-&gt;fails()){\r\n\r\n            $errors = $validator-&gt;errors();\r\n            var_dump($errors-&gt;all());//has(\'field\')  first(\'field\')  get(\'field\')\r\n        }\r\n    }\r\n	......\r\n```\r\n使用&quot;$errors-&gt;all()&quot;的结果如下：\r\n![](/public/tools/editormdimg/201912/editormd_5e0034c651b0220191223113014.98.jpg)\r\n\r\n###### 构建验证类使用\r\n', '', 32, 'windows', '32|32|32', 'windows|开发环境|laravel', 0);
INSERT INTO `expnew` VALUES (15, 1576496436, '上周末（191214-191215）时间安排总结', '\r\n### 购买物料\r\n周天上午10：30-12：15去超市购买了日用品；\r\n周天下午4：00-5：30从4s店回家买了菜；\r\n\r\n总结：以上购买日用品和食材的事情应该在周六就安排时间办好。\r\n\r\n周五晚12：30睡觉；\r\n周六早晨8:20才起床做早餐；\r\n\r\n总结：不要晚睡早起，周五应该在9点左右睡觉，周六可以正常6点起床，做一个惬意早餐给家人和自己，多美妙。\r\n\r\n周天准备第二周包点的时间全都放在了晚上进行，做到12：00才能睡觉；\r\n\r\n总结：可以准备包点的事情安排在周六进行，这样会更从容，腾出周天的时间来学习。', '', 36, '日常总结', '36|37|38', '日常总结|日常总结|日常总结', 0);
INSERT INTO `expnew` VALUES (16, 1577237596, 'test', 'aaaa', '', 1, 'git', '1|2|3', 'git|学习git|学习git【廖雪峰git教程】', 0);

-- ----------------------------
-- Table structure for froala_edit_img
-- ----------------------------
DROP TABLE IF EXISTS `froala_edit_img`;
CREATE TABLE `froala_edit_img`  (
  `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `post_date` int(10) UNSIGNED NOT NULL DEFAULT 0,
  `img` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '路径',
  `token` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '令牌',
  `has_use` tinyint(1) UNSIGNED NULL DEFAULT 0 COMMENT '是否已使用',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Compact;

-- ----------------------------
-- Table structure for menu
-- ----------------------------
DROP TABLE IF EXISTS `menu`;
CREATE TABLE `menu`  (
  `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `post_date` int(11) UNSIGNED NOT NULL DEFAULT 0 COMMENT '注册时间',
  `name` varchar(30) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '栏目名称',
  `parent_id` int(4) UNSIGNED NOT NULL DEFAULT 0 COMMENT '父级id',
  `last_add_user` varchar(30) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '最后操作人真实姓名',
  `last_add_userid` int(4) UNSIGNED NOT NULL DEFAULT 0 COMMENT '最终操作人id',
  `first_add_user` varchar(30) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '首次添加人真实姓名',
  `first_add_userid` int(4) UNSIGNED NOT NULL DEFAULT 0 COMMENT '首次添加人id',
  `last_update` int(4) UNSIGNED NOT NULL DEFAULT 0 COMMENT '最后修改时间(首次添加为0)',
  `level` tinyint(1) UNSIGNED NOT NULL DEFAULT 0 COMMENT '层级',
  `plat` varchar(30) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '平台',
  `module` varchar(30) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '模块',
  `act` varchar(30) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '动作',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = MyISAM AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Table structure for prorecord
-- ----------------------------
DROP TABLE IF EXISTS `prorecord`;
CREATE TABLE `prorecord`  (
  `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `post_date` int(10) UNSIGNED NOT NULL DEFAULT 0,
  `belong_pro` tinyint(1) UNSIGNED NULL DEFAULT 0,
  `title` varchar(100) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '',
  `content` text CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `is_del` tinyint(1) UNSIGNED NULL DEFAULT 0 COMMENT '是否删除',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = MyISAM AUTO_INCREMENT = 10 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of prorecord
-- ----------------------------
INSERT INTO `prorecord` VALUES (1, 0, 0, 'exp文档稿', '# EXP\r\n## Controller.class.php\r\n### 跳转页面\r\n```php\r\n /**\r\n  * 方法名: jump\r\n  * 方法作用: 跳转页面\r\n  * 参数\r\n  * $msg    string    跳转前的提示信息\r\n  * $urlP    string    跳转目标链接后的路由参数与传递的GET数据参数\r\n  * $time    int    提示信息展示的时间\r\n  */\r\n public function jump($msg=\'操作成功！\', $urlP=\'p=admin&amp;amp;m=user&amp;amp;a=showIndex\', $time=2){\r\n```\r\n\r\n```php\r\n/**\r\n* 方法名: _page\r\n* 方法作用: 构建分页参数\r\n* 参数\r\n* $tb    string    需要统计总的记录条数的表其表名\r\n* $condition    array    统计总记录条数的条件，如: [\'is_del\'=&amp;gt;0]\r\n*/\r\nprotected function _page($tb, $condition){\r\n```\r\n\r\n## Model.class.php\r\n### 增删改\r\n```php\r\n/**\r\n * 方法名: setData1\r\n * 方法作用: 直接传SQL语句实现增删改的方法\r\n * 参数\r\n * @param  $sql  string  SQL语句\r\n */\r\npublic function setData1($sql){\r\n```\r\n\r\n```php\r\n/**\r\n * 方法名: setData\r\n * 方法作用: 实现增删改的方法\r\n * 参数\r\n * @param  $tbname  string  表名\r\n * @param  $datas  array  需要设置的数据，\r\n    $type值为1则表示新增的数据，例：$datas=array(\'name\'=&amp;gt;\'zhangsan\', \'age\'=&amp;gt;12);\r\n    $type值为2则表示更新的数据，例：$datas=array(\'name\'=&amp;gt;\'zhangsan\', \'age\'=&amp;gt;12);\r\n    $type值为3则表示删除，$datas为删除的条件，例：$datas=array(\'id\'=&amp;gt;1, \'acc\'=&amp;gt;\'zhangsan\');\r\n * @param  $type  int  设置数据的类型，1表示新增，2表示修改，3表示删除\r\n * @param  $condition  array  更新数据的条件，例：$condition=array(\'id\'=&amp;gt;1, \'acc\'=&amp;gt;\'zhangsan\');\r\n */\r\npublic function setData($tbname, $datas, $type=1, $condition=array(), $upd_not_use_quote_fields=[]){ \r\n```\r\n\r\n### 查询数据\r\n```php\r\n/**\r\n * 方法名: getRow\r\n * 方法作用: 返回查询的一条数据\r\n * 参数\r\n * @param  $sql  string  SQL语句\r\n */\r\n public function getRow($sql){\r\n```\r\n```php\r\n/**\r\n * 方法名: getRows\r\n * 方法作用: 返回查询的多条数据\r\n * 参数\r\n * @param  $sql  string  SQL语句\r\n */\r\npublic function getRows($sql){\r\n```\r\n\r\n### 查询记录条数\r\n```php\r\n/**\r\n * 方法名: getRow\r\n * 方法作用: 根据指定条件查询记录条数（Get Number）\r\n * 参数\r\n * \r\n * @param    string    $tbname\r\n * @param    array    $fieldsVals    如：$fieldsVals=[\'id\'=&amp;gt;10, \'name\'=&amp;gt;\'zhangsan\'];\r\n * @param    int    $type    指定条件的类型；\r\n 	    如果$type=1，表示将$fieldsVals的所有元素作为组合条件查询，将会返回查询的记录条数\r\n 	    如果$type=2，表示将$fieldsVals的每个元素单独作为一个条件查询，也就是有多少个元素，查训多少次，第一次查出大于0的值，则将这个值作为返回值返回\r\n *\r\n * 注意：$type=2时，最大支持的$fieldsVals的元素总个数为5个。\r\n */\r\npublic function GN($tbname, $fieldsVals, $type=1){ \r\n```\r\n\r\n## 公共函数\r\n### ajax返回:AJAXre\r\n```php\r\n/**\r\n  * @FUNC    FN_AR    返回指定的ajax需要的return\r\n  * @PARAMS    string    $tifa_n_args    参数数组，顺序固定array();\r\n  * @RETURN     string   $re\r\n  */\r\n function AJAXre($case=0, $tifa_n_args=[]){\r\n```\r\n\r\n### 返回html--&amp;gt;select下拉列表:T_createSelectHtml\r\n```php\r\n /**\r\n  * --------------------s.WangXin2016/1/7\r\n  *@FUNC    T_createSelectHtml    \r\n  *@PARAMS    array    $a_options    选项键值对\r\n  *@PARAMS    string    $name    下拉列表的name属性名\r\n  *@PARAMS    num    $type    1：以$a_options的value为option的value  2：以$a_options的key为option的value\r\n  *@PARAMS    string    $selectTarget    选中目标option的value\r\n  *@RETURN     string   $select    完整的select下拉列表\r\n  * ----------------------------------------------------------------------------e\r\n  */\r\n function T_createSelectHtml($a_options, $name=\'\', $type=1, $selectTarget=\'\'){\r\n```\r\n\r\n### 获取页面链接:L\r\n```php\r\n/**\r\n * 函数名: L\r\n * 函数作用: 根据参数返回项目页面的链接\r\n * 参数\r\n * @param    string    $p    平台参\r\n * @param    string    $m    模块参\r\n * @param    string    $a    动作参\r\n */\r\nfunction L($p=\'exp\', $m=\'index\', $a=\'index\')\r\n```\r\n\r\n### 读取配置数据:C\r\n```php\r\n/**\r\n * 函数名: C\r\n * 函数作用: 根据配置项名称读取配置项值\r\n * 参数\r\n * @param  $str  string    读取的配置项，例：$str=\'pdo.mysql.host\'\r\n *  TIPS: 返回配置文件mvc/config/conf.php  中的配置项的值\r\n */\r\nfunction C($str){\r\n```\r\n\r\n### 获得对象:M\r\n```php\r\n/**\r\n * 函数名: M\r\n * 函数作用: 返回单例对象\r\n * 参数\r\n * @param  string    $className   包含命名空间的类名，控制器类名和模型类名可以不包含命名空间，例：$className = \'pluginsCaptchaTool\';\r\n * @param  array    $params\r\n */\r\nfunction M($className=\'Common\', $params=array()){ \r\n```\r\n\r\n### 获取指定个数的随机字符串:randStr\r\n```php\r\n/**\r\n * 函数名: randStr\r\n * 函数作用: 生成指定个数的随机字符串\r\n * 参数\r\n * @param    int    $num    需要生成随机字符串的个数，$num默认值为6\r\n */\r\nfunction randStr($num=6){\r\n```\r\n\r\n### 分页:pageHtml\r\n```php\r\n/**\r\n * 函数名: pageHtml\r\n * 函数作用: 返回分页HTML内容\r\n * 参数\r\n * @param  $nowPage  int  当前页\r\n * @param  $totalPage  int  总页数\r\n * @param  $url  string  跳转的连接，例：http://www.home.com/class/day2/code/page.php?xxx=xxx&amp;amp;xxx=xxx&amp;amp;page\r\n */\r\nfunction pageHtml($nowPage, $totalPage, $url){ \r\n```', 0);
INSERT INTO `prorecord` VALUES (2, 1575273044, 1, '20181204-禅道Bug提交规范', '# 禅道Bug提交管理规范\r\n\r\n\r\n			\r\n			\r\n\r\n|  文档编号 | 编    写  |  文档名称： | 编写日期  |\r\n| ------------ | ------------ | ------------ | ------------ |\r\n|  T_Bug_001 | 马成福  | Bug规范  | 2018-12-03  |\r\n\r\n\r\n\r\n# 修订历史\r\n\r\n日期	内容	修订人\r\n2018.12.03	初稿	马成福\r\n2018.12.04	优化规范内容	马成福\r\n\r\n\r\n\r\n# 1.目的\r\n此文档对项目组所使用之项目管理平台禅道项目管理系统（以下简称为“禅道”）的Bug提交做了介绍，可供项目组项目经理、测试人员、开发人员、产品经理、运营人员等做参考，并可作为质量管理人员对Bug提交进行规范性监控的参考依据。\r\n\r\n本文档定义了bug管理流程及其bug相关信息内容。\r\n\r\n# 2.禅道系统Bug流程图\r\n\r\n![](/public/tools/editormdimg/201912/editormd_5de4c3d7e32dc20191202155711.80.jpg)\r\n\r\nBug的总体处理流程大致分两种情况：\r\n1.测试人员提交Bug =&amp;gt; 开发人员解决 Bug =&amp;gt; 测试人员验证Bug 验证关闭\r\n2.测试人员提交 Bug =&amp;gt; 开发人员解决 Bug=&amp;gt; 测试人员验证未通过 =&amp;gt; 激活Bug =&amp;gt;重新解决 =&amp;gt; 验证关闭\r\n\r\n一条Bug完整的生命周期\r\n\r\n![](/public/tools/editormdimg/201912/editormd_5de4c3f36187a20191202155739.81.jpg)\r\n\r\n# 3.缺陷基本要素及操作\r\n一个完整清晰的Bug包含诸多基本要素，概括起来可以分为Bug 头和Bug体。以下是禅道系统创建Bug时所需的基本要素。\r\n\r\n![](/public/tools/editormdimg/201912/editormd_5de4c40a6fe1a20191202155802.82.jpg)\r\n\r\n## 3.1 缺陷提交说明\r\n对于项目中提交 Bug 时，说明以下规范，以便容易维护相关数据\r\n\r\n### 3.1.1 Bug标题\r\n【规范1】标题须简明、清晰，指出问题点操作路径，让业务相关人员根据标题即能大致明了问题所在。\r\n\r\n【规范2】良好的缺陷标题应该按照下列方式书写： \r\n1）尽量按缺陷发生的原因与结果的方式书写（“执行完A后，发生B，”或者“发生B，当A执行完后”）。\r\n2）避免使用模糊不清的词语，例如“功能中断，功能不正确，行为不起作用，”等。应该使用具体文字说明功能如何中断，如何不正确，或如何不起作用。\r\n\r\n例如：标题：客户管理-跟进管理-商城跟进人列表，点击“禁用”按钮提示无操作权限\r\n\r\n### 3.1.2 Bug操作步骤\r\n【规范1】每一个步骤只记录一个操作；\r\n【规范2】使用数字对步骤编号；\r\n【规范3】操作步骤的描述要简明，尽量使用短语和短句，避免复杂句型和句式；\r\n【规范4】操作步骤要完整、准确，不缺失，不多余。\r\n【规范5】完整的操作步骤必须是可复现的，如不重现，写明错误发生的概率。\r\n\r\n### 3.1.3 预期结果与实际结果\r\n预期结果：在以上所描述的标题及操作步骤下，根据产品设计要求或者基本常识，预期要达到的结果或者现象。\r\n\r\n实际结果：在以上所描述的标题条件及操作步骤下，功能实际表现出来的结果或者现象。\r\n【规范1】预期结果和实际结果需要突出差异点。\r\n【规范2】实际结果中可以用截图标注的形式描述具体问题，截图要全。\r\n\r\n### 3.1.4 其它相关要素\r\n说明：以下要素中所描述的“必填、选填”并非禅道系统中标注的必填或非必填，而是项目约定的必填内容。\r\n\r\n所属项目：选择发现Bug的产品，必填项。\r\n所属模块：暂定不填写。\r\n所属迭代：选择测试所属项目版本迭代周期，必填项。\r\n影响版本：选择发现Bug的对应版本，必填项。\r\n当前指派：选择指派的开发人员或总监（总监统一指派具体开发人员），必填项。\r\n相关需求：选择与Bug相关的需求，选填。\r\n相关任务：选择与Bug相关的任务，这里的任务是在『项目』中创建的开发任务。选填\r\nBug类型：代码错误，功能性错误。其它错误类型根据实际情况选择填写。\r\n界面优化、设计缺陷、配置相关、安装部署、安全相关、性能问题、标准规范、测试脚本、其他。\r\n关键词：填写Bug对应的需求ID或其它相关需要标注的关键词，可以多个关键词并用，必填\r\n抄送给：选择需要抄送的人员，如果一个bug相关多个人员可以抄送，选填。\r\n\r\n**Bug严重等级：**\r\n\r\n![](/public/tools/editormdimg/201912/editormd_5de4c75363e4c20191202161203.83.jpg)\r\n\r\n优先级别： \r\n\r\n测试人员需要注意，目前这边项目中如果当前提交的Bug为Bugfix版本，需要明确指定Bug的优先级，提交时跟运营人员确认该Bug具体需要更新到现网的时间。\r\n\r\n如果，修复后需要立即更新到现网，优先级为1、\r\n如果，修改后运营人员约定时间更新到现网，优先级为2、并在备注中标明更新时间、\r\n如果，修复后跟下个大版本一起更新，优先级为3、或4\r\n\r\n**注：以上3种情况，提交Bug时禅道中影响版本选择“BugFix”，到时候会创建该分支版本。**\r\n\r\n![](/public/tools/editormdimg/201912/editormd_5de4c7b1a152a20191202161337.84.jpg)\r\n \r\n## 3.2开发人员\r\n3.2.1确定Bug\r\n1．开发人员查看指派给自己的Bug列表，并确定该Bug（状态为激活），\r\n\r\n2．开发人员根据Bug的优先级别开始解决（复现/调试等），表明Bug正在处理。\r\n\r\n\r\n### 3.2.1解决Bug \r\n开发人员解决Bug后，执行『解决』操作，Bug状态为已解决。\r\n之后开发人员等待build的创建，如果build创建完毕，开发及时确认在此次创建build上解决的bug，并修改bug的解决版本。\r\n\r\n注：Build的创建参见迭代开发流程。http://bug.chfax.com/doc-view-47.html\r\n\r\n针对重复的Bug，开发需要在重复bug中写明重复bug的ID。\r\n\r\n新Build创建后，开发人员需要及时复查在新build上解决的Bug，并修改Bug的解决版本信息。测试人员需要及时提醒开发人员完成此项工作。\r\n\r\n\r\n解决方案：选择Bug的解决方案，具体方案如下表。必填项。\r\n\r\n![](/public/tools/editormdimg/201912/editormd_5de4c7cf159a420191202161407.85.jpg)\r\n\r\n解决版本：选择创建的build。Build来自与『项目视图』-&amp;gt;『Build』中创建的Build。必填项。\r\n\r\n备注：开发人员填写Bug的原因及解决办法，如果重构代码填写可能影响的模块。\r\n\r\n## 3.3测试人员验证Bug\r\n测试人员验证状态为已解决的bug。\r\n\r\n验证结果一：如果验证bug在build上已经解决，测试人员『关闭』Bug并填写验证信息。Bug状态为已关闭。\r\n\r\n验证结果二：如果验证bug，没有通过，测试人员填写验证信息，并『激活』Bug。\r\nBug状态为激活（已确认）。\r\n\r\n影响版本：选择复现Bug的build。必填项。\r\n备注：填写验证信息，说明测试不通过的情况。', 0);
INSERT INTO `prorecord` VALUES (3, 1575274984, 1, '【玖富】我的信息管理', '## 密码管理\r\n1. F&amp;amp;&amp;amp;&amp;amp;1$$\r\n2. f&amp;amp;&amp;amp;&amp;amp;1$$\r\n3. Xm&amp;amp;&amp;amp;1$$0$$\r\n\r\n## 企业邮箱\r\nwangxin@jiufuwangluo.com    &amp;amp;1\r\n\r\n## GitLab\r\nhttp://git.jiufuwangluo.com:8006/users/wangxin/contributed\r\nhttp://git.jiufuwangluo.com:8006\r\nwangxin@jiufuwangluo.com  &amp;amp;3\r\n\r\n## 先迈&amp;amp;玖富api文档\r\nhttp://192.168.1.230:4999/web/#/item/index\r\n\r\nwangxin@jiufuwangluo.com    &amp;amp;1\r\n\r\n## 禅道\r\nhttps://pm.jiufuwangluo.com/user-login-L215Lmh0bWw=.html\r\nwangxin  &amp;amp;3\r\n\r\n## 其它\r\n桌面：&amp;amp;2\r\n本地数据库: 123abc\r\n\r\n## 后台账号\r\nhttps://dev.xianmai88.com/manage\r\nhttp://local.xianmai.com/manage/login\r\ndev\r\nadmin/Xm123123\r\n\r\nhttps://xm.xianmai88.com/manage/login\r\n测试\r\nPGtester/pg1qaz', 0);
INSERT INTO `prorecord` VALUES (4, 1575338148, 2, '公共信息管理', '## pwd\r\n```shell\r\n1. f&amp;amp;&amp;amp;&amp;amp;5$$\r\n2. t&amp;amp;&amp;amp;&amp;amp;o&amp;amp;&amp;amp;5$$\r\n```\r\n\r\n\r\n## 代理\r\nhttps://justmysocks1.net/members/clientarea.php?action=productdetails&amp;amp;id=107355\r\n&amp;amp;1\r\n\r\n\r\n## 综合\r\nf&amp;amp;&amp;amp;&amp;amp;&amp;amp;.&amp;amp;&amp;amp;&amp;amp;g@qq.com    &amp;amp;2\r\ngu&amp;amp;&amp;amp;&amp;amp;&amp;amp;2$$4@gmail.com', 0);
INSERT INTO `prorecord` VALUES (5, 1575458147, 0, '测试删除', 'adfasdfas', 1);
INSERT INTO `prorecord` VALUES (6, 1575939058, 1, '【先迈】开发笔记', '### 第一次部署\r\n1. 拉取代码；\r\n2. 注意.gitignore中忽略的目录，没有的创建出来，特别注意storage/framework/sessions这个目录，将会影响到session的写入；\r\n\r\n### 寻找(加载)模板\r\n框架中的模板使用了laravel-theme，所以寻的模板的方式不同于laravel中的view方法，举例说明：\r\n```php\r\n#XX:xxxwebappModulesManageHttpControllersAuthAuthController.php\r\npublic function getLogin()\r\n{\r\n	if (ManagerModel::getManager()){\r\n	    return redirect($this-&gt;redirectPath);\r\n	}\r\n\r\n	$this-&gt;initTheme(\'managelogin\');\r\n	$this-&gt;theme-&gt;setTitle(\'后台登录\');\r\n	###\r\n	# 通过scope方法寻的的是：xxx/web/public/themes/default/views/manage/login.blade.php\r\n	###\r\n	return $this-&gt;theme-&gt;scope(\'manage.login\')-&gt;render();\r\n}\r\n```\r\n\r\nlaravel-theme的github地址：https://github.com/teepluss/laravel-theme\r\n\r\n### 数据表操作\r\n#### 查询\r\n##### 获取一条\r\n以TopicModel为例（xxx\\web\\app\\Modules\\Manage\\Model\\TopicModel.php）：\r\n```php\r\nnamespace App\\Modules\\Manage\\Model;\r\n\r\nuse Illuminate\\Database\\Eloquent\\Model;\r\n\r\nclass TopicModel extends Model\r\n{\r\n    protected $table = \'topic\';\r\n\r\n    protected $fillable = [\r\n        \'id\', \'name\', \'type\', \'share_title\', \'share_sub_title\', \'share_img\', \'is_publish\'\r\n    ];\r\n\r\n    public  $timestamps = true;\r\n\r\n}\r\n```\r\n\r\n```php\r\n// 根据topic_id查询xm_topic.type和xm_topic_template.templ_type\r\n$arrTopic = TopicModel::select(\'topic.type as topic_type\', \'topic_template.templ_type\', \'topic_template.topic_id\')\r\n-&gt;leftJoin(\'topic_template\',\'topic.id\',\'=\',\'topic_template.topic_id\')\r\n-&gt;where(\'topic.id\', $arrData[\'topic_id\'])\r\n-&gt;first()-&gt;toArray();\r\n```\r\n\r\n\r\n##### 获取多条\r\n以TopicGoodsModel为例（xxx\\web\\app\\Modules\\Manage\\Model\\TopicGoodsModel.php）：\r\n```php\r\nnamespace App\\Modules\\Manage\\Model;\r\n\r\nuse Illuminate\\Database\\Eloquent\\Model;\r\nuse Illuminate\\Support\\Facades\\Session;\r\nuse Zizaco\\Entrust\\Traits\\EntrustUserTrait;\r\n\r\nclass TopicGoodsModel extends Model\r\n{\r\n    protected $table = \'topic_goods\';\r\n\r\n    protected $fillable = [\r\n        \'id\', \'topic_module_id\', \'goods_id\', \'tag_img\', \'sort\',\'created_at\', \'updated_at\'\r\n    ];\r\n\r\n    public  $timestamps = false;\r\n}\r\n```\r\n\r\n```php\r\n // 查询关联商品数据\r\n$data[\'topic_goods\'] = TopicGoodsModel::select(\'topic_goods.id as topic_goods_id\', \'topic_goods.goods_id\', \'topic_goods.tag_img\', \'topic_goods.sort\', \'goods.*\', \'goods_category.title as cat_name\', \'supplier.name as supplier_name\')\r\n-&gt;leftJoin(\'topic_module\', \'topic_goods.topic_module_id\', \'=\', \'topic_module.id\')\r\n-&gt;leftJoin(\'goods\', \'topic_goods.goods_id\', \'=\', \'goods.id\')\r\n-&gt;leftjoin(\'goods_category\', \'goods.cid\', \'=\', \'goods_category.id\')\r\n-&gt;leftjoin(\'supplier\', \'goods.sid\', \'=\', \'supplier.id\')\r\n-&gt;where(\'topic_module.id\', \'=\', $arrData[\'id\'])-&gt;orderby(\'topic_goods.sort\')-&gt;get()-&gt;toArray();\r\n```\r\n\r\n#### whereIn条件\r\n```php\r\n//分类和扩展分类\r\n$cid=$search[\'cid\'];\r\n$ext_goods_id=GoodsExtCategoryModel::select(\'goods_id\')-&gt;where(\'cat_id\',$cid)-&gt;get()-&gt;toArray();\r\n$goodsList=$goodsList-&gt;where(function ($query) use ($cid,$ext_goods_id){\r\n$query-&gt;whereIn(\'goods.id\',$ext_goods_id)-&gt;orWhere(\'goods.cid\',$cid);\r\n});\r\n```\r\n\r\n#### orderBy和分页\r\n```php\r\n//接收数据\r\n$arrData = $request-&gt;all();\r\n// $arrData[\'topic_id\'] = isset($arrData[\'topic_id\']) ? $arrData[\'topic_id\'] : 1;\r\n\r\n// 检查数据\r\n$validator = Validator::make($arrData, [\r\n\'topic_id\'  =&gt; \'required|integer\'\r\n]);\r\nif ($validator-&gt;fails()) return redirect()-&gt;to(\'/manage/topicModule/list\')-&gt;with([\'error\'=&gt;\'缺少必须参数！\']);//没有topic_id应该跳转到活动页面去\r\n\r\n//查询数据\r\n$topicModuleList = TopicModuleModel::whereRaw(&quot;1=1&quot;);\r\n$topicModuleList = $topicModuleList-&gt;select(\'id\', \'topic_id\', \'sort\', \'title\', \'img_title\', \'is_show\', \'created_at\', \'type\')-&gt;orderBy(\'sort\', \'asc\')-&gt;orderBy(\'created_at\', \'desc\')-&gt;where(\'topic_id\', $arrData[\'topic_id\']);\r\n\r\n//扔进模板\r\n$data[\'list\'] = $topicModuleList-&gt;paginate(10);\r\n$data[\'search\'] = $arrData;\r\n\r\n//显示模板\r\nreturn $this-&gt;theme-&gt;scope(\'manage.topic_module.list\', $data)-&gt;render();\r\n```\r\n\r\n模板页展示分页：\r\n```php\r\n&lt;div class=&quot;row&quot;&gt;\r\n    &lt;div class=&quot;col-md-12&quot;&gt;\r\n        &lt;div class=&quot;dataTables_paginate paging_bootstrap text-right row&quot;&gt;\r\n            &lt;!-- 分页列表 --&gt;\r\n            {!! $list-&gt;appends($search)-&gt;render() !!}\r\n        &lt;/div&gt;\r\n    &lt;/div&gt;\r\n&lt;/div&gt;\r\n```\r\n\r\n#### 新增\r\n```php\r\n//新增数据一条\r\n#xm_topic_module\r\n$topic_module_data = [\r\n\'topic_id\' =&gt; $arrData[\'topic_id\'],\r\n\'title\' =&gt; isset($arrData[\'title\']) ? $arrData[\'title\'] : \'\',//商城模板的标题是图片\r\n\'img_title\' =&gt; isset($uploadRes[\'data\'][\'url\']) ? $uploadRes[\'data\'][\'url\'] : \'\',\r\n\'tmpl_type\' =&gt; $arrData[\'topic_type\'],\r\n\'created_at\' =&gt; date(\'Y-m-d H:i:s\')\r\n];\r\n\r\nif( $arrData[\'topic_type\']==1 &amp;&amp; $arrData[\'templ_type\']==2 ){//任务单--模板二\r\n\r\n$topic_module_data[\'person_nums\'] = $arrData[\'person_nums\'];//领取人数\r\nif( !empty($arrData[\'more_task\']) )//更多任务   选填\r\n$topic_module_data[\'more_task\'] = $arrData[\'more_task\'];\r\n}\r\n\r\nif( $arrData[\'topic_type\']==2 ) $topic_module_data[\'type\'] = $arrData[\'type\'];    //商城才有商品类型   1:自营  2:淘宝商品（选品库），3:淘宝商品（推广商品库）\r\n\r\n##新增数据xm_topic_module，获取新增id\r\n$topic_module_id = TopicModuleModel::insertGetId($topic_module_data);\r\nif( !$topic_module_id ) return redirect()-&gt;to(\'/manage/topicModule/ad?topic_id=\'.$arrData[\'topic_id\'])-&gt;with([\'error\'=&gt;\'新增模块失败！\']);\r\n```\r\n\r\n```php\r\n//新增多条\r\n#xm_topic_task/xm_topic_goods\r\nif( isset($arrData[\'sort\']) ){\r\n\r\n    $tag_img = $request-&gt;file(\'tag_img\');//标签图\r\n    foreach ($arrData[\'sort\'] as $key =&gt; $sort) {\r\n\r\n	$uploadRes = [];\r\n	if ($tag_img[$key]) {//有则上传\r\n	    $uploadRes = \\FileClass::uploadFile($tag_img[$key], \'activityTopic\');\r\n	    $uploadRes = json_decode($uploadRes, true);\r\n	    if (!$uploadRes[\'data\'][\'url\']) return redirect()-&gt;to(\'/manage/topicModule/ad?topic_id=\'.$arrData[\'topic_id\'])-&gt;with([\'error\'=&gt;\'标签图上传失败！\']);\r\n	}\r\n\r\n	##新增数据汇总\r\n	if( $arrData[\'topic_type\']==2 ){//商城模板\r\n\r\n	    $topic_goods_data[] = [\r\n		\'topic_module_id\' =&gt; $topic_module_id,\r\n		\'sort\' =&gt; $sort,\r\n		\'tag_img\' =&gt; isset($uploadRes[\'data\'][\'url\']) ? $uploadRes[\'data\'][\'url\'] : \'\',\r\n		\'goods_id\' =&gt; $arrData[\'goods_id\'][$key],\r\n		\'created_at\' =&gt; date(\'Y-m-d H:i:s\')\r\n	    ];\r\n\r\n	}else{//任务单模板\r\n\r\n	    $topic_task_data[] = [\r\n		\'related_id\' =&gt; $topic_module_id,\r\n		\'sort\' =&gt; $sort,\r\n		\'tag_img\' =&gt; isset($uploadRes[\'data\'][\'url\']) ? $uploadRes[\'data\'][\'url\'] : \'\',\r\n		\'task_id\' =&gt; $arrData[\'task_id\'][$key],\r\n		\'type\' =&gt; 2,\r\n		\'created_at\' =&gt; date(\'Y-m-d H:i:s\')\r\n	    ];\r\n	}\r\n    }\r\n\r\n    switch($arrData[\'topic_type\']){\r\n	case 2://关联商品\r\n	    if( !TopicGoodsModel::insert($topic_goods_data) ) return redirect()-&gt;to(\'/manage/topicModule/ad?topic_id=\'.$arrData[\'topic_id\'])-&gt;with([\'error\'=&gt;\'新增关联商品失败！\']);\r\n	break;\r\n	default://关联任务单\r\n	    if( !TopicTaskModel::insert($topic_task_data) ) return redirect()-&gt;to(\'/manage/topicModule/ad?topic_id=\'.$arrData[\'topic_id\'])-&gt;with([\'error\'=&gt;\'新增任务单失败！\']);\r\n	break;\r\n    }\r\n}\r\n```\r\n\r\n#### 修改\r\n\r\n\r\n#### 删除\r\n\r\n### 表单传值\r\n#### csrf令牌\r\nlavarel在实现表单传值的过程中，默认有csrf令牌验证，需要在构建的表单中同时传递令牌，否则将无法成功访问目标页面。\r\n```html\r\n&lt;form method=&quot;post&quot; action=&quot;{{URL(\'manage/topicModule/adh\')}}&quot;  enctype=&quot;multipart/form-data&quot; id=&quot;postData&quot;&gt;\r\n	{!! csrf_field() !!}\r\n	&lt;input type=&quot;hidden&quot; name=&quot;topic_type&quot; value=&quot;{{ $topic[\'topic_type\'] }}&quot;&gt;\r\n	......\r\n```\r\n\r\n#### 控制器中接收数据\r\n```php\r\n&lt;?php\r\nnamespace App\\Http\\Controllers\\Test;\r\nuse Illuminate\\Http\\Request;//必须有\r\nuse App\\Http\\Controllers\\Controller;\r\n\r\nclass TestController extends Controller\r\n{\r\n    public function adh(Request $request){//参数列表定义接收参数局部变量\r\n        $arrData = $request-&gt;all();//获取所有参数\r\n        ......\r\n    }\r\n	......\r\n```\r\n\r\n### 目录或文件说明\r\nweb/updates目录下：\r\n![](/public/tools/editormdimg/201912/editormd_5df06ad5259cf20191211120437.96.jpg)\r\n\r\n### 权限操作\r\n\r\n#### 菜单导航权限\r\n\r\n#### 局部按钮权限\r\n```php\r\n/*\r\n * 在控制器中进行限制\r\n * xxx\\web\\app\\Modules\\Manage\\Http\\Controllers\\ActivityTopicController.php\r\n*/\r\nclass ActivityTopicController extends ManageController\r\n{\r\n    private $routes = [];\r\n    ......\r\n\r\n    public function __construct(ActivityTopicService $activityTopicService)\r\n    {\r\n        ......\r\n		\r\n        // 判断拥有的权限\r\n        $this-&gt;routes = [\r\n            \'btns\' =&gt; [\r\n                \'Add\' =&gt; 1,// 添加\r\n                \'Edit\' =&gt; 1,// 编辑\r\n                \'Detail\' =&gt; 1,// 查看\r\n                \'Status\' =&gt; 1,// 发布\r\n            ],\r\n            \'current_url\' =&gt; \'\', // 当前页面对应的路由\r\n            \'url_add\' =&gt; \'/manage/activityTopic/create\', // 添加活动url\r\n        ];\r\n\r\n        $routeName = \\request()-&gt;route()-&gt;getName();\r\n        $this-&gt;routes[\'current_url\'] = route($routeName);\r\n        //$this-&gt;manager包含当前登录用户的信息\r\n        if($this-&gt;manager-&gt;id != 1){\r\n            //“activityTopicAdd”这个值是路由别名，意思是当前用户如果不具有访问“activityTopicAdd”的权限，则也将没有点击本页面添加按钮的权限\r\n            if (($this-&gt;manager-&gt;can(\'activityTopicAdd\') == false)) {\r\n                $this-&gt;routes[\'btns\'][\'Add\'] = 0;\r\n            }\r\n            if (($this-&gt;manager-&gt;can(\'activityTopicEdit\') == false)) {\r\n                $this-&gt;routes[\'btns\'][\'Edit\'] = 0;\r\n            }\r\n            if (($this-&gt;manager-&gt;can(\'activityTopicDetail\') == false)) {\r\n                $this-&gt;routes[\'btns\'][\'Detail\'] = 0;\r\n            }\r\n            if (($this-&gt;manager-&gt;can(\'activityTopicStatus\') == false)) {\r\n                $this-&gt;routes[\'btns\'][\'Status\'] = 0;\r\n            }\r\n        }\r\n    }\r\n......\r\n    /**\r\n     * 活动专题列表\r\n     * @return\r\n     * @throws Exception\r\n     */\r\n    public function index()\r\n    {\r\n        ......\r\n        $data[\'routes\'] = $this-&gt;routes;\r\n        return $this-&gt;theme-&gt;scope(\'manage.activity_topic.index\', $data)-&gt;render();\r\n    }\r\n}\r\n```\r\n\r\n```php\r\n/*\r\n * 在模板页面中进行判断\r\n *D:\\firmpro\\web\\public\\themes\\default\\views\\manage\\activity_topic\\index.blade.php\r\n*/\r\n@if(isset($routes[\'btns\'][\'Add\']) &amp;&amp; $routes[\'btns\'][\'Add\'])\r\n&lt;div class=&quot;form-group&quot;&gt;\r\n&lt;button type=&quot;button&quot; class=&quot;btn btn-sm btn-primary&quot; id=&quot;btnAdd&quot;&gt;添加活动&lt;/button&gt;\r\n&lt;/div&gt;\r\n@endif\r\n```\r\n\r\n### 控制器中的操作\r\n\r\n#### 获取路由别名\r\nxx\\web\\app\\Modules\\Manage\\Http\\routes.php:\r\n![](/public/tools/editormdimg/201912/editormd_5dfc3935312a820191220110005.97.jpg)\r\n```php\r\n//获取当前路由别名，路由别名是在xx/Http/routes.php中定义的\r\n$routeName = \\request()-&gt;route()-&gt;getName();\r\n```\r\n\r\n#### 获取当前页面的url\r\n```php\r\n//获取当前路由别名\r\n$routeName = \\request()-&gt;route()-&gt;getName();\r\n//获得当前被访问页面url   注意：获得的url非常不准确\r\n$this-&gt;routes[\'current_url\'] = route($routeName);\r\n```\r\n\r\n#### 文件上传\r\n##### a. 表单\r\n xxx\\web\\public\\themes\\default\\views\\manage\\topic_module\\ad.blade.php\r\n![](/public/tools/editormdimg/201912/editormd_5e017b3f61e6320191224104311.99.jpg)\r\n\r\n```javascript\r\n&lt;script&gt;\r\n......\r\n//js函数getimg()在js层面限制上传文件（大小）\r\nfunction getimg(img){\r\n\r\n        let formdata = new FormData();\r\n        // 获取input选择的文件信息\r\n        let file = img.files[0];\r\n        if(file.size &gt; 3*1024*1024){\r\n            console.log(&quot;上传图片不能大于3M&quot;);\r\n            return;\r\n        }\r\n        formdata.append(\'file\',file);\r\n        //读取图片数据\r\n        var reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = function (e) {\r\n            let data = e.target.result;\r\n            //加载图片获取图片真实宽度和高度\r\n            let image = new Image();\r\n            image.src = data;\r\n            // 图片先加载完，才可以得到图片宽度和高度\r\n            image.onload = function(){\r\n                $(img).parents(\'div.form-group\').find(\'.imgs img\').attr(\'src\',image.src);\r\n                let width = image.width;\r\n                let height = image.height;\r\n                $(\'#img-width-height\').attr(\'data-width\',width);\r\n                $(\'#img-width-height\').attr(\'data-height\',height);\r\n                if(width !=\'600\' &amp;&amp; height !=\'1066\' ){\r\n                    console.log(width+\'===\'+height)\r\n                    $(\'.col-sm-4 p.red\').html(\'当前尺寸 宽为：\'+width+\' 高为：\'+height+\' 图片规格不符，建议更换\');\r\n                    return false;\r\n                }\r\n                console.log(width+\'===\'+height)\r\n                $(\'.col-sm-4 p.red\').html(\'\');\r\n            }\r\n        }\r\n    }\r\n&lt;/script&gt;\r\n```\r\n\r\n##### b. 处理程序\r\n xxx\\web\\app\\Modules\\Manage\\Http\\Controllers\\TopicModuleController.php -- adh\r\n```php\r\npublic function adh(Request $request){\r\n	......\r\n\r\n	if( $arrData[\'topic_type\']==2 ){//商城\r\n\r\n		$needCheckData = [\'type\' =&gt; \'required|integer\'];    //商品类型   1:自营  2:淘宝商品（选品库），3:淘宝商品（推广商品库）\r\n		if (Validator::make($arrData, $needCheckData)-&gt;fails()) return redirect()-&gt;to(\'/manage/topicModule/ad?topic_id=\'.$arrData[\'topic_id\'])-&gt;with([\'error\'=&gt;\'必须选择一个商品类型！\']);\r\n\r\n		if( $arrData[\'templ_type\']==2 ){//模板二\r\n\r\n			$img_title = $request-&gt;file(\'img_title\');//标题图  获取上传图片的数据\r\n			if ($img_title) {//有则上传\r\n				$uploadRes = \\FileClass::uploadFile($img_title, \'activityTopic\');//上传并获得上传后的返回结果（json类型）\r\n				$uploadRes = json_decode($uploadRes, true);\r\n			}else {\r\n				return redirect()-&gt;to(\'/manage/topicModule/ad?topic_id=\'.$arrData[\'topic_id\'])-&gt;with([\'error\'=&gt;\'请上传标题图！\']);\r\n			}\r\n			if (!$uploadRes[\'data\'][\'url\']) {//$uploadRes[\'data\'][\'url\']为路径\r\n				return redirect()-&gt;to(\'/manage/topicModule/ad?topic_id=\'.$arrData[\'topic_id\'])-&gt;with([\'error\'=&gt;\'标题图上传失败！\']);\r\n			}\r\n		}\r\n	}\r\n}\r\n```\r\n\r\n$uploadRes打印信息：\r\n![](/public/tools/editormdimg/201912/editormd_5e0180b2ae38520191224110626.102.jpg)\r\n\r\n##### c. 上传文件注意事项\r\n如果要加载图片则需要使用url函数处理图片路径：\r\n![](/public/tools/editormdimg/201912/editormd_5e017fb0cd26020191224110208.100.jpg)\r\n\r\n上传文件路径的问题，上传时需要指定目录，可以在xxx\\web\\libraries\\class\\FileClass.php -- uploadFile方法中添加目录：\r\n![](/public/tools/editormdimg/201912/editormd_5e01801a95e3a20191224110354.101.jpg)\r\n\r\n\r\n#### 表单验证\r\n##### 使用lavavel的Validation\r\n参考链接：https://laravel.com/docs/5.8/validation\r\n\r\n###### 直接使用\r\n```php\r\npublic function info(Request $request){\r\n    \r\n        $arrData = $request-&gt;all();\r\n        $data = [];\r\n\r\n        //检查参数\r\n        $validator = Validator::make($arrData, [\r\n            \'topic_id\'  =&gt; \'required|integer\',\r\n            \'id\'  =&gt; \'required|integer\'\r\n        ]);\r\n        if ($validator-&gt;fails()) return redirect()-&gt;to(\'/manage/topicModule/list?topic_id=\'.$arrData[\'topic_id\'])-&gt;with([\'error\'=&gt;\'缺少必须参数！\']);\r\n		......\r\n```\r\n\r\n**封装使用案例：**\r\n```php\r\n## xxx\\web\\app\\Modules\\Manage\\Http\\Controllers\\TopicModuleController.php\r\n## 封装\r\n /**\r\n   * [checkRequests 检查表单传的值]\r\n   * @param  Request $request [description]\r\n   * @param  array $fields [需要检查的字段]   例：\r\n                                                  $fields = [\'id\' =&gt; \'required|integer\'];\r\n   * @param  array $msg [不同字段对应给出的提示信息]   例：\r\n                                                  $msg = [\r\n                                                      \'id.required\' =&gt; \'缺少必要参数！\',\r\n                                                      \'id.integer\' =&gt; \'非法的操作！\'\r\n                                                  ];\r\n   * @param  array $urls [不同字段对应跳转的地址][选填]   例：\r\n                                                  $urls = [\'id\' =&gt; \'/manage/topicModule/list?topic_id=xxx\'];\r\n   * @param  string $defaultURL [默认跳转地址，当没有指定字段跳转地址时使用]\r\n   * @return [bool]           [没有问题返回false，有问题返回跳转页面]\r\n   */\r\n  private function checkRequests($arrData, $fields, $msg, $urls=[], $defaultURL=\'\'){\r\n      \r\n      //初始化参数\r\n      // $arrData = $requests-&gt;all();\r\n      $reData = [];\r\n      $reData[\'url\'] = empty($defaultURL) ? \'/manage/activityTopic/index\' : $defaultURL;\r\n\r\n      //检查参数\r\n      $validator = Validator::make($arrData, $fields, $msg);\r\n      if ($validator-&gt;fails()){\r\n\r\n          $err = $validator-&gt;errors();\r\n          foreach( $fields as $k=&gt;$v){\r\n\r\n              if($err-&gt;has($k)){//存在错误，则跳转\r\n                  \r\n                  if(isset($urls[$k])) $reData[\'url\'] = $urls[$k];\r\n                  return redirect()-&gt;to($reData[\'url\'])-&gt;with( [\'error\'=&gt;$err-&gt;first($k)] );\r\n              } \r\n          }\r\n      }\r\n\r\n      return false;//没有问题，返回false\r\n  }\r\n\r\n\r\n## xxx\\web\\app\\Modules\\Manage\\Http\\Controllers\\TopicModuleController.php -- adh\r\n## 调用\r\n/**\r\n   * [adh 添加处理add handler]\r\n   * @param  Request $request [description]\r\n   * @return [type]           [添加页面]\r\n   */\r\n  public function adh(Request $request){\r\n      //接收数据\r\n      $arrData = $request-&gt;all();\r\n\r\n      //检查数据\r\n      #必须先检查topic_id，没有这个参数，程序无法继续执行\r\n      $msg = [//字段对应的提示信息\r\n          \'topic_id.required\' =&gt; \'缺少必要参数！\',\r\n          \'topic_id.integer\' =&gt; \'非法的操作！\'\r\n      ];\r\n      if($re = $this-&gt;checkRequests($arrData, [\'topic_id\'=&gt;\'required|integer\'], $msg)) return $re;\r\n\r\n      #然后再检查必须的topic_type和templ_type\r\n      $fields = [//需检查的字段\r\n          \'topic_type\'  =&gt; \'required|integer\',\r\n          \'templ_type\'  =&gt; \'required|integer\'\r\n      ];\r\n\r\n      $msg = [//字段对应的提示信息\r\n          \'topic_type.required\' =&gt; \'缺少必要参数！\',\r\n          \'topic_type.integer\' =&gt; \'非法的操作！\',\r\n          \'templ_type.required\' =&gt; \'缺少必要参数！\',\r\n          \'templ_type.integer\' =&gt; \'非法的操作！\'\r\n      ];\r\n\r\n      if($re = $this-&gt;checkRequests($arrData, $fields, $msg, [], \'/manage/topicModule/ad?topic_id=\'.$arrData[\'topic_id\'])) return $re;\r\n\r\n      #必须要的数据\r\n      $msg = [];\r\n      $fields = [];\r\n      if( !($arrData[\'topic_type\']==2 &amp;&amp; $arrData[\'templ_type\']==2) ){//排除 商城--模板二 检查文字标题是否填写\r\n          $fields[\'title\'] = \'required|max:50\';\r\n          $msg[\'title.required\'] = \'请填写标题！\';\r\n          $msg[\'title.max\'] = \'标题字符数必须小于50！\';\r\n      }\r\n\r\n      if( $arrData[\'topic_type\']==1 &amp;&amp; $arrData[\'templ_type\']==2 ){//任务单--模板二\r\n          \r\n          $fields[\'person_nums\'] = \'required|integer|min:0\';\r\n          $msg[\'person_nums.required\'] = \'请填写领取人数!\';\r\n          $msg[\'person_nums.integer\'] = \'领取人数必须为数字!\';\r\n          $msg[\'person_nums.min\'] = \'领取人数值必须大于0!\';\r\n\r\n          if( !empty($arrData[\'more_task\']) ){    //“更多任务等你领”必须以特定字符开头\r\n\r\n              preg_match_all (&quot;/^(http:\\/\\/)|(https:\\/\\/)|(xm:\\/\\/)/&quot;, $arrData[\'more_task\'], $pat_arr);\r\n              if( empty($pat_arr[0]) )   \r\n                  return redirect()-&gt;to(\'/manage/topicModule/ad?topic_id=\'.$arrData[\'topic_id\'])-&gt;with([\'error\'=&gt;\'“更多任务等你领”必须以http://或https://或xm://开头！\']);\r\n          }\r\n      }\r\n\r\n      ##开始检查\r\n      if($re = $this-&gt;checkRequests($arrData, $fields, $msg, [], \'/manage/topicModule/ad?topic_id=\'.$arrData[\'topic_id\'])) return $re;\r\n	......\r\n}\r\n```\r\n\r\n###### 构建验证类使用\r\n\r\n\r\n\r\n#### 重定向\r\n```php\r\npublic function info(Request $request){\r\n        ......\r\n\r\n        if ($validator-&gt;fails()) return redirect()-&gt;to(\'/manage/topicModule/list?topic_id=\'.$arrData[\'topic_id\'])-&gt;with([\'error\'=&gt;\'缺少必须参数！\']);\r\n```', 0);
INSERT INTO `prorecord` VALUES (7, 1576026893, 2, '周1-周5工作日程', '早：\r\n1. 企业邮箱\r\n2. QQ邮箱\r\n3. GMail邮箱\r\n3. 禅道\r\n\r\n下午：\r\n4. 周报\r\n5. exp数据库备份\r\n6. s5同步\r\n7. dev数据库备份\r\n8. vscode工作环境配置同步\r\n9. 点第二天午餐', 0);
INSERT INTO `prorecord` VALUES (8, 1576632155, 1, '开发简略流程', '### 先迈3.9.21\r\n\r\n### 先迈4.9.3\r\n191216\r\n191227\r\n\r\n191228\r\n添加页--人工标签\r\n添加页--选择任务单--搜索\r\n添加页--选择商品--搜索\r\n编辑模块页\r\n模块组件--删除模块\r\n编辑模块--删除任务单/删除商品\r\n查看', 0);
INSERT INTO `prorecord` VALUES (9, 1577241299, 1, '【kake】开发信息', '\r\n数据库：tuancan\r\nadmin\r\n123456', 0);

-- ----------------------------
-- Table structure for tb_record
-- ----------------------------
DROP TABLE IF EXISTS `tb_record`;
CREATE TABLE `tb_record`  (
  `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `post_date` int(10) UNSIGNED NOT NULL DEFAULT 0,
  `belong_db` tinyint(1) UNSIGNED NULL DEFAULT 0 COMMENT '所属库',
  `ch_name` varchar(100) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '表中文名',
  `en_name` varchar(100) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '表英文名',
  `ch_fields` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '中文字段集合',
  `en_fields` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '英文字段集合',
  `ori_struct` text CHARACTER SET utf8 COLLATE utf8_general_ci NULL COMMENT '原始建表草稿',
  `create_sql` text CHARACTER SET utf8 COLLATE utf8_general_ci NULL COMMENT '建表语句',
  `has_special_field` tinyint(1) UNSIGNED NULL DEFAULT 0 COMMENT '是否有特殊字段',
  `comm` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '备注信息',
  `has_relate_field` tinyint(1) UNSIGNED NULL DEFAULT 0 COMMENT '是否有关联字段',
  PRIMARY KEY (`id`) USING BTREE,
  INDEX `post_date`(`post_date`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 3 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Compact;

-- ----------------------------
-- Records of tb_record
-- ----------------------------
INSERT INTO `tb_record` VALUES (1, 1577275769, 0, '表结构记录表', 'tb_record', 'id,post_date,所属库,表中文名,表英文名,中文字段集合,英文字段集合,原始建表草稿,建表语句,是否有特殊字段,是否有关联字段,备注信息', 'id,post_date,belong_db,ch_name,en_name,ch_fields,en_fields,ori_struct,create_sql,has_special_field,has_relate_field,comm', '表结构记录表                                                                                                                   \r\ntb_record\r\nid,post_date,所属库,表中文名,表英文名,中文字段集合,英文字段集合,原始建表草稿,建表语句,是否有特殊字段,是否有关联字段,备注信息\r\nid,post_date,belong_db,ch_name,en_name,ch_fields,en_fields,ori_struct,create_sql,has_special_field,has_relate_field,comm', 'CREATE TABLE `tb_record` ( `id` INT( 10 ) UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY ) ENGINE=INNODB DEFAULT CHARSET=utf8;\r\nALTER TABLE `tb_record` ADD `post_date` INT( 10 ) UNSIGNED NOT NULL DEFAULT \'0\'; ALTER TABLE `tb_record` ADD INDEX ( `post_date` );\r\nALTER TABLE `tb_record` ADD `belong_db` TINYINT( 1 )  UNSIGNED DEFAULT \'0\' COMMENT \'所属库\';\r\nALTER TABLE `tb_record` ADD `ch_name` VARCHAR( 100 )  NOT NULL DEFAULT \'\' COMMENT \'表中文名\';\r\nALTER TABLE `tb_record` ADD `en_name` VARCHAR( 100 )  NOT NULL DEFAULT \'\' COMMENT \'表英文名\';\r\nALTER TABLE `tb_record` ADD `ch_fields` VARCHAR( 255 )  NOT NULL DEFAULT \'\' COMMENT \'中文字段集合\';\r\nALTER TABLE `tb_record` ADD `en_fields` VARCHAR( 255 )  NOT NULL DEFAULT \'\' COMMENT \'英文字段集合\';\r\nALTER TABLE `tb_record` ADD `ori_struct` TEXT COMMENT \'原始建表草稿\';\r\nALTER TABLE `tb_record` ADD `create_sql` TEXT COMMENT \'建表语句\';\r\nALTER TABLE `tb_record` ADD `has_special_field` TINYINT( 1 )  UNSIGNED DEFAULT \'0\' COMMENT \'是否有特殊字段\';\r\nALTER TABLE `tb_record` ADD `has_relate_field` TINYINT( 1 )  UNSIGNED DEFAULT \'0\' COMMENT \'是否有关联字段\';\r\nALTER TABLE `tb_record` ADD `comm` VARCHAR( 255 )  NOT NULL DEFAULT \'\' COMMENT \'备注信息\';', 1, '', 0);
INSERT INTO `tb_record` VALUES (2, 1577276520, 0, '表特殊字段记录表', 'tb_special_field', 'id,post_date,所属表id,英文字段名,字段特别说明,字段序列化值对,字段类型,关联表英文名,被关联字段英文名', 'id,post_date,tb_record__id,en_name,specification,serialize,field_type,relate_tb_name,relate_field_name', '表特殊字段记录表                                                                                                                   \r\ntb_special_field\r\nid,post_date,所属表id,英文字段名,字段特别说明,字段序列化值对,字段类型,关联表英文名,被关联字段英文名\r\nid,post_date,tb_record__id,en_name,specification,serialize,field_type,relate_tb_name,relate_field_name', 'CREATE TABLE `tb_special_field` ( `id` INT( 10 ) UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY ) ENGINE=INNODB DEFAULT CHARSET=utf8;\r\nALTER TABLE `tb_special_field` ADD `post_date` INT( 10 ) UNSIGNED NOT NULL DEFAULT \'0\'; ALTER TABLE `tb_special_field` ADD INDEX ( `post_date` );\r\nALTER TABLE `tb_special_field` ADD `tb_record__id` INT( 4 )  UNSIGNED DEFAULT \'0\' COMMENT \'所属表id\';\r\nALTER TABLE `tb_special_field` ADD `en_name` VARCHAR( 100 )  NOT NULL DEFAULT \'\' COMMENT \'英文字段名\';\r\nALTER TABLE `tb_special_field` ADD `specification` VARCHAR( 100 )  NOT NULL DEFAULT \'\' COMMENT \'字段特别说明\';\r\nALTER TABLE `tb_special_field` ADD `serialize` VARCHAR( 100 )  NOT NULL DEFAULT \'\' COMMENT \'字段序列化值对\';\r\nALTER TABLE `tb_special_field` ADD `field_type` TINYINT( 1 )  UNSIGNED DEFAULT \'0\' COMMENT \'字段类型\';\r\nALTER TABLE `tb_special_field` ADD `relate_tb_name` VARCHAR( 100 )  NOT NULL DEFAULT \'\' COMMENT \'关联表英文名\';\r\nALTER TABLE `tb_special_field` ADD `relate_field_name` VARCHAR( 100 )  NOT NULL DEFAULT \'\' COMMENT \'被关联字段英文名\';', 1, '', 1);

-- ----------------------------
-- Table structure for tb_special_field
-- ----------------------------
DROP TABLE IF EXISTS `tb_special_field`;
CREATE TABLE `tb_special_field`  (
  `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `post_date` int(10) UNSIGNED NOT NULL DEFAULT 0,
  `tb_record__id` int(4) UNSIGNED NULL DEFAULT 0 COMMENT '所属表id',
  `en_name` varchar(100) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '英文字段名',
  `specification` varchar(100) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '字段特别说明',
  `serialize` varchar(100) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '字段序列化值对',
  `field_type` tinyint(1) UNSIGNED NULL DEFAULT 0 COMMENT '字段类型',
  `relate_tb_name` varchar(100) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '关联表英文名',
  `relate_field_name` varchar(100) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '被关联字段英文名',
  PRIMARY KEY (`id`) USING BTREE,
  INDEX `post_date`(`post_date`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 5 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Compact;

-- ----------------------------
-- Records of tb_special_field
-- ----------------------------
INSERT INTO `tb_special_field` VALUES (1, 1577275769, 1, 'belong_db', '', 'a:1:{i:0;s:3:\"exp\";}', 0, '', '');
INSERT INTO `tb_special_field` VALUES (2, 1577275769, 1, 'has_special_field', '', 'a:2:{i:0;s:3:\"否\";i:1;s:3:\"是\";}', 0, '', '');
INSERT INTO `tb_special_field` VALUES (3, 1577275769, 1, 'has_relate_field', '', 'a:2:{i:0;s:3:\"否\";i:1;s:3:\"是\";}', 0, '', '');
INSERT INTO `tb_special_field` VALUES (4, 1577276520, 2, 'field_type', '', 'N;', 0, '', '');

-- ----------------------------
-- Table structure for vimshortcut
-- ----------------------------
DROP TABLE IF EXISTS `vimshortcut`;
CREATE TABLE `vimshortcut`  (
  `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `post_date` int(10) UNSIGNED NOT NULL DEFAULT 0,
  `shortcut` varchar(100) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '快捷键',
  `key_comment` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '快捷键说明',
  `is_multipart` tinyint(1) UNSIGNED NULL DEFAULT 0 COMMENT '是否为多环境快捷键',
  `key_multi_comment` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '多环境快捷键说明',
  `first_key` varchar(30) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '主键',
  `second_key` varchar(30) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '辅键',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = MyISAM AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

SET FOREIGN_KEY_CHECKS = 1;
